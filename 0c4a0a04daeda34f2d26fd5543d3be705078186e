{
  "comments": [
    {
      "key": {
        "uuid": "8c8e97c6_77ec6cfb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 27769
      },
      "writtenOn": "2020-08-29T01:11:47Z",
      "side": 1,
      "message": "worse than useless - throws the same exception, but that will replace the back trace, so the original exception location will be lost.",
      "revId": "0c4a0a04daeda34f2d26fd5543d3be705078186e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8c048e8_188cb0aa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5071
      },
      "writtenOn": "2020-08-29T08:51:16Z",
      "side": 1,
      "message": "No? That\u0027s not how it works?\nThe exception still embeds the location of where the exception was first frown. At least, that\u0027s what my dummy tests shows.\n\nFoo.java:\n```\npublic class Foo {\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tInteger.parseInt(\"abc\");\n\t\t} catch (Exception e) {\n\t\t\tthrow e;\n\t\t}\n\t}\n}\n```\nOutput:\n```\nException in thread \"main\" java.lang.NumberFormatException: For input string: \"abc\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:652)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:770)\n\tat Foo.main(Foo.java:4)\n```",
      "parentUuid": "8c8e97c6_77ec6cfb",
      "revId": "0c4a0a04daeda34f2d26fd5543d3be705078186e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03aefebd_781c1464",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 27769
      },
      "writtenOn": "2020-08-31T03:06:56Z",
      "side": 1,
      "message": "Sorry for the noise - I have recently been getting frustrated with lots of the below pattern in tests and went through this too quickly.\n\n  try {\n     // do something that throws an exception\n  } catch (Exception e) {\n    fail();\n  }\n\nOf course you are correct, this cleanup was removing useless, not worse than useless!",
      "parentUuid": "e8c048e8_188cb0aa",
      "revId": "0c4a0a04daeda34f2d26fd5543d3be705078186e",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
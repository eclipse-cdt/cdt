{
  "comments": [
    {
      "key": {
        "uuid": "50c5289b_6b561dae",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/core/ManagedCommandLineGenerator.java",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 27769
      },
      "writtenOn": "2021-02-24T16:29:38Z",
      "side": 1,
      "message": "IMHO All these fields should have been \"static\".",
      "revId": "0fce48345bd3c8efb5bb4a49c883f76a433290f3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "245d8deb_4384befe",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/core/ManagedCommandLineGenerator.java",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 178588
      },
      "writtenOn": "2021-02-24T16:38:55Z",
      "side": 1,
      "message": "I agree, but marking them static would would break the binary compatibility?\nAt the same time, the class is not API yet, so if there is a point in time to fix it,it\u0027s sort-of now.\nWDYT? Is it worth it?",
      "parentUuid": "50c5289b_6b561dae",
      "revId": "0fce48345bd3c8efb5bb4a49c883f76a433290f3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05e006b8_5ea361d0",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/core/ManagedCommandLineGenerator.java",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 27769
      },
      "writtenOn": "2021-02-24T18:15:25Z",
      "side": 1,
      "message": "It would break compatibility. My original idea of the new class extending this one was that all the static members be re declared, but that isn\u0027t relevant now.\n\nThe thing about the coding style here is that adding new constants in the future is not API breaking, but changing value or removing them is. So by making all these API we are promising these trivial constants are now part of the API going forward.\n\nPS. I don\u0027t know how much time you want to spend on this. I can support you as needed, but it turns out moving this internal class to public API raises lots of questions on a process that I am not familiar with. None of my comments or questions are meant to slow down your velocity, but I fear by asking them they may have that effect.",
      "parentUuid": "245d8deb_4384befe",
      "revId": "0fce48345bd3c8efb5bb4a49c883f76a433290f3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60e913b7_221b0bd0",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/core/ManagedCommandLineGenerator.java",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 178588
      },
      "writtenOn": "2021-02-24T18:41:31Z",
      "side": 1,
      "message": "Don\u0027t worry about slowing me down. Hopefully, I will learn what needs what in the long run so the number of questions will be lower over time.\nI\u0027m still a bit unused to the API model and need some time to get used to it. During this time, I\u0027d like to avoid causing trouble and therefore there are so many questions right now.\n\nIMO, the cleanest thing to do is to do what I did initially, a copy of the content. Then in that copy, we can fix these kinds of issues to have a nice and clean API going forward.\nMaybe this class could even be reduced a bit by removing the private methods since they are not API anyway and let the internal generateCommandLineInfo method call the public instance instead? If someone overrides the method, they can still use the non-static strings anyway. Would that work or is it still too intrusive?\n\nSomething like:\n\npublic IManagedCommandLineInfo generateCommandLineInfo(ITool tool, String commandName, String[] flags, String outputFlag, String outputPrefix, String outputName, String[] inputResources, String commandLinePattern) {\n\treturn org.eclipse.cdt.managedbuilder.core.ManagedCommandLineGenerator.getCommandLineGenerator().generateCommandLineInfo(tool, commandName, flags, outputFlag, outputPrefix, outputName, inputResources, commandLinePattern);\n}\n\nIt\u0027s sort-of inheriting the function while not extending...\n\nI guess we have diverged a bit form just \"static\" here to and started to talk about if they should be \"public\", \"protected\" or perhaps even \"private\"?",
      "parentUuid": "05e006b8_5ea361d0",
      "revId": "0fce48345bd3c8efb5bb4a49c883f76a433290f3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd1557e2_871b059e",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/core/MultiFileInfo.java",
        "patchSetId": 4
      },
      "lineNbr": 166,
      "author": {
        "id": 178588
      },
      "writtenOn": "2021-02-24T16:38:55Z",
      "side": 1,
      "message": "From PS2: I\u0027m not sure if this is the appropriate variant to do here, but looking at the other methods in this class, it looks like the way to go.",
      "range": {
        "startLine": 166,
        "startChar": 9,
        "endLine": 166,
        "endChar": 33
      },
      "revId": "0fce48345bd3c8efb5bb4a49c883f76a433290f3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c406954c_b2b42f57",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/core/MultiFileInfo.java",
        "patchSetId": 4
      },
      "lineNbr": 166,
      "author": {
        "id": 27769
      },
      "writtenOn": "2021-02-24T18:15:25Z",
      "side": 1,
      "message": "I don\u0027t know either. I didn\u0027t know what else to say, so I said nothing. I do wonder why some places do an instanceof check on fRis and some just cast it.",
      "parentUuid": "cd1557e2_871b059e",
      "range": {
        "startLine": 166,
        "startChar": 9,
        "endLine": 166,
        "endChar": 33
      },
      "revId": "0fce48345bd3c8efb5bb4a49c883f76a433290f3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54e4fabb_bc710bc7",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/core/MultiFileInfo.java",
        "patchSetId": 4
      },
      "lineNbr": 166,
      "author": {
        "id": 178588
      },
      "writtenOn": "2021-02-24T18:41:31Z",
      "side": 1,
      "message": "Ok, was unsure if the comment was missed.\n\nAs the others are doing it like this, I assume it\u0027s fine.",
      "parentUuid": "c406954c_b2b42f57",
      "range": {
        "startLine": 166,
        "startChar": 9,
        "endLine": 166,
        "endChar": 33
      },
      "revId": "0fce48345bd3c8efb5bb4a49c883f76a433290f3",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
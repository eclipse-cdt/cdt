{
  "comments": [
    {
      "key": {
        "uuid": "8761b321_e256f8a2",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPASTBaseSpecifier.java",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-12-17T18:59:55Z",
      "side": 1,
      "message": "Rewrite to avoid repeated code.",
      "revId": "2987d8f28f0202f1e30e48105000751a22f1bd0f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8761b321_225110b1",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/AccessContext.java",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-12-17T18:59:55Z",
      "side": 1,
      "message": "Please use proper capitalization and punctuation in comments (template -\u003e Templates, terminate with a dot).",
      "revId": "2987d8f28f0202f1e30e48105000751a22f1bd0f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8761b321_424c0c1d",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/SemanticUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 272,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-12-17T18:59:55Z",
      "side": 1,
      "message": "Unconditional expansion of ICPPAliasTemplate is wrong. Please remove these three lines and create a separate bug including the use case that requires ICPPAliasTemplate to be resolved. Resolution itself should probably be done in CPPASTBaseSpecifier.findBindings, not here.",
      "revId": "2987d8f28f0202f1e30e48105000751a22f1bd0f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8761b321_dc4f5c8c",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/SemanticUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 272,
      "author": {
        "id": 1578
      },
      "writtenOn": "2014-12-18T19:57:55Z",
      "side": 1,
      "message": "the method is SemanticUtil.getNestedType(..).\nI thought it means someone trying to get to the underlying type can call this method.\nIf type is a typedef or a plain alias then the method does exactly that so far. What I added isn\u0027t it just the same functionality for an alias that happens to contain template parameters?\nI\u0027m asking because the solution for your comment in CPPASTBaseSpecifier would look slightly different.\n\nThe other thing, what is an unconditional expansion? Doesn\u0027t \u0027while(...)\u0027 boil \ndown to a condition?",
      "parentUuid": "8761b321_424c0c1d",
      "revId": "2987d8f28f0202f1e30e48105000751a22f1bd0f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8761b321_5ca7ccc4",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/SemanticUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 272,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-12-18T20:05:36Z",
      "side": 1,
      "message": "Please notice that the method has the second argument, options, which controls what types get resolved and what not.\n\nTypedefs are resolved only when TDEF or COND_TDEF is specified. ICPPAliasTemplate is not a typedef, so it should not be resolved even when TDEF flag is specified.",
      "parentUuid": "8761b321_dc4f5c8c",
      "revId": "2987d8f28f0202f1e30e48105000751a22f1bd0f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8761b321_3ca2d083",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/SemanticUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 272,
      "author": {
        "id": 1578
      },
      "writtenOn": "2014-12-18T21:48:18Z",
      "side": 1,
      "message": "so should I introduce a new option then, or do you favour the solution from your first comment?",
      "parentUuid": "8761b321_5ca7ccc4",
      "revId": "2987d8f28f0202f1e30e48105000751a22f1bd0f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8761b321_5c84eceb",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/SemanticUtil.java",
        "patchSetId": 2
      },
      "lineNbr": 272,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-12-18T22:24:46Z",
      "side": 1,
      "message": "The solution from the first comment. Another alternative would be to make ICPPAliasTemplate extend ITypedef, but a naive attempt to make this change causes a number of test failures.",
      "parentUuid": "8761b321_3ca2d083",
      "revId": "2987d8f28f0202f1e30e48105000751a22f1bd0f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8761b321_e27f181b",
        "filename": "core/org.eclipse.cdt.ui.tests/ui/org/eclipse/cdt/ui/tests/text/contentassist2/CompletionTest_ClassReference_NoPrefix.java",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-12-17T18:59:55Z",
      "side": 1,
      "message": "$NON-NLS are not needed in tests.",
      "revId": "2987d8f28f0202f1e30e48105000751a22f1bd0f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
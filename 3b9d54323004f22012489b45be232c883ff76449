{
  "comments": [
    {
      "key": {
        "uuid": "2753a756_ac2b10b8",
        "filename": "core/org.eclipse.cdt.ui/plugin.xml",
        "patchSetId": 1
      },
      "lineNbr": 888,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-04-07T03:44:03Z",
      "side": 1,
      "message": "I don\u0027t think context sensitive keywords deserve a separate color. It will be less confusing if they use org.eclipse.cdt.ui.c_keyword.",
      "revId": "3b9d54323004f22012489b45be232c883ff76449",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2753a756_8ccf2c58",
        "filename": "core/org.eclipse.cdt.ui/plugin.xml",
        "patchSetId": 1
      },
      "lineNbr": 888,
      "author": {
        "id": 973
      },
      "writtenOn": "2014-04-07T06:18:53Z",
      "side": 1,
      "message": "The current infrastructure makes it a bit difficult to do this. The list of semantic highlightings that are applied to the code is determined by SemanticHighlightings.getSemanticHighlightings(). The CEditorColoringConfigurationBlock constructor goes through this same list, and creates a list item in the preferences UI for each one. Therefore, if context-sensitive keywords have a semantic highlighting, they will get their own preference item. Obviously, we don\u0027t want two different preference items backed by the same preference key - _that_ would be confusing.\n\nI suppose we could introduce new infrastructure to allow the list of highlightings applied to the code to be different from the list for which preference items are built. Is it worth it?",
      "parentUuid": "2753a756_ac2b10b8",
      "revId": "3b9d54323004f22012489b45be232c883ff76449",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0756a345_7d13afe8",
        "filename": "core/org.eclipse.cdt.ui/plugin.xml",
        "patchSetId": 1
      },
      "lineNbr": 888,
      "author": {
        "id": 973
      },
      "writtenOn": "2014-04-08T05:18:52Z",
      "side": 1,
      "message": "The above problem is actually fairly easy to solve. We can maintain a set of preference keys for which preference UI items have been created, and guard against creating a second item for the same key. Since items for syntax highlightings are created before items for semantic highlightings, this would result in the preference item for the \"Keyword\" syntax highlighting applying to both that and the Context-sensitive Keyword semantic highlighting.\n\nHowever, there is another issue that would need to be worked around. When the SemanticHighlightingManager builds HighlightingStyle objects corresponding to each of the semantic highlightings in initializeHighlightings(), it looks up the color under the preference key \u0027semanticHighlighting.\u003ckey\u003e.color\u0027 where \u0027key\u0027 is the highlighting\u0027s getPreferenceKey(). For the context-sensitive keyword highlighting, however, there would be no color under this naming scheme for \u003ckey\u003e \u003d \u0027c_keyword\u0027. We\u0027d have to introduce a mechanism for specifying different key naming schemes for different semantic highlightings based on whether they have their own preference or piggyback from a syntax highlighting preference.",
      "parentUuid": "2753a756_8ccf2c58",
      "revId": "3b9d54323004f22012489b45be232c883ff76449",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2753a756_4cdcf403",
        "filename": "core/org.eclipse.cdt.ui/plugin.xml",
        "patchSetId": 1
      },
      "lineNbr": 888,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-04-08T16:48:33Z",
      "side": 1,
      "message": "If context sensitive keywords have a different coloring preference, users who use a custom color for keywords would consider it a bug that \"final\u0027 and \u0027override\u0027 don\u0027t have the same color as other keywords.\n\nCan we get away without creating a separate semantic highlighting for the context sensitive keywords?",
      "parentUuid": "2753a756_8ccf2c58",
      "revId": "3b9d54323004f22012489b45be232c883ff76449",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0756a345_8b8e3d8a",
        "filename": "core/org.eclipse.cdt.ui/plugin.xml",
        "patchSetId": 1
      },
      "lineNbr": 888,
      "author": {
        "id": 973
      },
      "writtenOn": "2014-04-08T17:04:30Z",
      "side": 1,
      "message": "I can\u0027t see a way to do that.\n\nWhat we can do is hack the infrastructure to allow the semantic highlighting for context-sensitive keywords to be backed by the same prefs as the syntax highlighting for regular keywords. I wanted to avoid doing this because it would look a bit ugly, but I can do it.",
      "parentUuid": "2753a756_4cdcf403",
      "revId": "3b9d54323004f22012489b45be232c883ff76449",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0756a345_4fa263f7",
        "filename": "core/org.eclipse.cdt.ui/plugin.xml",
        "patchSetId": 1
      },
      "lineNbr": 888,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-04-12T16:51:55Z",
      "side": 1,
      "message": "It looks like it\u0027s the right thing to do from the user experience perspective.",
      "parentUuid": "0756a345_8b8e3d8a",
      "revId": "3b9d54323004f22012489b45be232c883ff76449",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
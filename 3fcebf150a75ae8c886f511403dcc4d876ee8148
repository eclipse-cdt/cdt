{
  "comments": [
    {
      "key": {
        "uuid": "472a5bc0_60178151",
        "filename": "debug/org.eclipse.cdt.debug.core/src/org/eclipse/cdt/debug/core/sourcelookup/SourceSubstitutePathSourceContainer.java",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 592
      },
      "writtenOn": "2015-07-16T14:10:23Z",
      "side": 1,
      "message": "usually that would be called createSomething, i.e.\ncreateSourceContainer",
      "revId": "3fcebf150a75ae8c886f511403dcc4d876ee8148",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "472a5bc0_4014fd4a",
        "filename": "debug/org.eclipse.cdt.debug.core/src/org/eclipse/cdt/debug/internal/core/sourcelookup/CSourceLookupDirector.java",
        "patchSetId": 3
      },
      "lineNbr": 212,
      "author": {
        "id": 592
      },
      "writtenOn": "2015-07-16T14:10:23Z",
      "side": 1,
      "message": "That seems weird that source lookup director would know about a speicifc type, why this this in here?",
      "revId": "3fcebf150a75ae8c886f511403dcc4d876ee8148",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "472a5bc0_c02f4d11",
        "filename": "debug/org.eclipse.cdt.debug.core/src/org/eclipse/cdt/debug/internal/core/sourcelookup/CSourceLookupDirector.java",
        "patchSetId": 3
      },
      "lineNbr": 212,
      "author": {
        "id": 27769
      },
      "writtenOn": "2015-07-16T14:58:47Z",
      "side": 1,
      "message": "This method should have been removed, the functionality was actually moved into org.eclipse.cdt.dsf.mi.service.CSourceSubstitutePath.setSourceSubstitutePath(ISourceSubstituteDMContext, ISourceContainer[], RequestMonitor)",
      "parentUuid": "472a5bc0_4014fd4a",
      "revId": "3fcebf150a75ae8c886f511403dcc4d876ee8148",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "472a5bc0_a02059a4",
        "filename": "debug/org.eclipse.cdt.debug.core/src/org/eclipse/cdt/debug/internal/core/sourcelookup/MapEntrySourceContainerType.java",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 592
      },
      "writtenOn": "2015-07-16T14:10:23Z",
      "side": 1,
      "message": "protected ISourceContainer createEntrySourceContainer...",
      "revId": "3fcebf150a75ae8c886f511403dcc4d876ee8148",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "472a5bc0_e01a5174",
        "filename": "debug/org.eclipse.cdt.debug.core/src/org/eclipse/cdt/debug/internal/core/sourcelookup/MappingSourceContainerType.java",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 592
      },
      "writtenOn": "2015-07-16T14:10:23Z",
      "side": 1,
      "message": "pprotected ISourceContainer createSourceContainer",
      "revId": "3fcebf150a75ae8c886f511403dcc4d876ee8148",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "472a5bc0_00bcc5b0",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/launching/FinalLaunchSequence.java",
        "patchSetId": 3
      },
      "lineNbr": 502,
      "author": {
        "id": 592
      },
      "writtenOn": "2015-07-16T14:10:23Z",
      "side": 1,
      "message": "Just to make it safer\ntry {\n  ...\n} catch (Eception e) {\n   requestMonitor.done();\n}\naround whole method body probably",
      "revId": "3fcebf150a75ae8c886f511403dcc4d876ee8148",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "472a5bc0_d97e285d",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/launching/FinalLaunchSequence.java",
        "patchSetId": 3
      },
      "lineNbr": 502,
      "author": {
        "id": 27769
      },
      "writtenOn": "2015-07-17T08:47:30Z",
      "side": 1,
      "message": "On further review, I am not sure why adding the try/catch makes it safer? Can you elaborate. It seems that if I add it, it could lead to situations where something has gone wrong, the sub path has not been performed, but the user has not had any indication as to why.\n\nI can guess that the issue has something to do with reluctance to change FinalLaunchSequence, but if so, how can you suggest de-risking adding the new feature, without making the feature\u0027s failures invisible?\n\nNote that the Step\u0027s execution catches Throwable and terminates the sequence.",
      "parentUuid": "472a5bc0_00bcc5b0",
      "revId": "3fcebf150a75ae8c886f511403dcc4d876ee8148",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "472a5bc0_80a27581",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/CSourceSubstitutePath.java",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 592
      },
      "writtenOn": "2015-07-16T14:10:23Z",
      "side": 1,
      "message": "Not sure this is right, if you monitor is done on first element, and next element is your source container how you can use now in queue? And it is not yours you will be doing done again on the same monitor.",
      "revId": "3fcebf150a75ae8c886f511403dcc4d876ee8148",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "472a5bc0_c0010d7a",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/CSourceSubstitutePath.java",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 27769
      },
      "writtenOn": "2015-07-16T14:58:47Z",
      "side": 1,
      "message": "The monitor is a counting one, have I used it incorrectly? For each container there should be two done() calls, first for the MI command if applicable, second for the recursion, if applicable. And of course on the recursion a further counting monitor is created, which means in total there needs to be done() call twice for each node in the tree.\n\nPlease let me know if I have completely missed the point of your feedback.",
      "parentUuid": "472a5bc0_80a27581",
      "revId": "3fcebf150a75ae8c886f511403dcc4d876ee8148",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
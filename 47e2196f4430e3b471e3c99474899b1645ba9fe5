{
  "comments": [
    {
      "key": {
        "uuid": "19fe67cb_5830163a",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/language/settings/providers/AbstractBuildCommandParser.java",
        "patchSetId": 8
      },
      "lineNbr": 211,
      "author": {
        "id": 27769
      },
      "writtenOn": "2018-11-26T23:26:14Z",
      "side": 1,
      "message": "Presumably this map can be cached?",
      "revId": "47e2196f4430e3b471e3c99474899b1645ba9fe5",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0d988d3_a65b4b04",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/language/settings/providers/AbstractBuildCommandParser.java",
        "patchSetId": 8
      },
      "lineNbr": 211,
      "author": {
        "id": 71355
      },
      "writtenOn": "2018-11-27T13:03:59Z",
      "side": 1,
      "message": "it depends : can the getCompilerPatternExtended() or getPatternFileExtensions() return something different ?",
      "parentUuid": "19fe67cb_5830163a",
      "revId": "47e2196f4430e3b471e3c99474899b1645ba9fe5",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f0dcb00_d343d949",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/language/settings/providers/AbstractBuildCommandParser.java",
        "patchSetId": 8
      },
      "lineNbr": 211,
      "author": {
        "id": 27769
      },
      "writtenOn": "2018-11-27T13:51:17Z",
      "side": 1,
      "message": "That is fundamentally the question of this patch. The idea was to take what I did in patchset 1, improve as necessary and verify what can/can\u0027t be cached. See my first comment:\n\n \u003e This is my experiment. I have not thought properly about life-cycle\n \u003e of the Pattern cache.\n\nIf the lifecycle works, then great, nothing else matters much. i.e. it does not matter much how fast you create the thing that is going to be cached if you only have to do it once instead of once per line x 300,000 lines.",
      "parentUuid": "b0d988d3_a65b4b04",
      "revId": "47e2196f4430e3b471e3c99474899b1645ba9fe5",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f04774e2_d025d6d7",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/language/settings/providers/AbstractBuildCommandParser.java",
        "patchSetId": 8
      },
      "lineNbr": 211,
      "author": {
        "id": 71355
      },
      "writtenOn": "2018-11-28T00:22:36Z",
      "side": 1,
      "message": "To test it so far I\u0027ve been using the RegexErrorParserTests.testRegexErrorParserParseOutput test method. \nThis makes two calls to the makePattern() method. The first time, it initializes the pattern and the map and the second time uses both of them already cached/created. For both calls, the getCompilerPatternExtended() and getPatternFileExtensions() return the same String values. So in this test case everything will work as intended. \nI don\u0027t know whether there might be cases where these two could return something different.",
      "parentUuid": "5f0dcb00_d343d949",
      "revId": "47e2196f4430e3b471e3c99474899b1645ba9fe5",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56933d9f_09dab4f5",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/language/settings/providers/AbstractBuildCommandParser.java",
        "patchSetId": 8
      },
      "lineNbr": 211,
      "author": {
        "id": 27769
      },
      "writtenOn": "2018-11-28T11:51:20Z",
      "side": 1,
      "message": "That is a good test, but there are no automatic tests (AFAIK) that test the performance of the parser. If you can create one that would be great, but it might also be overkill if you can simply reproduce it manually with a few simple steps.",
      "parentUuid": "f04774e2_d025d6d7",
      "revId": "47e2196f4430e3b471e3c99474899b1645ba9fe5",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b73f606_00752023",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/language/settings/providers/AbstractBuildCommandParser.java",
        "patchSetId": 8
      },
      "lineNbr": 231,
      "author": {
        "id": 27769
      },
      "writtenOn": "2018-11-26T23:26:14Z",
      "side": 1,
      "message": "This needs a CQ - we can\u0027t copy thirdparty code.",
      "revId": "47e2196f4430e3b471e3c99474899b1645ba9fe5",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a002c13e_89f9d96c",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/language/settings/providers/AbstractBuildCommandParser.java",
        "patchSetId": 8
      },
      "lineNbr": 231,
      "author": {
        "id": 71355
      },
      "writtenOn": "2018-11-27T13:03:59Z",
      "side": 1,
      "message": "I\u0027ll modify the method enough so that we don\u0027t need a CQ : after all a while loop in a for loop is not a proprietary code.",
      "parentUuid": "5b73f606_00752023",
      "revId": "47e2196f4430e3b471e3c99474899b1645ba9fe5",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36c38002_5ae99bcd",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/language/settings/providers/AbstractBuildCommandParser.java",
        "patchSetId": 8
      },
      "lineNbr": 258,
      "author": {
        "id": 27769
      },
      "writtenOn": "2018-11-26T23:26:14Z",
      "side": 1,
      "message": "This is what I remembered was the slowest line. If we can cache Patter.compile(pattern) then we are in the best shape?",
      "revId": "47e2196f4430e3b471e3c99474899b1645ba9fe5",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "043b57c7_4e9bf593",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/language/settings/providers/AbstractBuildCommandParser.java",
        "patchSetId": 8
      },
      "lineNbr": 258,
      "author": {
        "id": 27769
      },
      "writtenOn": "2018-11-26T23:29:07Z",
      "side": 1,
      "message": "See https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d516587#c1\n\nEven if you get makePattern down to 0 time, the overall time reduction will be 50%. My original prototype (patch set 1) was a 75% reduction.",
      "parentUuid": "36c38002_5ae99bcd",
      "revId": "47e2196f4430e3b471e3c99474899b1645ba9fe5",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4673ae23_ebb0851c",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/language/settings/providers/AbstractBuildCommandParser.java",
        "patchSetId": 8
      },
      "lineNbr": 258,
      "author": {
        "id": 71355
      },
      "writtenOn": "2018-11-27T13:03:59Z",
      "side": 1,
      "message": "yes by rebasing on the latest from master I forgot to keep your change.",
      "parentUuid": "36c38002_5ae99bcd",
      "revId": "47e2196f4430e3b471e3c99474899b1645ba9fe5",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
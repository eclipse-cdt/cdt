{
  "comments": [
    {
      "key": {
        "uuid": "d28fae38_bbb2bdc8",
        "filename": "codan/org.eclipse.cdt.codan.checkers/plugin.xml",
        "patchSetId": 4
      },
      "lineNbr": 125,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "I think it should be a warning, to match what compilers do.",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46b97eaa_67ec09b7",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-23T00:59:07Z",
      "side": 1,
      "message": "Since you are adding this @SuppressWarnings(\"restriction\"), the ones on the individual methods in this class can be removed.",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6279142_081ad355",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "Please use CamelCase for the enumeration name.\n\n(I prefer CamelCase for the enumerator names too, but existing usage is somewhat mixed.)",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40422ae8_48c52b77",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "Analyzer",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a86ab57d_a028bbdb",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "The \"op !\u003d null\" is redundant in this check.",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9629687_265982c8",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 13743
      },
      "writtenOn": "2019-09-22T11:33:09Z",
      "side": 1,
      "message": "op is no redudant indeed I receive a warning if I remove it.",
      "parentUuid": "a86ab57d_a028bbdb",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c566319_4f73c909",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 154,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-23T00:59:07Z",
      "side": 1,
      "message": "Ok, it\u0027s fine to keep then.",
      "parentUuid": "d9629687_265982c8",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f72789a_a7a20b36",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "It\u0027s not enough to check for the scope being local, because local scopes can be nested due to local classes:\n\n    void foo() {\n\tint local;\n\t\n\tstruct S {\n\t    int* bar() {\n\t\treturn \u0026local;  // ok\n\t    }\n\t};\n\t\n\tS s;\n\t\n\tint* ptr \u003d s.bar();\n    }\n\nWe need to check that the local scope is that of the function whose return statement we\u0027re analyzing.",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66af4369_300babae",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T18:05:26Z",
      "side": 1,
      "message": "It looks like that doesn\u0027t actually compile.\n\nYou can have a similar situation with a lambda, but the lambda needs to capture the enclosing local. Does the name of a capture resolve to an ICPPField? If so, then we don\u0027t need to do anything extra to handle this case.",
      "parentUuid": "9f72789a_a7a20b36",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "328fbe73_f90b62bb",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T18:10:59Z",
      "side": 1,
      "message": "I checked, and the name of a lambda capture does _not_ resolve to an ICPPField.\n\nSo, we need to make sure we handle this case correctly. Here is an example that compiles:\n\n    void foo() {\n\tint local;\n\t\n\tauto s \u003d [\u0026local]() {\n\t    return \u0026local;  // ok\n\t};\n\t\n\tint* ptr \u003d s();\n    }",
      "parentUuid": "66af4369_300babae",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53dccc5c_c51a96c4",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 13743
      },
      "writtenOn": "2019-09-22T11:33:09Z",
      "side": 1,
      "message": "I confirm what I said for lambda expressions.",
      "parentUuid": "328fbe73_f90b62bb",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a54eeb48_8e4cc1cb",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-23T00:59:07Z",
      "side": 1,
      "message": "Thanks. Let\u0027s still add the above example as a testcase.",
      "parentUuid": "53dccc5c_c51a96c4",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97a709ca_11dd0f7a",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 165,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "Likewise, \"op !\u003d null\" is redundant.",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ad027fa_46728baa",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 165,
      "author": {
        "id": 13743
      },
      "writtenOn": "2019-09-22T11:33:09Z",
      "side": 1,
      "message": "op is no redudant indeed I receive a warning if I remove it.",
      "parentUuid": "97a709ca_11dd0f7a",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a966232_b43648b3",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "We can check binding.isStatic() sooner and early-exit.",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "907d48cf_4b2f6ba6",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 187,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "analyzer",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "933df691_586f13a6",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 196,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "As in the const/static checker, we want to check for a pointer / reference based on the IType, not based on pointer operators, to handle typedefs.",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2415865b_964af412",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 234,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "ret.getReturnValue() -\u003e returnValue",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c8e516_e8c63724",
        "filename": "codan/org.eclipse.cdt.codan.checkers/src/org/eclipse/cdt/codan/internal/checkers/ReturnChecker.java",
        "patchSetId": 4
      },
      "lineNbr": 234,
      "author": {
        "id": 13743
      },
      "writtenOn": "2019-09-22T11:33:09Z",
      "side": 1,
      "message": "returnValue is declared as IASTInitializerClause and it\u0027s initialized with ret.getReturnArgument().",
      "parentUuid": "2415865b_964af412",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bff8b049_b75d5694",
        "filename": "codan/org.eclipse.cdt.codan.core.tests/src/org/eclipse/cdt/codan/core/internal/checkers/ReturnCheckerTest.java",
        "patchSetId": 4
      },
      "lineNbr": 536,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "Since these test cases are together with other test cases in ReturnChecker, and the test name doesn\u0027t suggest it\u0027s testing for returning a dangling pointer / reference, it\u0027s not obvious what this is testing.\n\nPerhaps include the bug number in the test names, or alternatively put them into a new file?",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "559c9876_0d4c62f6",
        "filename": "codan/org.eclipse.cdt.codan.core.tests/src/org/eclipse/cdt/codan/core/internal/checkers/ReturnCheckerTest.java",
        "patchSetId": 4
      },
      "lineNbr": 567,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "Should this be \u0027cond ? \u0026a : \u0026b\u0027?",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f7bb166_86776d06",
        "filename": "codan/org.eclipse.cdt.codan.core.tests/src/org/eclipse/cdt/codan/core/internal/checkers/ReturnCheckerTest.java",
        "patchSetId": 4
      },
      "lineNbr": 599,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "This is not valid syntax. The valid syntax would be:\n\n    void (Test::*bar())(double*) {\n\n(Please file a bug about the codan test suite passing test cases with syntax errors. It should check for that and fail the test.)",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8da90819_2d323edb",
        "filename": "codan/org.eclipse.cdt.codan.core.tests/src/org/eclipse/cdt/codan/core/internal/checkers/ReturnCheckerTest.java",
        "patchSetId": 4
      },
      "lineNbr": 600,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-09-01T17:57:03Z",
      "side": 1,
      "message": "Also not valid. You need:\n\n    return \u0026Test::foo;",
      "revId": "4936fa589bb6da7d509349f5f604add9f6010a76",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
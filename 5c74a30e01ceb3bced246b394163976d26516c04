{
  "comments": [
    {
      "key": {
        "uuid": "c7672b30_188f1304",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/contentassist/CContentAssistInvocationContext.java",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-07-29T21:07:21Z",
      "side": 1,
      "message": "Use of Lazy negatively affects readability of the code in my opinion.",
      "revId": "5c74a30e01ceb3bced246b394163976d26516c04",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7672b30_4ced4c2d",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/contentassist/CContentAssistInvocationContext.java",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 661
      },
      "writtenOn": "2014-07-30T13:14:52Z",
      "side": 1,
      "message": "Hm... I only see a negative impact on getting an overview about all member variables of the class. We get rid of half the fields though. Initialization code is located near the variable itself. No code duplication for checking the initialization state of every field. The getter-methods become very lean. And no mysterious method call for initialization as side-effect as in getContextInformationOffset().\n\nYet, that remains an opinion too. What do you suggest? Getting a third opinion? :)",
      "parentUuid": "c7672b30_188f1304",
      "revId": "5c74a30e01ceb3bced246b394163976d26516c04",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7672b30_823f2d72",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/contentassist/CContentAssistInvocationContext.java",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-07-30T19:40:06Z",
      "side": 1,
      "message": "Additional fields can be avoided the same way it is done in Lazy. One possible, although not perfect measure of code complexity is total line count.",
      "parentUuid": "c7672b30_4ced4c2d",
      "revId": "5c74a30e01ceb3bced246b394163976d26516c04",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7672b30_e52a6b02",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/contentassist/CContentAssistInvocationContext.java",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 661
      },
      "writtenOn": "2014-07-31T08:05:52Z",
      "side": 1,
      "message": "Well, that has other disadvantages as well:\n- Either we would need to declare every field to have type Object.\n- Or we would need to create an uninitialized value for every field type we have. Which would not work for the primitives.\n\nRegarding line count: We get an additional 3 lines per field (@Override; calculateValue method declaration and two closing }). We get rid of 3 lines (condiftion for initialization; assignment and a closing }). So the difference is just one more line with a closing }. But we have a smaller McCabe complexity in the initialization code (calculateValue). I\u0027m not aware of a metric measuring duplication.\n\nI think its an issue of getting used to the initialization pattern.",
      "parentUuid": "c7672b30_823f2d72",
      "revId": "5c74a30e01ceb3bced246b394163976d26516c04",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7672b30_9b303873",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/contentassist/CContentAssistInvocationContext.java",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-07-31T17:19:54Z",
      "side": 1,
      "message": "OK, you persuaded me.",
      "parentUuid": "c7672b30_e52a6b02",
      "revId": "5c74a30e01ceb3bced246b394163976d26516c04",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7672b30_5874eb74",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/contentassist/DOMCompletionProposalComputer.java",
        "patchSetId": 2
      },
      "lineNbr": 475,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-07-29T21:07:21Z",
      "side": 1,
      "message": "Simpler append(\", \");\n\nIdeally, presence or absence of space should be controlled by the corresponding preference.",
      "revId": "5c74a30e01ceb3bced246b394163976d26516c04",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7672b30_af55f227",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/contentassist/DOMCompletionProposalComputer.java",
        "patchSetId": 2
      },
      "lineNbr": 475,
      "author": {
        "id": 661
      },
      "writtenOn": "2014-07-30T13:14:52Z",
      "side": 1,
      "message": "Improved it to query the project properties for checking the formatter settings.",
      "parentUuid": "c7672b30_5874eb74",
      "revId": "5c74a30e01ceb3bced246b394163976d26516c04",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7672b30_b879bf6e",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/contentassist/DOMCompletionProposalComputer.java",
        "patchSetId": 2
      },
      "lineNbr": 490,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-07-29T21:07:21Z",
      "side": 1,
      "message": "Should there be extra spaces here too?",
      "revId": "5c74a30e01ceb3bced246b394163976d26516c04",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7672b30_8f5ab654",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/contentassist/DOMCompletionProposalComputer.java",
        "patchSetId": 2
      },
      "lineNbr": 490,
      "author": {
        "id": 661
      },
      "writtenOn": "2014-07-30T13:14:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7672b30_b879bf6e",
      "revId": "5c74a30e01ceb3bced246b394163976d26516c04",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7672b30_f897b718",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/contentassist/Lazy.java",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-07-29T21:07:21Z",
      "side": 1,
      "message": "Redundant initialization.",
      "revId": "5c74a30e01ceb3bced246b394163976d26516c04",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7672b30_8c35a463",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/contentassist/Lazy.java",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 661
      },
      "writtenOn": "2014-07-30T13:14:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7672b30_f897b718",
      "revId": "5c74a30e01ceb3bced246b394163976d26516c04",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7672b30_d8947b17",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/contentassist/Lazy.java",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-07-29T21:07:21Z",
      "side": 1,
      "message": "This can be implemented as:\n\n    private static final Object NOT_INITIALIZED \u003d new Object();\n    private Object value \u003d NOT_INITIALIZED;\n\n    public E value() {\n        if (value \u003d\u003d NOT_INITIALIZED) {\n            value \u003d calculateValue();\n        }\n        return (E) value;\n    }",
      "revId": "5c74a30e01ceb3bced246b394163976d26516c04",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7672b30_ec2a5802",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/text/contentassist/Lazy.java",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 661
      },
      "writtenOn": "2014-07-30T13:14:52Z",
      "side": 1,
      "message": "Done - Yes, that\u0027s better.",
      "parentUuid": "c7672b30_d8947b17",
      "revId": "5c74a30e01ceb3bced246b394163976d26516c04",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
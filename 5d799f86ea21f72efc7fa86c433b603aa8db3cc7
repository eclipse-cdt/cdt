{
  "comments": [
    {
      "key": {
        "uuid": "a766b734_afd00972",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/editor/SemanticHighlightingPresenter.java",
        "patchSetId": 1
      },
      "lineNbr": 266,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-10-26T16:00:48Z",
      "side": 1,
      "message": "Can we avoid this by creating large enough number of unique highlighting styles?",
      "revId": "5d799f86ea21f72efc7fa86c433b603aa8db3cc7",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a766b734_0f993dd1",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/editor/SemanticHighlightingPresenter.java",
        "patchSetId": 1
      },
      "lineNbr": 266,
      "author": {
        "id": 973
      },
      "writtenOn": "2014-10-26T19:38:20Z",
      "side": 1,
      "message": "I guess so, but it would make things more complicated:\n  - we\u0027d have to come up with a unique HighlightingStyle for each highllighting, and store them in a HighlightingStyle[]\n  - in SemanticHighlightingTest.setUp(), we\u0027d have to map them to preference values, and set all the preferences to install them (and possibly remember the old values?)\n  - when getting the HighlightedPositions from the document, to identify which highlighting they belong to we\u0027d have to compare their HighlightingStyle to each style in our array\n  - in tearDown(), we\u0027d have to restore the old preference values (?)\n\nNote that we use static constants to give different behaviour for tests elsewhere: CPPASTNameBase.sAllowRecursionBindings, CPPASTNameBase.sAllowNameComputation, CModelListener.sSuppressUpdateOfLastRecentlyUsed.",
      "parentUuid": "a766b734_afd00972",
      "revId": "5d799f86ea21f72efc7fa86c433b603aa8db3cc7",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a766b734_0757612f",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/editor/SemanticHighlightingPresenter.java",
        "patchSetId": 1
      },
      "lineNbr": 266,
      "author": {
        "id": 577
      },
      "writtenOn": "2014-10-27T21:19:37Z",
      "side": 1,
      "message": "\u003e - we\u0027d have to come up with a unique HighlightingStyle for each highllighting, and store them in a HighlightingStyle[]\n\nThis should be easy to do since we can use a unique color for each style\n\n\u003e - in SemanticHighlightingTest.setUp(), we\u0027d have to map them to preference values, and set all the preferences to install them (and possibly remember the old values?)\n\nDoesn\u0027t look like a difficult thing to do. There is not need to remember old values.\n\n\u003e - when getting the HighlightedPositions from the document, to identify which highlighting they belong to we\u0027d have to compare their HighlightingStyle to each style in our array\n\nWe can use a hash map from color to the key.\n\n\u003e - in tearDown(), we\u0027d have to restore the old preference values (?)\n\nThis can be done easily by calling IPreferenceStore.setToDefault(String) method for each of the styles.",
      "parentUuid": "a766b734_0f993dd1",
      "revId": "5d799f86ea21f72efc7fa86c433b603aa8db3cc7",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
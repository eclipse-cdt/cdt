{
  "comments": [
    {
      "key": {
        "uuid": "0082e882_132a224f",
        "filename": "core/org.eclipse.cdt.core.tests/parser/org/eclipse/cdt/core/parser/tests/ast2/AST2CPPTests.java",
        "patchSetId": 3
      },
      "lineNbr": 12924,
      "author": {
        "id": 164180
      },
      "writtenOn": "2019-02-19T07:03:34Z",
      "side": 1,
      "message": "Why is it not enough to just `bh.assertNonProblem(\"level1(level0 a)\", \"level1\");` to trigger an error? (`assertEquals(ctor, implicitNames[0].resolveBinding());` will fail if the change in `if (arguments.length \u003d\u003d 1 \u0026\u0026 arguments[0] instanceof EvalInitList \u0026\u0026 !fUsesBracedInitList) {` in EvalTypeId is reverted.)",
      "revId": "67ec0562583818efce3d5f4137e80dca5af7ae96",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83251381_585c98de",
        "filename": "core/org.eclipse.cdt.core.tests/parser/org/eclipse/cdt/core/parser/tests/ast2/AST2CPPTests.java",
        "patchSetId": 3
      },
      "lineNbr": 12924,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-02-19T21:24:51Z",
      "side": 1,
      "message": "\u003e Why is it not enough to just `bh.assertNonProblem(\"level1(level0\n \u003e a)\", \"level1\");` to trigger an error?\n\n`bh.assertNonProblem(\"level1(level0 a)\", \"level1\");` checks the binding at the constructor declaration. There is no error at the constructor declaration, the error is at the constructor use, which is `level1{{1,2}};`.",
      "parentUuid": "0082e882_132a224f",
      "revId": "67ec0562583818efce3d5f4137e80dca5af7ae96",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14099d7b_2a89521f",
        "filename": "core/org.eclipse.cdt.core.tests/parser/org/eclipse/cdt/core/parser/tests/ast2/AST2CPPTests.java",
        "patchSetId": 3
      },
      "lineNbr": 12924,
      "author": {
        "id": 164180
      },
      "writtenOn": "2019-02-19T22:23:25Z",
      "side": 1,
      "message": "Sorry, I meant `bh.assertNonProblem(\"level1{{1,2}};\", 6);` doesn\u0027t trigger an error (in the case where the issue is not fixed).",
      "parentUuid": "83251381_585c98de",
      "revId": "67ec0562583818efce3d5f4137e80dca5af7ae96",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08506ddf_8a8bb7b5",
        "filename": "core/org.eclipse.cdt.core.tests/parser/org/eclipse/cdt/core/parser/tests/ast2/AST2CPPTests.java",
        "patchSetId": 3
      },
      "lineNbr": 12924,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-02-19T23:37:06Z",
      "side": 1,
      "message": "Ah, ok. That question makes more sense :)\n\nThe answer there is that assertNonProblem() only checks for the binding of an explicit name, which for \"level1\" is the class type. The class type is resolved fine, there is no problem.\n\nIt would be possible to get assertNonProblem() to check bindings of implicit names, by checking if the node is an IASTImplicitNameOwner. The call still wouldn\u0027t be (\"level{{1,2}};\", 6), though - it would need to select the node that owns the implicit names (in this case, the simple type constructor expression).",
      "parentUuid": "14099d7b_2a89521f",
      "revId": "67ec0562583818efce3d5f4137e80dca5af7ae96",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9094725b_d6153f5c",
        "filename": "core/org.eclipse.cdt.core.tests/parser/org/eclipse/cdt/core/parser/tests/ast2/AST2CPPTests.java",
        "patchSetId": 3
      },
      "lineNbr": 12924,
      "author": {
        "id": 973
      },
      "writtenOn": "2019-02-19T23:41:02Z",
      "side": 1,
      "message": "Actually, it looks like we have assertImplicitName() which effectively does that.\n\nToo late, though, I already merged the patch :)",
      "parentUuid": "08506ddf_8a8bb7b5",
      "revId": "67ec0562583818efce3d5f4137e80dca5af7ae96",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
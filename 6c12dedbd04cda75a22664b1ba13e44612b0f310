{
  "comments": [
    {
      "key": {
        "uuid": "8761b321_5d11740a",
        "filename": "dsf-gdb/org.eclipse.cdt.tests.dsf.gdb/src/org/eclipse/cdt/tests/dsf/gdb/tests/MIRegistersTest.java",
        "patchSetId": 22
      },
      "lineNbr": 395,
      "author": {
        "id": 598
      },
      "writtenOn": "2015-01-06T00:08:01Z",
      "side": 1,
      "message": "I\u0027m not sure this still does what it used to. I think before, it was getting the thread context now it will get the process context? Maybe Alvaro can answer that.",
      "revId": "6c12dedbd04cda75a22664b1ba13e44612b0f310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8761b321_b8bc1625",
        "filename": "dsf-gdb/org.eclipse.cdt.tests.dsf.gdb/src/org/eclipse/cdt/tests/dsf/gdb/tests/MIRegistersTest.java",
        "patchSetId": 22
      },
      "lineNbr": 395,
      "author": {
        "id": 482
      },
      "writtenOn": "2015-01-06T13:44:02Z",
      "side": 1,
      "message": "In the version before it was resolving the container context from the thread context, in this version it\u0027s resolving the container context directly.  This does not seem to affect the intention of the test case.\n\nI did not actually create this test case and I am a bit uncertain of the value of it as each thread has its own register context, so we can not normally rely on having the same register values unless they are executing in sync.\n \nShouldn\u0027t this validate that we do have a different register context per thread instead ?\nAny ideas ?",
      "parentUuid": "8761b321_5d11740a",
      "revId": "6c12dedbd04cda75a22664b1ba13e44612b0f310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8761b321_5317a550",
        "filename": "dsf-gdb/org.eclipse.cdt.tests.dsf.gdb/src/org/eclipse/cdt/tests/dsf/gdb/tests/MIRegistersTest.java",
        "patchSetId": 22
      },
      "lineNbr": 395,
      "author": {
        "id": 457
      },
      "writtenOn": "2015-01-06T15:16:35Z",
      "side": 1,
      "message": "Notice that the comparison of register values is for the same thread.  I believe the test is making sure the caching mechanism is not broken.\n\nIt fetches the first 5 registers of thread 2 frame 0, then fetches one register from thread 1, apparently to point the service to a different execution context, then refetches the first 5 regs for thread 2 frame 0 and compares the first results with the second ones to make sure the service did return the same thing.\n\nLooking at the caching in MIRegisters, I don\u0027t really see what the value of this test is.  Maybe when the test was written the caching was done differently and the test was exercising the old logic.\n\nIn any case, the change above is fine although less efficient since it has to go to the service to fetch the container synchronously.  We could instead get the StoppedEvent from the above runToLine call and use it to get the container like before, which does not need the service.",
      "parentUuid": "8761b321_b8bc1625",
      "revId": "6c12dedbd04cda75a22664b1ba13e44612b0f310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8761b321_b365593b",
        "filename": "dsf-gdb/org.eclipse.cdt.tests.dsf.gdb/src/org/eclipse/cdt/tests/dsf/gdb/tests/MIRegistersTest.java",
        "patchSetId": 22
      },
      "lineNbr": 395,
      "author": {
        "id": 598
      },
      "writtenOn": "2015-01-06T18:22:48Z",
      "side": 1,
      "message": "Done. I used the StoppedEvent.",
      "parentUuid": "8761b321_5317a550",
      "revId": "6c12dedbd04cda75a22664b1ba13e44612b0f310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8761b321_3314a94a",
        "filename": "dsf-gdb/org.eclipse.cdt.tests.dsf.gdb/src/org/eclipse/cdt/tests/dsf/gdb/tests/MIRegistersTest.java",
        "patchSetId": 22
      },
      "lineNbr": 415,
      "author": {
        "id": 457
      },
      "writtenOn": "2015-01-06T15:16:35Z",
      "side": 1,
      "message": "This seems redundant.  No need to create an IMIExecutionDMC for tid2, when ctxts[1] is that context.\n\nSame thing below for tid1.",
      "revId": "6c12dedbd04cda75a22664b1ba13e44612b0f310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8761b321_135a4d7b",
        "filename": "dsf-gdb/org.eclipse.cdt.tests.dsf.gdb/src/org/eclipse/cdt/tests/dsf/gdb/tests/MIRegistersTest.java",
        "patchSetId": 22
      },
      "lineNbr": 415,
      "author": {
        "id": 598
      },
      "writtenOn": "2015-01-06T18:22:48Z",
      "side": 1,
      "message": "Done. I used ctxts[1] and ctxts[0] below.",
      "parentUuid": "8761b321_3314a94a",
      "revId": "6c12dedbd04cda75a22664b1ba13e44612b0f310",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "c73e4bec_5b796c6b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/core/dom/ast/cpp/ICPPASTQualifiedName.java",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "IASTName -\u003e ICPPASTNameSpecifier",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_1bd88465",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/core/dom/ast/cpp/ICPPASTQualifiedName.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Add -\u003e Adds\n\nPlease clarify that the segment is added to the end.",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_9bf654c9",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/core/dom/ast/cpp/ICPPASTQualifiedName.java",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Set -\u003e Sets",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_3b12a093",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/core/dom/ast/cpp/ICPPASTQualifiedName.java",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Please describe the behavior for a non-representable name.",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_7bf388d9",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/core/dom/ast/cpp/ICPPASTQualifiedName.java",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Return -\u003e Returns",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_db00dc3b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/core/dom/ast/cpp/ICPPASTQualifiedName.java",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Return -\u003e Returns",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_fbdcb85b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/core/dom/ast/cpp/ICPPASTQualifiedName.java",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "This method seems redundant. Would calling code be significantly longer without it?",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_511aed75",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/core/dom/ast/cpp/ICPPASTQualifiedName.java",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 973
      },
      "writtenOn": "2013-08-19T07:09:27Z",
      "side": 1,
      "message": "I used it to rewrite 12 of the ~70 uses of getNames() across CDT code. Without it, I would have to replace a loop over all segments with a loop over the segments in the qualifier + an unrolled iteration for the last name. This would be repetitive, and in some cases where the loop body contains nontrivial control flow, tricky to get right. I see no harm in having this method around for convenience.",
      "parentUuid": "c73e4bec_fbdcb85b",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_bb7fd01b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPASTConstructorChainInitializer.java",
        "patchSetId": 2
      },
      "lineNbr": 251,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Redundant condition. There are several more in other files.",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_dbde1cd5",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPASTDecltypeSpecifier.java",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Raw signature is an image in the code before macro expansion. It doesn\u0027t seem to be appropriate here.",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_71ad696f",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPASTDecltypeSpecifier.java",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 973
      },
      "writtenOn": "2013-08-19T07:09:27Z",
      "side": 1,
      "message": "What would you recommend instead? As far as I can tell, this method will only be called on a decltype-specifier for problem reporting purposes.",
      "parentUuid": "c73e4bec_dbde1cd5",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_7894259a",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPASTDecltypeSpecifier.java",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T19:14:49Z",
      "side": 1,
      "message": "Possibly the signature of the evaluation for the expression.",
      "parentUuid": "c73e4bec_71ad696f",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_1b13641b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPASTNameBase.java",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "The second condition seems wrong.",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_b169b19b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPASTNameBase.java",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 973
      },
      "writtenOn": "2013-08-19T07:09:27Z",
      "side": 1,
      "message": "Say you have a qualified name \u0027A::B\u0027, and you call isQualified() on the segment representing \u0027A\u0027. Even though the parent of \u0027A\u0027 is a qualified name, the \u0027A\u0027 is the first segment, so it (\u0027A\u0027) is not qualified.",
      "parentUuid": "c73e4bec_1b13641b",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_1b552426",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPASTQualifiedName.java",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Please always use curly braces in \u0027for\u0027 statements.",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_fb179803",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPASTQualifiedName.java",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Please always use curly braces in \u0027for\u0027 statements.",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_5b1dec23",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPASTQualifiedName.java",
        "patchSetId": 2
      },
      "lineNbr": 180,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Please use curly braces.",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_9b2db44b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPClassScope.java",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Please always use curly braces in \u0027if\u0027 statements with \u0027else\u0027 clause.",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_7b2a6831",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPTemplateDefinition.java",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Please add a space after the first )",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_fbbb185c",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 2
      },
      "lineNbr": 1715,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Simpler to use getQualifier.",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_31d001c2",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 2
      },
      "lineNbr": 1715,
      "author": {
        "id": 973
      },
      "writtenOn": "2013-08-19T07:09:27Z",
      "side": 1,
      "message": "What if it\u0027s a name of the form \u0027::A\u0027? Then it has zero segments in the qualifier, but it has a last name.",
      "parentUuid": "c73e4bec_fbbb185c",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_7bd89f66",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 2
      },
      "lineNbr": 1715,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T19:14:49Z",
      "side": 1,
      "message": "It\u0027s unfortunate that we use getAllSegments method that involves array copying just to check the first element. The same condition can be written as:\nqualifier.length !\u003d 0 \u0026\u0026 qualifier[0] !\u003d name",
      "parentUuid": "c73e4bec_31d001c2",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_1bc4fb33",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 2
      },
      "lineNbr": 1715,
      "author": {
        "id": 973
      },
      "writtenOn": "2013-08-19T19:40:51Z",
      "side": 1,
      "message": "Not quite: it would have to be !((qualifier.length \u003d\u003d 0 \u0026\u0026 parent.getLastName() \u003d\u003d name) || (qualifier.length \u003e 0 \u0026\u0026 qualifier[0] \u003d\u003d name)).\n\nNevertheless, point taken about unnecessarily creating an array. Perhaps we can add ICPPASTQualifiedName.getFirstSegment() (or SomeStaticClass.getFirstSegment(ICPPASTQualifiedName) if we don\u0027t want to pollute the ICPPASTQualifiedName interface) to avoid creating the array and still express the code nicely?",
      "parentUuid": "c73e4bec_7bd89f66",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_5b4fa310",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 2
      },
      "lineNbr": 1715,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T20:27:37Z",
      "side": 1,
      "message": "qualifier.length \u003d\u003d 0 implies parent.getLastName() \u003d\u003d name, doesn\u0027t it? So the complex expression can be reduced.\n\nI like the SomeStaticClass.getFirstSegment(ICPPASTQualifiedName) idea. One option is to add a static method to CPPASTQualifiedName itself. Another option is to encapsulate little more logic and to add\nstatic CPPASTName.isQualified(IASTName)",
      "parentUuid": "c73e4bec_1bc4fb33",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_bb2a2701",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 2
      },
      "lineNbr": 1715,
      "author": {
        "id": 973
      },
      "writtenOn": "2013-08-19T20:37:49Z",
      "side": 1,
      "message": "I like the CPPASTName.isQualified(IASTName) idea. Among other things, CPPASTNameBase.isQualified() can reuse it.\n\n(And yeah, I see how qualifier.length !\u003d 0 \u0026\u0026 qualifier[0] !\u003d name is equivalent now.)",
      "parentUuid": "c73e4bec_5b4fa310",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_4454e04b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 2
      },
      "lineNbr": 1715,
      "author": {
        "id": 973
      },
      "writtenOn": "2013-08-20T03:45:13Z",
      "side": 1,
      "message": "Actually, IASTName already has an isQualified() method. We can just use that.",
      "parentUuid": "c73e4bec_bb2a2701",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_6fdbb562",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 2
      },
      "lineNbr": 1715,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-20T03:51:19Z",
      "side": 1,
      "message": "We have to be careful because IASTName.isQualified() returns true for ::a.",
      "parentUuid": "c73e4bec_4454e04b",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_3b9d80ec",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/LookupData.java",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Redundant condition.",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_f117b903",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/LookupData.java",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 973
      },
      "writtenOn": "2013-08-19T07:09:27Z",
      "side": 1,
      "message": "Why? Consider a case where \u0027tn\u0027 is the \u0027A\u0027 in \u0027A::B\u0027.",
      "parentUuid": "c73e4bec_3b9d80ec",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_9b9134d8",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/indexer/IndexerASTVisitor.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "Redundant condition.",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_db261c42",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/refactoring/extractfunction/ExtractFunctionRefactoring.java",
        "patchSetId": 2
      },
      "lineNbr": 599,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "This doesn\u0027t look right for non-name specifiers.",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c73e4bec_1bdb649c",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/refactoring/togglefunction/InsertionPointFinder.java",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 577
      },
      "writtenOn": "2013-08-19T03:36:34Z",
      "side": 1,
      "message": "It looks like qname.getNames()[1] was used instead of qname.lastName().",
      "revId": "82f30d690b3ba6a839916cf774b1c279b657e507",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
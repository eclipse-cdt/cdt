{
  "comments": [
    {
      "key": {
        "uuid": "a7c23755_16da8607",
        "filename": "codan/org.eclipse.cdt.codan.checkers.ui/src/org/eclipse/cdt/codan/internal/checkers/ui/quickfix/QuickFixAddSemicolon.java",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-01-28T23:01:08Z",
      "side": 1,
      "message": "findLeftSibling() can also return null, and in fact does for every test case I\u0027ve tried so far.\n\nThe issue is that it only returns a sibling of the node itself, not a sibling of an ancestor node. So, if the searched node is already the leftmost at its level, it will return null.\n\nI think we instead need to iterate up the ancestor chain, and use the first one that has a left sibling that\u0027s not null.",
      "revId": "84227b6f55969a19a9280021c93ba31b45fed0a6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_16c3662d",
        "filename": "codan/org.eclipse.cdt.codan.checkers.ui/src/org/eclipse/cdt/codan/internal/checkers/ui/quickfix/QuickFixAddSemicolon.java",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-01-28T22:51:19Z",
      "side": 1,
      "message": "IASTNode.getFileLocation() is documented as possibly returning null, so we need a null check here.",
      "revId": "84227b6f55969a19a9280021c93ba31b45fed0a6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_f6c7ca37",
        "filename": "codan/org.eclipse.cdt.codan.checkers.ui/src/org/eclipse/cdt/codan/internal/checkers/ui/quickfix/QuickFixAddSemicolon.java",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-01-28T22:51:19Z",
      "side": 1,
      "message": "Consider moving this up into AbstractAstRewriteQuickFix, and sharing code with getAstNameFromProblemArgument().",
      "revId": "84227b6f55969a19a9280021c93ba31b45fed0a6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_d6bc8eb3",
        "filename": "codan/org.eclipse.cdt.codan.checkers.ui/src/org/eclipse/cdt/codan/internal/checkers/ui/quickfix/QuickFixAddSemicolon.java",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-01-28T22:51:19Z",
      "side": 1,
      "message": "Does this override serve any purpose? The base implementation already returns true.",
      "revId": "84227b6f55969a19a9280021c93ba31b45fed0a6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_96ee96ac",
        "filename": "codan/org.eclipse.cdt.codan.checkers.ui/src/org/eclipse/cdt/codan/internal/checkers/ui/quickfix/QuickFixRenameMember.java",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-01-28T22:51:19Z",
      "side": 1,
      "message": "Will this quick fix ever apply to a Codan marker? In plugin.xml, we are registering it without a problemId, and, by my reading of CodanProblemMarkerResolutionGenerator.getResolutions(), a quick fix without a problemId will not match a marker with a problemId.",
      "revId": "84227b6f55969a19a9280021c93ba31b45fed0a6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_36f5c279",
        "filename": "codan/org.eclipse.cdt.codan.checkers.ui/src/org/eclipse/cdt/codan/internal/checkers/ui/quickfix/QuickFixRenameMember.java",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-01-28T22:51:19Z",
      "side": 1,
      "message": "We already have CodanProblemMarker.getProblemArguments() that does this.",
      "revId": "84227b6f55969a19a9280021c93ba31b45fed0a6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_b6e8f2a0",
        "filename": "codan/org.eclipse.cdt.codan.checkers.ui/src/org/eclipse/cdt/codan/internal/checkers/ui/quickfix/QuickFixRenameMember.java",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-01-28T22:51:19Z",
      "side": 1,
      "message": "What is \":func\"?",
      "revId": "84227b6f55969a19a9280021c93ba31b45fed0a6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7c23755_d6e3aec0",
        "filename": "codan/org.eclipse.cdt.codan.checkers.ui/src/org/eclipse/cdt/codan/internal/checkers/ui/quickfix/QuickFixUseDotOperator.java",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-01-28T22:51:19Z",
      "side": 1,
      "message": "Who sets this attribute?",
      "revId": "84227b6f55969a19a9280021c93ba31b45fed0a6",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
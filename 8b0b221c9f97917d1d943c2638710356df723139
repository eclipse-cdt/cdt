{
  "comments": [
    {
      "key": {
        "uuid": "f2454bdd_59710f82",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/META-INF/MANIFEST.MF",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-03T03:29:33Z",
      "side": 1,
      "message": "normally require-bundle is used for eclipse project dependencies (unless this changed recently)",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b96cb16_b3a64a21",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/META-INF/MANIFEST.MF",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 23745
      },
      "writtenOn": "2021-08-03T06:08:06Z",
      "side": 1,
      "message": "+1\nAlthough \"Import-Package\" could be preferrable for pure OSGi world I would recommend to use \"Require-Bundle\" for CDT. The main reason behind this recommendation is simple: in Eclipse world we operate with \"bundles\" that includes much more than packages to resolve and classes to load, i.e. xml manifests, images, localization resources and so on.",
      "parentUuid": "f2454bdd_59710f82",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e245664b_332469e4",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/plugin.xml",
        "patchSetId": 3
      },
      "lineNbr": 644,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-03T03:29:33Z",
      "side": 1,
      "message": "I think you want this here:\nprefer-non-shared\u003d\"true\"",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64e6ccc6_b2610f9c",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 157,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-09T05:48:17Z",
      "side": 1,
      "message": "I haven\u0027t been able to simulate a changed file and see the index update. I edit the json and restart Eclipse, then oldEntries is always null here. I guess since nothing is serialized there is nothing to compare with from before?",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9f6d68a_4aff926b",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-03T03:29:33Z",
      "side": 1,
      "message": "the indexer already checks for exclusion based on the preference (project or workspace), so you shouldn\u0027t need this check?",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f383558_f5557cd5",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 276327
      },
      "writtenOn": "2021-08-03T20:25:41Z",
      "side": 1,
      "message": "I do not know the indexer behavior very well, if you confirm this should be removed, I will do so.",
      "parentUuid": "f9f6d68a_4aff926b",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c52dfb14_b98c1814",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 162,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-09T05:48:17Z",
      "side": 1,
      "message": "I\u0027ll double check once I\u0027m able to trigger an index update.",
      "parentUuid": "6f383558_f5557cd5",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e483ca2_501d8587",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-03T03:29:33Z",
      "side": 1,
      "message": "I believe the indexer update is already handled by LanguageSettingsChangeListener.",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20ba0fa1_c5df6c9c",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 276327
      },
      "writtenOn": "2021-08-03T20:25:41Z",
      "side": 1,
      "message": "AFAIKS, LanguageSettingsChangeListener is notified only if settings get serialized. This code does not serialize any language settings (causing the LSC-event to be fired), it just gathers the settings to be returned by #getSettingEntries() from the json file.",
      "parentUuid": "6e483ca2_501d8587",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa9cff31_81471610",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-09T05:48:17Z",
      "side": 1,
      "message": "Ah, I didn\u0027t realize this was not serializing anything. This changes things quite a bit (and some of my previous comments).",
      "parentUuid": "20ba0fa1_c5df6c9c",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f031c1f_fa5c8cb6",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-09T05:48:17Z",
      "side": 1,
      "message": "If I generate with Cmake + Ninja generator + MSVC toolchain, it generates native paths, i.e. H:\\path\\to\\source.c (double-backslashed for json escaping of course). My internal generator also generates native paths. Which combination generates forward slashes like above? Not sure how to best handle all of these cases at the same time.",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "817d1b04_1db4a769",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 195,
      "author": {
        "id": 23745
      },
      "writtenOn": "2021-07-30T12:08:20Z",
      "side": 1,
      "message": "It could be something like:\n```\nnew org.eclipse.core.runtime.Path(new File(sourceFileName).toURI().getSchemeSpecificPart())\n```",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb3346bf_a88b6622",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 195,
      "author": {
        "id": 276327
      },
      "writtenOn": "2021-07-30T20:38:56Z",
      "side": 1,
      "message": "Soory, don\u0027t get it.\nCould you explain the benefits?",
      "parentUuid": "817d1b04_1db4a769",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34992fa3_d89c71d2",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 195,
      "author": {
        "id": 23745
      },
      "writtenOn": "2021-08-03T06:08:06Z",
      "side": 1,
      "message": "`IWorkspaceRoot#getFileForLocation(IPath location)` requires absolute path. One need to ensure that path is absolute or better use `IWorkspaceRoot#findFilesForLocationURI(URI location)`",
      "parentUuid": "bb3346bf_a88b6622",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27481f2d_56c3e486",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 221,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-09T05:48:17Z",
      "side": 1,
      "message": "For a folder with absolute path outside the workspace:\n\njava.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d1efaa7_2a1a5cce",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 224,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-09T05:48:17Z",
      "side": 1,
      "message": "I\u0027m not sure this should use IResources, it doesn\u0027t allow files outside the workspace.",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9431f268_caf5cd61",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 226,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-09T05:48:17Z",
      "side": 1,
      "message": "I saw an exception if the build folder doesn\u0027t exist yet in the worspace (not refreshed).\n\njava.lang.Exception: Resource \u0027/llvm2/build2\u0027 does not exist.",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d346cf90_5d90634a",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 23745
      },
      "writtenOn": "2021-07-30T12:08:20Z",
      "side": 1,
      "message": "Do we have a good reason to use UI thread for this?",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2aa59489_f9fd9232",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 276327
      },
      "writtenOn": "2021-07-30T20:38:56Z",
      "side": 1,
      "message": "The reason is to postpone parsing until the workbench has been constructed and is displaying.",
      "parentUuid": "d346cf90_5d90634a",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18527f3b_9404a458",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-03T03:29:33Z",
      "side": 1,
      "message": "This is a possibly long running operation that also doesn\u0027t touch the UI so it should not be forced to run in the UI thread, even if a bit later (async). If this was modifying the project description (like setting exclusions) I believe you would need a workspace job to \"lock\" the resource. But if writing only language setting entries, the serializing is possibly already handled by the Language settings manager when you save the entries (LanguageSettingsManager.serializeLanguageSettingsInBackground?). But I would expect here at least a normal Job with progress monitor while the commands are parsed and entries created (mapping to workspace resources, etc is long).\nI also remember having issues with files being double indexed if the provider was ran async after saving the project properties UI. I believe I \"solved\" this by creating a new public method passing the writable project config.",
      "parentUuid": "2aa59489_f9fd9232",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caa419ac_4ce8d391",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 276327
      },
      "writtenOn": "2021-08-03T20:25:41Z",
      "side": 1,
      "message": "\u003e This is a possibly long running operation that also doesn\u0027t touch the UI so it should \n\nI agree.\n\n\u003e not be forced to run in the UI thread, even if a bit later (async). If this was modifying the project description (like setting exclusions) I believe you would need a workspace job to \"lock\" the resource. But if writing only language setting entries, the \n\nNo, it does not even *write* any language setting entries. This is just to gather and cache the settings to be returned by #getSettingEntries() from the json file up-front. We could avoid this by postponing the initial parsing of the json file until #getSettingEntries() is called. But the javadoc of #getSettingEntries() states: /This method should not be used to do any long running operations such as extensive calculations or reading files. If you need to do so, the recommended way is to do the calculations outside of this function call - in advance and on appropriate event./ \nDo you know of a better way to handle this?",
      "parentUuid": "18527f3b_9404a458",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62699a83_145664d8",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-09T05:48:17Z",
      "side": 1,
      "message": "I would suggest using a normal Eclipse Job to do this, which does not run on the UI thread by default. I don\u0027t think you need to worry about the workbench displaying, this is core (non-UI) code and if worried about start-up time, it should probably be a concern of the calling code.\nAs it it, I tested on a project and it hangs the UI thread for about 2 mins shortly after start, so I think it\u0027s worth trying to address.",
      "parentUuid": "caa419ac_4ce8d391",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46f343b7_6fd52906",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 283,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-07-27T02:03:23Z",
      "side": 1,
      "message": "registerListener should be called for each config of each opened project. I don\u0027t think you need to iterate on projects here?",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01dcb5aa_e0525176",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 283,
      "author": {
        "id": 276327
      },
      "writtenOn": "2021-07-27T18:45:05Z",
      "side": 1,
      "message": "The code iterates on the *active* configuration of each opened project that has ScannerConfigNature\nAre there any reasons to call it for *each config* as you suggest?",
      "parentUuid": "46f343b7_6fd52906",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "377e000c_88c802b9",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 283,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-07-28T02:29:54Z",
      "side": 1,
      "message": "I mean that registerListener is already called for you on each config, there is no need to iterate. You only need to check for active config.",
      "parentUuid": "01dcb5aa_e0525176",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d41fff3_9c8947e5",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 283,
      "author": {
        "id": 276327
      },
      "writtenOn": "2021-07-29T20:19:53Z",
      "side": 1,
      "message": "Hmmh, interesting.\nFrom what I reverse engineered, it is called only once; with a null argument.",
      "parentUuid": "377e000c_88c802b9",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05603e07_96837116",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 283,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-03T03:29:33Z",
      "side": 1,
      "message": "It looks like the provider is configured to be global by default. It makes more sense to be project specific (non-shared) by default. It\u0027s very likely this is the reason why you only see it called once with null config. I left a comment in plugin.xml to address this.",
      "parentUuid": "5d41fff3_9c8947e5",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8b73aa6_a19c715d",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 283,
      "author": {
        "id": 276327
      },
      "writtenOn": "2021-08-03T20:25:41Z",
      "side": 1,
      "message": "\u003e It looks like the provider is configured to be global by default. It makes more sense to be project specific (non-shared) by default. It\u0027s very likely this is the reason why you only see it called once with null config. I left a comment in plugin.xml to address this.\n\nYes, it is global by default. But configuring to be global by default does not prevent any user from configuring it to be global so we have to deal with it.",
      "parentUuid": "05603e07_96837116",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b206997c_6722b37f",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/internal/language/settings/providers/JsonCompilationDatabaseParser.java",
        "patchSetId": 3
      },
      "lineNbr": 283,
      "author": {
        "id": 598
      },
      "writtenOn": "2021-08-09T05:48:17Z",
      "side": 1,
      "message": "Global for a provider normally means all settings are the same for every project and config that use the global provider. Here is seems entries are still computed per project and (active) configs so \"global\" was a bit confusing and unexpected to me. If the provider had a setting/label for the json path, it would be clear that globally this json would be the one used, everywhere. I think the best would be to be able to opt-out providers from being ever global so that the UI never shows it, but that\u0027s more work that feels outside the scope of this patch.\nI also don\u0027t know how to uncheck \"global\" in the UI of the provider, it is greyed out if I go in the providers tab. Maybe this wouldn\u0027t be an issue if global vs non-global behaved the same way, but it looks like the global provider won\u0027t update when adding a new project with the provider (or adding the provider to existing project) until restart.\nMaybe keeping the \"global\" code path here as it is would be OK in terms of fallback if the user selects global explicitly, but since it doesn\u0027t look like the \"global\" code path handles new projects and adding the provider properly, I don\u0027t think it should be the default.",
      "parentUuid": "f8b73aa6_a19c715d",
      "revId": "8b0b221c9f97917d1d943c2638710356df723139",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}
{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "73f65d04_c0952fc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T15:42:25Z",
      "side": 1,
      "message": "Finally been able to reproduce this.\nFor some reason, the issue does not appear on an updated Gentoo system, but it does happen on a Ubuntu 20.04 system. I\u0027ve verified that the PS4 works on a Ubuntu 20.04 system with a faulty arm-none-eabi-gdb binary by overriding the string returned by \"--version\" in a wrapper shell script with this content:\n\n```\n#!/bin/bash\nif [ \"x$1\" \u003d \"x--version\" ]; then\n    #echo \"GNU gdb (GNU Arm Embedded Toolchain 10.3-2021.10) 10.2.90.20210621-git\"\n    echo \"GNU gdb (GNU Arm Embedded Toolchain 10.3-2021.10) 12.1\"\n    exit 0\nfi\nexec arm-none-eabi-gdb \"$@\"\n```\n\nPlease review and see if there is anything that can be implemented in a better way.",
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe09b33a_ad5215e6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T16:34:34Z",
      "side": 1,
      "message": "\u003e Build Failed \n\u003e \n\u003e https://ci.eclipse.org/cdt/job/cdt-verify-code-cleanliness-pipeline/3693/ : FAILURE.\n\n@Jonah: Have you also been getting these kind of errors on and off for the past few weeks? Is there anything wrong with our Jenkins jobs?\nI\u0027ve retriggered the job to get the correct verdict.\n",
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a0a3144_e8614b37",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 397,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T18:57:36Z",
      "side": 1,
      "message": "I don\u0027t know if it makes much sense to keep this as it can take a long time before the DsfRunnable instance is executed. The check needs to be done after too!\nSee my comment on line 758.",
      "range": {
        "startLine": 397,
        "startChar": 3,
        "endLine": 397,
        "endChar": 58
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc77e1ca_4d6abc01",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 420,
      "author": {
        "id": 27769
      },
      "writtenOn": "2022-04-14T17:23:22Z",
      "side": 1,
      "message": "This if statements is almost always false. fUseThreadAndFrameOptions \u003d\u003d true for GDB \u003e\u003d 7 and only the CLI commands and Raw Commands has supportsThreadAndFrameOptions \u003d\u003d false.\n\nAs a result for almost all command there isn\u0027t a problem. Further, even if CLI or Raw command is used, they would have to have a specific thread/frame other than the current one for the select commands to be sent.",
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98b5905f_8f49b309",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 443,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T15:42:25Z",
      "side": 1,
      "message": "Here is one command that can be queued.",
      "range": {
        "startLine": 443,
        "startChar": 7,
        "endLine": 443,
        "endChar": 34
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e33fefdc_8bc13d2d",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 453,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T15:42:25Z",
      "side": 1,
      "message": "And here is another one for the same command that got queued.",
      "range": {
        "startLine": 453,
        "startChar": 7,
        "endLine": 453,
        "endChar": 34
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f84b0d7_7bbbd39b",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 464,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T15:42:25Z",
      "side": 1,
      "message": "And finally, we add the requested command.\n\nWorst case scenario us that there are at least 3 commands queued at the same time.\nI\u0027m not sure if there can be more or it\u0027s only these 3, but 3 is enough for the concurrency problem!\n\nThe only way to protect against this is to handle every attempt to queue in the fTxCommands or where we take from the queue. I think it\u0027s cleaner to do it where the items are taken from the queue and that\u0027s what\u0027s implemented in TxThread#run().",
      "range": {
        "startLine": 464,
        "startChar": 4,
        "endLine": 464,
        "endChar": 28
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "046fb1e7_22e60897",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 758,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T15:42:25Z",
      "side": 1,
      "message": "Are there any better way to achieve the delay here?",
      "range": {
        "startLine": 758,
        "startChar": 6,
        "endLine": 758,
        "endChar": 22
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91bcc1bd_5a324305",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 758,
      "author": {
        "id": 27769
      },
      "writtenOn": "2022-04-14T17:23:22Z",
      "side": 1,
      "message": "I don\u0027t think this is actually needed because of comment on line 420.",
      "parentUuid": "046fb1e7_22e60897",
      "range": {
        "startLine": 758,
        "startChar": 6,
        "endLine": 758,
        "endChar": 22
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e97b7d36_adea62a0",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 758,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T18:57:36Z",
      "side": 1,
      "message": "I took another look and if we ignore the fact that sometime, even if rare, there can be 3 commands in the pipe without waiting for response (just old debuggers?) then there is still a possibility to have more than one command sent.\n\nThe method processNextQueuedCommand() can be executed from 2 call paths:\n1. From the RxThread.processMIOutput method as the last step to feed anything new to the GDB client.\n2. From queueCommand() method to signal that there are new commands in the queue.\n\nIf the call path to queueCommand() is fast enough, then there could be several instances of the inline DsfRunnable class waiting to be executed by the DsfExecutor instance. As each of these runables would see that there is at least one new command in the fCommandQueue, they would all push one of these commands to fTxCommands and that would generate too many GDB commands to be sent at once by the TxThread.\n\n\nOne possible solution is to have the while-sleep block in the TxThread.run() method to catch it or the check for the concurrent commands need to be placed inside processNextQueuedCommand() method. If the check in queueCommand() should be left there or removed (as it doesn\u0027t do what is expected at the current placement) is another story.\nIf we go for the move of the concurrency check, then we could still send too many commands in the case as per your comment on line 420. I suppose it\u0027s a matter of how strict we want the concurrency check to be. :)\n\nLet me know what you think!",
      "parentUuid": "91bcc1bd_5a324305",
      "range": {
        "startLine": 758,
        "startChar": 6,
        "endLine": 758,
        "endChar": 22
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7885e1c9_7e4c7b76",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 758,
      "author": {
        "id": 27769
      },
      "writtenOn": "2022-04-14T20:27:57Z",
      "side": 1,
      "message": "Yes - you are correct in your analysis. The original code did not do a good job of limiting to 3 outstanding commands.\n\n\u003e If the call path to queueCommand() is fast enough\n\nYour conclusion is correct - if multiple queueCommands are done in the same dispatch cycle then the check \"if (fRxCommands.size() \u003c fNumberOfConcurrentCommands) {\" will not be done at a usefule time. I think that can be easily resolved by moving it into the DsfRunnable. \n\n\u003e RxThread.processMIOutput\n\nActually how this call is done all the pending command can be added, much more than 3 even IIUC - That is because its call to processNextQueuedCommand is unconditional. Many operations to GDB causes multiple lines of reply. Even the \"(gdb)\" prompt after each normal response will cause an extra processNextQueuedCommand to be run. \n\nSo yes as we need to limit it more strictly then having it at another time is important.\n\n\n---- \n\nTherefore with the understanding that something else needs to be done besides reducing fNumberOfConcurrentCommands to 1 this is my comment on this bit of code.\n\nIt would be best to not busy-wait, but ignoring that... We shouldn\u0027t have org.eclipse.cdt.dsf.mi.service.command.AbstractMIControl.TxThread.run() block on anything other than fTxCommands.take otherwise the thread can hang and the fTerminatorHandle will never be read (see comment on line 746). Perhaps not a problem if fStoppedCommandProcessing is also checked here - make it volatile if you do that as it will be accessed from multiple threads with such a change.\n\nSo we should try to block fTxCommands from getting more than 1 item in it at once (apart from case on line 420 which I really don\u0027t think there are many if any cases in practice of).\n\nSomething like https://git.eclipse.org/r/c/cdt/org.eclipse.cdt/+/192763 is sort of ok - it leaves a small race condition in TxThread.run between the fTxCommands.take and the fRxCommands.put.",
      "parentUuid": "e97b7d36_adea62a0",
      "range": {
        "startLine": 758,
        "startChar": 6,
        "endLine": 758,
        "endChar": 22
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c5a3862_88283356",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 758,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T21:13:08Z",
      "side": 1,
      "message": "I suppose the best way is what I will push in PS5 in a few sec then. This was my first thought, but then I say the 3 puts inside the processNextQueuedCommand() method and thought it was not good enough.",
      "parentUuid": "7885e1c9_7e4c7b76",
      "range": {
        "startLine": 758,
        "startChar": 6,
        "endLine": 758,
        "endChar": 22
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d478822f_ddb77e60",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 1293,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T15:42:25Z",
      "side": 1,
      "message": "I\u0027ve put this as a separate private method as it might be useful in sub-classes in the future to identify the GDB version for similar workarounds. Feels like the heavy artillery to do a sub-class for these types of issues.",
      "range": {
        "startLine": 1293,
        "startChar": 11,
        "endLine": 1293,
        "endChar": 33
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee429a9f_552b6298",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 1293,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T15:44:19Z",
      "side": 1,
      "message": "protected, not private!",
      "parentUuid": "d478822f_ddb77e60",
      "range": {
        "startLine": 1293,
        "startChar": 11,
        "endLine": 1293,
        "endChar": 33
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd2c6229_27d9d892",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 1293,
      "author": {
        "id": 27769
      },
      "writtenOn": "2022-04-14T17:23:22Z",
      "side": 1,
      "message": "If we release this for 10.6.1 then these protected methods need to become private.",
      "parentUuid": "ee429a9f_552b6298",
      "range": {
        "startLine": 1293,
        "startChar": 11,
        "endLine": 1293,
        "endChar": 33
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52bfdb81_d1cfff28",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 1293,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T18:57:36Z",
      "side": 1,
      "message": "I suppose we could have them private in the 10.6.1 and protected in 10.7? Or would it be better to keep them as private regardless?",
      "parentUuid": "cd2c6229_27d9d892",
      "range": {
        "startLine": 1293,
        "startChar": 11,
        "endLine": 1293,
        "endChar": 33
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cf2f0ed_f92aef76",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 1293,
      "author": {
        "id": 27769
      },
      "writtenOn": "2022-04-14T20:27:57Z",
      "side": 1,
      "message": "private in 10.6.1 and protected in 10.7.",
      "parentUuid": "52bfdb81_d1cfff28",
      "range": {
        "startLine": 1293,
        "startChar": 11,
        "endLine": 1293,
        "endChar": 33
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "599ba1e3_1d4a0102",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 1293,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T21:13:08Z",
      "side": 1,
      "message": "ACK",
      "parentUuid": "8cf2f0ed_f92aef76",
      "range": {
        "startLine": 1293,
        "startChar": 11,
        "endLine": 1293,
        "endChar": 33
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e22bc70_649cf082",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 1317,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T15:42:25Z",
      "side": 1,
      "message": "Somewhere between the 8.3.x and the 8.4/9.0 version, the breaking change was introduced. To avoid incorrectly mark 8.3.x (stable releases) as broken, I decided to go with 8.3.50 (the development version for the increment).",
      "range": {
        "startLine": 1317,
        "startChar": 45,
        "endLine": 1317,
        "endChar": 51
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5aa057d1_1a034393",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 1318,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T15:42:25Z",
      "side": 1,
      "message": "Am using 12.0.51 here as there is no way to identify the commit within the 12.0.50 version (all have the same version number).",
      "range": {
        "startLine": 1318,
        "startChar": 46,
        "endLine": 1318,
        "endChar": 53
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ea96a27_7e70f918",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 1318,
      "author": {
        "id": 27769
      },
      "writtenOn": "2022-04-14T17:23:22Z",
      "side": 1,
      "message": "This is fine - 12.0.50 is a dev only version number anyway. The release will be 12.1.",
      "parentUuid": "5aa057d1_1a034393",
      "range": {
        "startLine": 1318,
        "startChar": 46,
        "endLine": 1318,
        "endChar": 53
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d7496d9_3687e937",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 1318,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T18:57:36Z",
      "side": 1,
      "message": "Okay. I was uncertain as the Arm provided GDB is claiming to be \"10.2.90.20210621-git\" for the 10.3-2021.10 Arm delivery.\nI\u0027m not aware of what version scheme that GDB is using, so I don\u0027t know what 10.2.90 means here.",
      "parentUuid": "0ea96a27_7e70f918",
      "range": {
        "startLine": 1318,
        "startChar": 46,
        "endLine": 1318,
        "endChar": 53
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "745b87a9_4c2aaade",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 1318,
      "author": {
        "id": 27769
      },
      "writtenOn": "2022-04-14T20:27:57Z",
      "side": 1,
      "message": "The 10.2.90 is pre-release of 10.3 - that particular one is from 20210621. So it is from the GDB 10 branch, after the most recent release. Probably has ARM specific commits on it too.\n\nWith a little nudge ARM may backport the GDB fix and release another 10.2.90 release with it fixed, then it becomes even harder to test for in CDT, see this line for a past example:\n\n\t\tif (compareVersionWith(GDB_7_2_VERSION) \u003e\u003d 0 || \"6.8.50.20090414\".equals(fVersion)) { //$NON-NLS-1$",
      "parentUuid": "8d7496d9_3687e937",
      "range": {
        "startLine": 1318,
        "startChar": 46,
        "endLine": 1318,
        "endChar": 53
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51178596_06b7290e",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/mi/service/command/AbstractMIControl.java",
        "patchSetId": 4
      },
      "lineNbr": 1318,
      "author": {
        "id": 178588
      },
      "writtenOn": "2022-04-14T21:13:08Z",
      "side": 1,
      "message": "Hm. I think the \"20090414\" in your 6.8.50 example is the BFD version. (see gdbsupport/create-version.sh in the GDB source tree)\nIf it\u0027s the BFD version, then there is nothing that differentiate 2 version of GDB during the development cycle...\nIf you think it\u0027s okay, lets just ignore all the 12.0.x versions and just set 12.1 as the boundary.\n\nBtw, I think Arm is well into the GCC11 track now and I do not expect to see another 10.x delivery. They will likely want to take a look at fixing GDB 11.x (whatever version they decide to use).",
      "parentUuid": "745b87a9_4c2aaade",
      "range": {
        "startLine": 1318,
        "startChar": 46,
        "endLine": 1318,
        "endChar": 53
      },
      "revId": "9a676de13be3ac23d27c4d9d90e9f4ecded62849",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31"
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "AABOPX//uAg\u003d",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/editor/CEditorMessages.java",
        "patchSetId": 10
      },
      "lineNbr": 111,
      "author": {
        "id": 598
      },
      "writtenOn": "2013-04-29T20:54:53Z",
      "side": 1,
      "message": "It would be nicer without the _1. Maybe StepIntoSelection_unable_to_resolveMessage instead?",
      "revId": "9e6b5a98ce26d2815ed62554d62c6667dce34e01",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOPX//ssA\u003d",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/editor/SelectionToDeclarationJob.java",
        "patchSetId": 10
      },
      "lineNbr": 124,
      "author": {
        "id": 598
      },
      "writtenOn": "2013-04-29T20:54:53Z",
      "side": 1,
      "message": "If I\u0027m reading this correctly, if the AST is not fully built yet, this is going to freeze the UI thread since this is being called from detectHyperlinks. See bug 324232 and CElementHyperlinkDetector for a similar problem. It\u0027s probably better to use WAIT_NO and not allow Step into Selection while the AST is being built.",
      "revId": "9e6b5a98ce26d2815ed62554d62c6667dce34e01",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOPX//t94\u003d",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/editor/SelectionToDeclarationJob.java",
        "patchSetId": 10
      },
      "lineNbr": 205,
      "author": {
        "id": 598
      },
      "writtenOn": "2013-04-29T20:54:53Z",
      "side": 1,
      "message": "This should be removed or a description should be added.",
      "revId": "9e6b5a98ce26d2815ed62554d62c6667dce34e01",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOPX//ssg\u003d",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/Messages.java",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 598
      },
      "writtenOn": "2013-04-29T20:54:53Z",
      "side": 1,
      "message": "I think it\u0027s better to change _1 to something else.",
      "revId": "9e6b5a98ce26d2815ed62554d62c6667dce34e01",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOPX//ssc\u003d",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/Messages.java",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 598
      },
      "writtenOn": "2013-04-29T20:54:53Z",
      "side": 1,
      "message": "Same here.",
      "revId": "9e6b5a98ce26d2815ed62554d62c6667dce34e01",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOPX//stA\u003d",
        "filename": "dsf/org.eclipse.cdt.dsf.ui/src/org/eclipse/cdt/dsf/debug/ui/actions/DsfStepIntoSelectionHyperlinkDetector.java",
        "patchSetId": 10
      },
      "lineNbr": 124,
      "author": {
        "id": 598
      },
      "writtenOn": "2013-04-29T20:54:53Z",
      "side": 1,
      "message": "There are quite a few trailing white spaces in this file. If you submit another patch set it would be nice to clean it up a little bit.",
      "revId": "9e6b5a98ce26d2815ed62554d62c6667dce34e01",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOPX//stM\u003d",
        "filename": "dsf/org.eclipse.cdt.dsf.ui/src/org/eclipse/cdt/dsf/debug/ui/actions/DsfStepIntoSelectionHyperlinkDetector.java",
        "patchSetId": 10
      },
      "lineNbr": 158,
      "author": {
        "id": 598
      },
      "writtenOn": "2013-04-29T20:54:53Z",
      "side": 1,
      "message": "It would be cool to support stepping into overloaded operators, this method doesn\u0027t allow that. But I think this could be a separate enhancement.",
      "revId": "9e6b5a98ce26d2815ed62554d62c6667dce34e01",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
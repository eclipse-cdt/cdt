{
  "comments": [
    {
      "key": {
        "uuid": "AABOHH///lM\u003d",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb.ui/src/org/eclipse/cdt/dsf/gdb/internal/ui/actions/DsfTerminateCommand.java",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 457
      },
      "writtenOn": "2012-04-30T20:26:25Z",
      "side": 1,
      "message": "It is not clear to me why we need the job and the Lock/Condition.  Can\u0027t we do this? \n\nfExecutor.schedule(new Runnable() { \n   @Override\n   public void run() {\n      if (!globalTerminated) {\n         globalTerminated \u003d true;\n         request.setStatus(Status.CANCEL_STATUS);\n         request.done();\n      }\n   }},\n   1, TimeUnit.MINUTES);\n\nDsfSession.addSessionEndedListener(new SessionEndedListener () { \n   @Override\n   public void sessionEnded(DsfSession session) {\n      DsfSession.removeSessionEndedListener(this);\n      if (!globalTerminated)  request.done(); \n      globalTerminated \u003d true;\n   }\n});",
      "revId": "9fdbd0111ee3833e47f03f7506b351fe91220863",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOHH///X4\u003d",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb.ui/src/org/eclipse/cdt/dsf/gdb/internal/ui/actions/DsfTerminateCommand.java",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 572
      },
      "writtenOn": "2012-05-02T16:42:19Z",
      "side": 1,
      "message": "Not sure I understand how to apply this code. Where the \u0027request\u0027 variable come from. There could be multiple requests for multi-process sessions. Even if we keep the list of all requests, we don\u0027t know which one we need to cancel and which one mark as successful.\nAm I missing something here?",
      "parentUuid": "AABOHH///lM\u003d",
      "revId": "9fdbd0111ee3833e47f03f7506b351fe91220863",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOHH///Xw\u003d",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb.ui/src/org/eclipse/cdt/dsf/gdb/internal/ui/actions/DsfTerminateCommand.java",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 457
      },
      "writtenOn": "2012-05-02T17:14:53Z",
      "side": 1,
      "message": "Sorry, the code is meant to go in the execute() methods, at the place we create WaitForTerminationJob()",
      "parentUuid": "AABOHH///X4\u003d",
      "revId": "9fdbd0111ee3833e47f03f7506b351fe91220863",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOHH///Uo\u003d",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb.ui/src/org/eclipse/cdt/dsf/gdb/internal/ui/actions/DsfTerminateCommand.java",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 572
      },
      "writtenOn": "2012-05-03T15:29:43Z",
      "side": 1,
      "message": "Now I understand that you are using the scheduling mechanism of the executor to implement wait and because sessionEnded() is called in the executor thread you don\u0027t need to synchronize the code. Nice trick!\nBut I think there are issues with this code. In case of a multi-process session terminating one process will leave the listener registered until the entire session is ended. The request associated with the first terminate will be canceled after the timeout but request.done() will be called for the second time when the session is ended.",
      "parentUuid": "AABOHH///Xw\u003d",
      "revId": "9fdbd0111ee3833e47f03f7506b351fe91220863",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AABOHH///lg\u003d",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb.ui/src/org/eclipse/cdt/dsf/gdb/internal/ui/actions/DsfTerminateCommand.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 457
      },
      "writtenOn": "2012-04-30T20:26:25Z",
      "side": 1,
      "message": "I think one minute is enough.",
      "revId": "9fdbd0111ee3833e47f03f7506b351fe91220863",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "8748d3a1_1b0c40ca",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/plugin.xml",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 457
      },
      "writtenOn": "2013-12-09T21:20:47Z",
      "side": 1,
      "message": "Defining an adapter on IDMContext could prevent other debuggers from doing something similar.  However, I don\u0027t have another suggestion.\n\nInstead of using plugin.xml, let\u0027s register the factory in the GdbPlugin class using the IAdapterManager interface, which seems to be the way used in other situations of DSF; for example DsfUIPlugin registers an adapter factory to convert IDMVMContext to IDisassemblyBackend",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_0ac50332",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/plugin.xml",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 457
      },
      "writtenOn": "2013-12-10T11:51:37Z",
      "side": 1,
      "message": "I recommend doing this change in GdbPlugin (not DsfPlugin), since there could technically be a conflict with someone else trying to register a similar adapter.",
      "parentUuid": "8748d3a1_1b0c40ca",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_302b0eba",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/plugin.xml",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 482
      },
      "writtenOn": "2013-12-10T14:29:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8748d3a1_1b0c40ca",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_b5a0b0ef",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/plugin.xml",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 482
      },
      "writtenOn": "2013-12-10T14:29:26Z",
      "side": 1,
      "message": "I think this is not applicable, based on previous comment.",
      "parentUuid": "8748d3a1_0ac50332",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_2a8f1f3a",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/memory/GdbMemoryBlockRetrieval.java",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 457
      },
      "writtenOn": "2013-12-10T11:51:37Z",
      "side": 1,
      "message": "I think we can avoid this change by calling by having the caller of the constructor call initialize()",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_15ec0432",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/memory/GdbMemoryBlockRetrieval.java",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 482
      },
      "writtenOn": "2013-12-10T14:29:26Z",
      "side": 1,
      "message": "DsfMemoryBlockRetrieval needs a separate initialization as the memory context may not be available at the time it\u0027s constructed. \nThis was also the situation of the previous version of the GdbMemoryBlockRetrieval as it was created early in the launch sequence.  \nHowever this implementation creates it with the starting of a memory context entity (e.g. process, thread, etc..). Since it\u0027s now available why not simplify for GDB and use one step instead of two ?\n\nThe only concern I would have would be the breaking of the API, however this is an Internal package.",
      "parentUuid": "8748d3a1_2a8f1f3a",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_8a84731b",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/memory/GdbMemoryBlockRetrieval.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 457
      },
      "writtenOn": "2013-12-10T11:51:37Z",
      "side": 1,
      "message": "The pattern could be that the caller of the constructor must call initialize().  This would follow the same API as DsfMemoryBlockRetrieval.",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_f5e8781f",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/memory/GdbMemoryBlockRetrieval.java",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 482
      },
      "writtenOn": "2013-12-10T14:29:26Z",
      "side": 1,
      "message": "see my comment above",
      "parentUuid": "8748d3a1_8a84731b",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_2a9eff42",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/memory/GdbMemoryBlockRetrievalFactory.java",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 457
      },
      "writtenOn": "2013-12-10T11:51:37Z",
      "side": 1,
      "message": "What do you think about moving this to DSF, in o.e.cdt.dsf.debug.internal.provisional.model?\n\nYou\u0027ll have to change the MANIFEST file of o.e.cdt.dsf to add o.e.cdt.dsf.gdb as a friend to that package",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_cabafbb6",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/memory/GdbMemoryBlockRetrievalManager.java",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 457
      },
      "writtenOn": "2013-12-10T11:51:37Z",
      "side": 1,
      "message": "What do you think about moving this to DSF, in o.e.cdt.dsf.debug.internal.provisional.model?",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_16c41709",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/memory/GdbMemoryBlockRetrievalManager.java",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 457
      },
      "writtenOn": "2013-12-09T21:20:47Z",
      "side": 1,
      "message": "Why throw an exception?",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_702596e0",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/memory/GdbMemoryBlockRetrievalManager.java",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 482
      },
      "writtenOn": "2013-12-10T14:29:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8748d3a1_16c41709",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_4a6b8b99",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/memory/GdbMemoryBlockRetrievalManager.java",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 457
      },
      "writtenOn": "2013-12-10T11:51:37Z",
      "side": 1,
      "message": "If we move to DSF, the call below should become a call to a new\n\nprotected IMemoryBlockRetrieval createMemoryBlockRetrieval(model, config, session)\n\nwhich will create a DsfMemoryBlockRetrieval.\n\nWe\u0027ll then need to override this class and new method in DSF-GDB to use a GdbMemoryBlockRetrieval instead.",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_8aa3d385",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/memory/GdbMemoryBlockRetrievalManager.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 457
      },
      "writtenOn": "2013-12-10T11:51:37Z",
      "side": 1,
      "message": "How about calling memRetrieval.initialize(memDmc) here instead?",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_10141273",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/memory/GdbMemoryBlockRetrievalManager.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 482
      },
      "writtenOn": "2013-12-10T14:29:26Z",
      "side": 1,
      "message": "see answer in first comment of GdbMemoryBlockRetrieval",
      "parentUuid": "8748d3a1_8aa3d385",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_8a759372",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/memory/GdbMemoryBlockRetrievalManager.java",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 457
      },
      "writtenOn": "2013-12-10T11:51:37Z",
      "side": 1,
      "message": "Assuming above changes, check if instanceof DsfMemoryBlockRetrieval and then you can call saveMemBlocks()",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_ea0ff738",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/internal/memory/IMemoryBlockRetrievalManager.java",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 457
      },
      "writtenOn": "2013-12-10T11:51:37Z",
      "side": 1,
      "message": "How about we move this to DSF, in o.e.cdt.dsf.debug.internal.provisional.model?",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_76759b6e",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/launching/GdbLaunch.java",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 457
      },
      "writtenOn": "2013-12-09T21:20:47Z",
      "side": 1,
      "message": "Please update comment",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8748d3a1_f0108680",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/launching/GdbLaunch.java",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 482
      },
      "writtenOn": "2013-12-10T14:29:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8748d3a1_76759b6e",
      "revId": "acb59b49444c874eed7c08234b00af5fcf5f7ab2",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
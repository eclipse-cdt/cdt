{
  "comments": [
    {
      "key": {
        "uuid": "2058d398_f66c9f00",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/editor/SemanticHighlightings.java",
        "patchSetId": 3
      },
      "lineNbr": 1123,
      "author": {
        "id": 973
      },
      "writtenOn": "2018-06-24T02:37:59Z",
      "side": 1,
      "message": "Given:\n\n  enum E1 { A, B };\n  enum E2 : short { C, D };\n  enum class E3 { E, F };\n  enum class E4 : short { G, H };\n\ngetFixedType() will return non-null for E2, E3, and E4, but I assume you only want the new highlighting to apply to E3 and E4.\n\nWhat you want instead is ICPPEnumeration.isScoped(), which will only return true for E3 and E4.",
      "revId": "b5c9b65ec856ccc58b8ca0140652e80ea84afe42",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3e08d8b_c39f95b0",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/editor/SemanticHighlightings.java",
        "patchSetId": 3
      },
      "lineNbr": 1130,
      "author": {
        "id": 973
      },
      "writtenOn": "2018-06-24T02:37:59Z",
      "side": 1,
      "message": "We\u0027ll want the new highlighting to apply to dependent enum classes as well. To do that, we\u0027ll want to refactor heuristicallyResolvesToEnumeration() to return the enumeration, and  reorganize the logic a bit in this function to be something like this:\n\nIBinding binding \u003d token.getBinding();\nif (binding instanceof ICPPUnknownBinding) {\n    binding \u003d heuristicallyResolve(binding);\n}\nif (binding instanceof ICPPEnumeration) {\n  // return true if not an enum class\n}\nif (binding instanceof IEnumeration) { \n  // return true\n}",
      "revId": "b5c9b65ec856ccc58b8ca0140652e80ea84afe42",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5313f6a_793433fd",
        "filename": "core/org.eclipse.cdt.ui/src/org/eclipse/cdt/internal/ui/editor/SemanticHighlightings.java",
        "patchSetId": 3
      },
      "lineNbr": 1182,
      "author": {
        "id": 973
      },
      "writtenOn": "2018-06-24T02:37:59Z",
      "side": 1,
      "message": "Likewise, we want to use isScoped() here, and try to heuristically resolve a dependent enumeration before checking if it\u0027s an enum class.",
      "revId": "b5c9b65ec856ccc58b8ca0140652e80ea84afe42",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
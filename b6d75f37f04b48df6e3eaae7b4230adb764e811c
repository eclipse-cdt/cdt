{
  "comments": [
    {
      "key": {
        "uuid": "2721e7e2_368e5a3b",
        "filename": "core/org.eclipse.cdt.core.tests/parser/org/eclipse/cdt/core/parser/tests/rewrite/changegenerator/ReplaceTests.java",
        "patchSetId": 1
      },
      "lineNbr": 740,
      "author": {
        "id": 577
      },
      "writtenOn": "2015-08-03T19:42:30Z",
      "side": 1,
      "message": "The test case should probably be closer to what is described in https://bugs.eclipse.org/bugs/show_bug.cgi?id\u003d474020#c0 and contain a real node insertion.",
      "range": {
        "startLine": 740,
        "startChar": 8,
        "endLine": 740,
        "endChar": 12
      },
      "revId": "b6d75f37f04b48df6e3eaae7b4230adb764e811c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_901d86f5",
        "filename": "core/org.eclipse.cdt.core.tests/parser/org/eclipse/cdt/core/parser/tests/rewrite/changegenerator/ReplaceTests.java",
        "patchSetId": 1
      },
      "lineNbr": 740,
      "author": {
        "id": 661
      },
      "writtenOn": "2015-08-05T14:32:51Z",
      "side": 1,
      "message": "I can do that. But for reproduction of the case there needs to be a nested modification and the parent modification has to origin from actual code - otherwise we don\u0027t have macro expansions. The setup for the test case gets more complex and might distract from the actual problem.\n\nI chose to just insert the condition a second time.",
      "parentUuid": "2721e7e2_368e5a3b",
      "range": {
        "startLine": 740,
        "startChar": 8,
        "endLine": 740,
        "endChar": 12
      },
      "revId": "b6d75f37f04b48df6e3eaae7b4230adb764e811c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_168fd63a",
        "filename": "core/org.eclipse.cdt.core.tests/parser/org/eclipse/cdt/core/parser/tests/rewrite/changegenerator/ReplaceTests.java",
        "patchSetId": 1
      },
      "lineNbr": 765,
      "author": {
        "id": 577
      },
      "writtenOn": "2015-08-03T19:42:30Z",
      "side": 1,
      "message": "Please add a space after //",
      "range": {
        "startLine": 765,
        "startChar": 7,
        "endLine": 765,
        "endChar": 14
      },
      "revId": "b6d75f37f04b48df6e3eaae7b4230adb764e811c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_701a92fb",
        "filename": "core/org.eclipse.cdt.core.tests/parser/org/eclipse/cdt/core/parser/tests/rewrite/changegenerator/ReplaceTests.java",
        "patchSetId": 1
      },
      "lineNbr": 765,
      "author": {
        "id": 661
      },
      "writtenOn": "2015-08-05T14:32:51Z",
      "side": 1,
      "message": "Done - Removed the comment.",
      "parentUuid": "2721e7e2_168fd63a",
      "range": {
        "startLine": 765,
        "startChar": 7,
        "endLine": 765,
        "endChar": 14
      },
      "revId": "b6d75f37f04b48df6e3eaae7b4230adb764e811c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_9682a60a",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/rewrite/astwriter/MacroExpansionHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 577
      },
      "writtenOn": "2015-08-03T19:42:30Z",
      "side": 1,
      "message": "I don\u0027t quite understand why this check is limited to child statements as opposed to any child nodes.",
      "range": {
        "startLine": 76,
        "startChar": 24,
        "endLine": 76,
        "endChar": 37
      },
      "revId": "b6d75f37f04b48df6e3eaae7b4230adb764e811c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2721e7e2_30193a08",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/rewrite/astwriter/MacroExpansionHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 661
      },
      "writtenOn": "2015-08-05T14:32:51Z",
      "side": 1,
      "message": "Unfortunately, it is not quite obvious. Only IASTStatemens have special treatment for mixed locations. At least with the subsequent checks (macro location within node range) it only makes sense to go on for IASTStatements. Other node types might lose the macro expansion.\n\nIf the offset and length comparison is relaxed to also see children with equal offset and length (instead of smaller start and greater end), all children completely contained in the macro satisfy this condition. As they have exatly the macro expansion as location.  But this results in messed up code from specific cases of macro expansion usage (E.g. in ExtractFunctionRefactoringTest).\n\nI think I have to find a better condition for such cases.",
      "parentUuid": "2721e7e2_9682a60a",
      "range": {
        "startLine": 76,
        "startChar": 24,
        "endLine": 76,
        "endChar": 37
      },
      "revId": "b6d75f37f04b48df6e3eaae7b4230adb764e811c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
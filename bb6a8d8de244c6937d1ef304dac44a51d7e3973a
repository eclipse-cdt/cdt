{
  "comments": [
    {
      "key": {
        "uuid": "c7880b39_b888702f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-09-26T21:15:33Z",
      "side": 1,
      "message": "\"codan warnings and errors\" (or just \"codan problems\")",
      "revId": "bb6a8d8de244c6937d1ef304dac44a51d7e3973a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7880b39_7cefd7aa",
        "filename": "codan/org.eclipse.cdt.codan.checkers.ui/src/org/eclipse/cdt/codan/internal/checkers/ui/quickfix/QuickFixSuppressProblem.java",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-09-26T21:15:33Z",
      "side": 1,
      "message": "This is not going to work if the problem is on the last line of the file. To handle that case, we need to get the line offset of the line to which the marker pertains (as opposed to the next line) and add the line\u0027s length.\n\nPlease also add a test for this case.",
      "revId": "bb6a8d8de244c6937d1ef304dac44a51d7e3973a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7880b39_3ca0ef79",
        "filename": "codan/org.eclipse.cdt.codan.ui/src/org/eclipse/cdt/codan/internal/ui/CodanProblemMarkerResolutionGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-09-26T21:15:33Z",
      "side": 1,
      "message": "IConfigurationElement.createExecutableExtension() is an expensive operation. It would be better to only call it once per marker resolution.\n\nThat is, I\u0027m suggesting we store the universal resolutions in \"instantiated\" form (as IMarkerResolution objects) rather than instantiating them on each use.",
      "revId": "bb6a8d8de244c6937d1ef304dac44a51d7e3973a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7880b39_9cb003c7",
        "filename": "codan/org.eclipse.cdt.codan.ui/src/org/eclipse/cdt/codan/internal/ui/CodanProblemMarkerResolutionGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-09-26T21:15:33Z",
      "side": 1,
      "message": "I wonder if it would make sense to have AbstractCodanCMarkerResolution implement ICodanMarkerResolution2, and call setMarkerArguments() in its prepareFor() implementation? After all, setting the marker arguments is kind of a specific preparation that the resolution generator has so far been doing explicitly, but it feels like it would be better to make it the resolution\u0027s responsibility.",
      "revId": "bb6a8d8de244c6937d1ef304dac44a51d7e3973a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7880b39_5ca77b92",
        "filename": "codan/org.eclipse.cdt.codan.ui/src/org/eclipse/cdt/codan/internal/ui/CodanProblemMarkerResolutionGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-09-26T21:15:33Z",
      "side": 1,
      "message": "Here, too, we\u0027re re-instantiating the conditional resolutions on each potential use. I\u0027d rather we instantiate them once, and re-use them. (Then ConditionalResolution wouldn\u0027t even need to store the IConfigurationElement, just the IMarkerResolution.)",
      "revId": "bb6a8d8de244c6937d1ef304dac44a51d7e3973a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7880b39_7caa775b",
        "filename": "codan/org.eclipse.cdt.codan.ui/src/org/eclipse/cdt/codan/internal/ui/CodanProblemMarkerResolutionGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-09-26T21:15:33Z",
      "side": 1,
      "message": "The call to prepareFor() could happen in a peek() on the resulting stream before we call toArray() on it.",
      "revId": "bb6a8d8de244c6937d1ef304dac44a51d7e3973a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7880b39_d88b7c28",
        "filename": "codan/org.eclipse.cdt.codan.ui/src/org/eclipse/cdt/codan/ui/ICodanMarkerResolution2.java",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 973
      },
      "writtenOn": "2017-09-26T21:15:33Z",
      "side": 1,
      "message": "The naming convention for extension interfaces like this in the Eclipse codebase is \"ICodanMarkerResolutionExtension\" (and then \"ICodanMarkerResolutionExtension2\" for a further extension, and so on).",
      "revId": "bb6a8d8de244c6937d1ef304dac44a51d7e3973a",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
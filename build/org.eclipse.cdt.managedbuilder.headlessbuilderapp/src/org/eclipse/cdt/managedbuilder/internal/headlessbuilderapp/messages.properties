###############################################################################
# Copyright (c) 2021 STMicroelectronics and others.
#
# This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
###############################################################################

CommandLineUsage=Usage: {0} -data <workspace> -application org.eclipse.cdt.managedbuilder.core.headlessbuild [ OPTIONS ]\n\
'\n\
\   -data       {/path/to/workspace}\n\
\   -remove     {[uri:/]/path/to/project}\n\
\   -removeAll  {[uri:/]/path/to/projectTreeURI} Remove all projects under URI\n\
\   -import     {[uri:/]/path/to/project}\n\
\   -importAll  {[uri:/]/path/to/projectTreeURI} Import all projects under URI\n\
\   -build      {project_name_reg_ex{/config_reg_ex} | all}\n\
\   -cleanBuild {project_name_reg_ex{/config_reg_ex} | all}\n\
\   -markerType Marker types to fail build on {all | cdt | marker_id}\n\
\   -no-indexer Disable indexer\n\
\   -verbose    Verbose progress monitor updates\n\
\   -printErrorMarkers Print all error markers\n\
\   -I          {include_path} additional include_path to add to tools\n\
\   -include    {include_file} additional include_file to pass to tools\n\
\   -D          {prepoc_define} addition preprocessor defines to pass to the tools\n\
\   -E          {var=value} replace/add value to environment variable when running all tools\n\
\   -Ea         {var=value} append value to environment variable when running all tools\n\
\   -Ep         {var=value} prepend value to environment variable when running all tools\n\
\   -Er         {var} remove/unset the given environment variable\n\
\   -T          {toolid} {optionid=value} replace a tool option value in each configuration built\n\
\   -Ta         {toolid} {optionid=value} append to a tool option value in each configuration built\n\
\   -Tp         {toolid} {optionid=value} prepend to a tool option value in each configuration built\n\
\   -Tr         {toolid} {optionid=value} remove a tool option value in each configuration built\n\
\               Tool option values are parsed as a string, comma separated list of strings or a boolean based on the option''s type\n\
'

WorkspaceRequired=A workspace is required to use of the headless builder application.\n

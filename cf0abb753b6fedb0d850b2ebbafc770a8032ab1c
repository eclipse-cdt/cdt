{
  "comments": [
    {
      "key": {
        "uuid": "e7dfcf21_d0d8cc1d",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPDeferredFunction.java",
        "patchSetId": 3
      },
      "lineNbr": 176,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "If you split out getConstructorChainExecution() into an ICPPComputableConstructor interface as I suggest below, then this override will not be necessary.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_aec38c7d",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPDeferredFunction.java",
        "patchSetId": 3
      },
      "lineNbr": 176,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-09-04T06:47:19Z",
      "side": 1,
      "message": "(Since I wrote this comment, CPPDeferredConstructor was introduced, so while CPPDeferredFunction no longer needs an override like this, CPPDeferredConstructor still does.)",
      "parentUuid": "e7dfcf21_d0d8cc1d",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_d07c4c5e",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFieldSpecialization.java",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "Now that we have a CPPVariableSpecialization, this should be refactored to inherit from it.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_eea59933",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFieldSpecialization.java",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_d07c4c5e",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_90f5647b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFieldTemplatePartialSpecialization.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "Better: \n\n  return ((ICPPFieldTemplate) getPrimaryTemplate()).getFieldPosition();",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_414b097f",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFieldTemplatePartialSpecialization.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_90f5647b",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_f0e5c8c8",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFunction.java",
        "patchSetId": 3
      },
      "lineNbr": 770,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "As with function body executions, we probably shouldn\u0027t compute constructor chain executions if the function is not constexpr.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_61464577",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFunction.java",
        "patchSetId": 3
      },
      "lineNbr": 770,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_f0e5c8c8",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_10e154ba",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFunction.java",
        "patchSetId": 3
      },
      "lineNbr": 777,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "In Java 7, you can write \"new ArrayList\u003c\u003e()\" here.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_81a8b195",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFunction.java",
        "patchSetId": 3
      },
      "lineNbr": 777,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_10e154ba",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_30e010b5",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFunction.java",
        "patchSetId": 3
      },
      "lineNbr": 783,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "And \"new Pair\u003c\u003e(fieldMember, memberEval)\" here.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_a1abed8e",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFunction.java",
        "patchSetId": 3
      },
      "lineNbr": 783,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_30e010b5",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_b0a7c091",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFunction.java",
        "patchSetId": 3
      },
      "lineNbr": 788,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "What if the constructor call uses the {} syntax? Then the initializer would be an ICPPASTInitializerList.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_ce152071",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFunction.java",
        "patchSetId": 3
      },
      "lineNbr": 788,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-09-04T06:47:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_b0a7c091",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_d0aa8c59",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFunctionSpecialization.java",
        "patchSetId": 3
      },
      "lineNbr": 360,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "Doesn\u0027t the execution need to be instantiated, the way the return expression\u0027s evaluation is in getReturnExpression()?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_6e62540a",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFunctionSpecialization.java",
        "patchSetId": 3
      },
      "lineNbr": 360,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-09-04T06:47:19Z",
      "side": 1,
      "message": "Things worked because the execution was being instantiated in EvalFunctionCall.evaluateFunctionBody(). However, I believe it\u0027s better to do the instantiation in CPPFunctionSpecialization.getFunctionBodyExecution() and PDOMCPPFunctionSpecialization.getFunctionBodyExecution(), so I moved it there.",
      "parentUuid": "e7dfcf21_d0aa8c59",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_f0b068c7",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFunctionSpecialization.java",
        "patchSetId": 3
      },
      "lineNbr": 377,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "Likewise here?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_8e6a48df",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPFunctionSpecialization.java",
        "patchSetId": 3
      },
      "lineNbr": 377,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-09-04T06:47:19Z",
      "side": 1,
      "message": "I left this one as a TODO, since instantiation for constructor chain executions isn\u0027t implemented yet to begin with.",
      "parentUuid": "e7dfcf21_f0b068c7",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_10acf472",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPImplicitConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "Instead of overriding this method, pass the correct value in for the \"isConstexpr\" parameter when constructing the CPPImplicitConstructor.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_0b046a8a",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPImplicitConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-09-04T06:47:19Z",
      "side": 1,
      "message": "I tried this, but found that calling TypeTraits.isLiteralClass() in some of the places where a CPPImplicitConstructor is constructed (CPPClassScope.createImplicitMembers()) is too early (not enough stuff is resolved yet). So this is fine as is.",
      "parentUuid": "e7dfcf21_10acf472",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_908724ef",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPTemplateParameterMap.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "Few comments about this:\n\n  - Please add a comment saying what is being mapped\n    (looks like function parameters).\n\n  - Since the objects being mapped are function parameters,\n    I don\u0027t think this belongs in the template parameter map.\n    InstantiationContext would be a better place.\n\n  - Since this is only used in a fairly specific situation,\n    you may want to implement an optimization where the\n    HashMap object is only created the first time you\n    call putBinding().",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_2e5cdc50",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPTemplateParameterMap.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-09-04T06:47:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_908724ef",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_3092d028",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPVariable.java",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "If \"nestedType instanceof ICPPClassType\", initialValue isn\u0027t used at all; let\u0027s avoid computing it in that case.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_c1b2b9ff",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPVariable.java",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_3092d028",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_508d9c08",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPVariable.java",
        "patchSetId": 3
      },
      "lineNbr": 285,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "Please avoid calling findImplicitlyCalledConstructor() twice (once in hasImplicitlyCalledCtor(), and once here). It\u0027s an expensive operation.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_e1b5f5e7",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPVariable.java",
        "patchSetId": 3
      },
      "lineNbr": 285,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_508d9c08",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_706ff8a5",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPVariable.java",
        "patchSetId": 3
      },
      "lineNbr": 286,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "I notice that in some other places where we create an EvalConstructor, we use the one-argument form of EvalConstructor.extractArguments(). Is there a reason for the difference?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_ae1c6c9e",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/CPPVariable.java",
        "patchSetId": 3
      },
      "lineNbr": 286,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-09-04T06:47:19Z",
      "side": 1,
      "message": "I think the desired logic is:\n\n  - If we know what constructor call we\u0027ll be expanding\n    the arguments into, use the two-argument form that\n    takes the constructor.\n\n  - Otherwise, use the one-argument form.\n\nAccordingly, I\u0027ve adjusted the call site in CPPFunction.getConstructorChainExecution(IASTNode) to use the two-argument form.\n\nThat said, I think there are a number of bugs in our handling of initializer lists that may require us to re-think this part of the code. However, that can be left as a follow-up.",
      "parentUuid": "e7dfcf21_706ff8a5",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_90ce445b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/ICPPComputableFunction.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "It may be worth introducing an ICPPComputableConstructor interface inheriting from ICPPComputableFunction, and declaring this method in ICPPComputableConstructor. (And then, for example, only CPPConstructor would implement ICPPComputableConstructor, not CPPFunction).",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_8ec6c88e",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/ICPPComputableFunction.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-09-04T06:47:19Z",
      "side": 1,
      "message": "I ended up moving the method to ICPPConstructor itself, since all implementations of ICPPConstructor would have implemented ICPPComputableConstructor as well.\n\nIt turned out to be a bit more annoying than I initially envisioned, because of the way our hierarchies work: e.g. PDOMCPPConstructor and PDOMCPPConstructorTemplate have a common base class that implements ICPPComputableFunction (that being PDOMCPPFunction), but not one that implements ICPPConstructor; as a result, I had to duplicate some implementations of the method. However, I think it was worth it for the index size reduction (not storing an empty constructor execution field for function records that are not constructors).",
      "parentUuid": "e7dfcf21_90ce445b",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_b0e26090",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ActivationRecord.java",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "Please add a comment describing the purpose of the class. (It\u0027s described pretty well in the comment above ICPPEvaluation.computeForFunctionCall(), but a reader may not know to look there.)",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_6178059c",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ActivationRecord.java",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_b0e26090",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_500cbcf5",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 3
      },
      "lineNbr": 969,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "Why can\u0027t this be handled as a case in createSpecalization()?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_703a9884",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 3
      },
      "lineNbr": 973,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "What if the value changes while the type remains the same?\n\nFor example:\n\n  template \u003cint N\u003e\n  void foo()\n  {\n    int var \u003d N;\n  }\n\nHere, the type of the variable specialization is the same as the type of the original variable, but the initial value is different.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_903d647c",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 3
      },
      "lineNbr": 978,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "What if the variable is a variable template? Do we not need a CPPVariableTemplateSpecialization class now? (Compare the corresponding code for fields in createSpecialization()).",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_b0342095",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 3
      },
      "lineNbr": 1015,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "What about local classes? (We can handle those in a follow-up, but please add a TODO comment about it.)",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_d037ec95",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 3
      },
      "lineNbr": 1086,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "(Enumerations can be local to a function, too.)",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_f02dc849",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPTemplates.java",
        "patchSetId": 3
      },
      "lineNbr": 1125,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "This declaration was split across two lines on purpose, to respect the 110-character width limit. Please preserve it, here and elsewhere.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_1029543b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPVisitor.java",
        "patchSetId": 3
      },
      "lineNbr": 1278,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "We can probably remove the code that does the same thing before the getUltimateTypeUptoPointers() call - shouldn\u0027t need to check twice.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_4e1f65eb",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/CPPVisitor.java",
        "patchSetId": 3
      },
      "lineNbr": 1278,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_1029543b",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_704c581d",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalBinary.java",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "As mentioned elsewhere, please do not invent AST nodes to call EvalID.create(). Use EvalBinding instead.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_c1371907",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalBinary.java",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_704c581d",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_b0c180cb",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalBinary.java",
        "patchSetId": 3
      },
      "lineNbr": 174,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "We should cache the overload evaluation, similar to how the overload itself is cached.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_b01340e7",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalBinary.java",
        "patchSetId": 3
      },
      "lineNbr": 432,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "Throughout this function, propagate context.getPoint() into calls like this instead of passing \"null\"",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_e13a55ef",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalBinary.java",
        "patchSetId": 3
      },
      "lineNbr": 432,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_b01340e7",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_70b7f872",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalBinary.java",
        "patchSetId": 3
      },
      "lineNbr": 461,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "context.getPoint() should be propagated into here instead of passing null",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_0151012d",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalBinary.java",
        "patchSetId": 3
      },
      "lineNbr": 461,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_70b7f872",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_90bac458",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalBinary.java",
        "patchSetId": 3
      },
      "lineNbr": 466,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "Same here",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_214c3d97",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalBinary.java",
        "patchSetId": 3
      },
      "lineNbr": 466,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_90bac458",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_50559c95",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalBinary.java",
        "patchSetId": 3
      },
      "lineNbr": 473,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "Is EvalCompositeAccess only used for arrays? If so, can we rename it to EvalArrayAccess so it\u0027s clearer? (If not, we need an extra check here.)",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_ac3f64e1",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalCompositeAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-12T06:50:52Z",
      "side": 1,
      "message": "Please add a comment describing what sorts of \"composites\" this is used for.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_2c4b5481",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalCompositeAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-12T06:50:52Z",
      "side": 1,
      "message": "This is too easily confused with getValue(IASTNode). Can we call it \"getTargetEvaluation()\" instead?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_41a6a9c3",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalCompositeAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_2c4b5481",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_ec396cfc",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalCompositeAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-12T06:50:52Z",
      "side": 1,
      "message": "Was this meant to be isValueDependent()?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_019ca175",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalCompositeAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_ec396cfc",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_4c4a607c",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalCompositeAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-12T06:50:52Z",
      "side": 1,
      "message": "Probably better to use parent.getTemplateDefinition().",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_2197dd52",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalCompositeAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_4c4a607c",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_6c455c68",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalCompoundStatementExpression.java",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-12T06:50:52Z",
      "side": 1,
      "message": "Now that we can represent statement executions, this evaluation should store the executions of the statements that come before the last one in the statement-expression. Feel free to leave this for later and just add a TODO comment about it.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_2c7d148e",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-12T06:50:52Z",
      "side": 1,
      "message": "Please make this static, so it doesn\u0027t take up space in every EvalConstructor instance. (Even better would be to remove it altogether, but I can\u0027t think right now of how to replace it use.)",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_6e9189d3",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_2c7d148e",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_6c771cac",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-12T06:50:52Z",
      "side": 1,
      "message": "This can be type-dependent if \"type\" is dependent, or if \"arguments\" are type-dependent. Compare EvalTypeId.isTypeDependent().",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_ae872198",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_6c771cac",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_8cf9c890",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-12T06:50:52Z",
      "side": 1,
      "message": "Similarly, compare EvalTypeId.isValueDependent().",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_ce0b75b3",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_8cf9c890",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_acfcc47e",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-12T06:50:52Z",
      "side": 1,
      "message": "Why not \"type\"?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_8e8a5da1",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_acfcc47e",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_ec06cc28",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-12T06:50:52Z",
      "side": 1,
      "message": "I guess the idea here is that you need to call computeForFunctionCall() on this before you can get its value? This might be problematic, but I\u0027m not sure; we can try it.\n\nAlso, EvalFixed.INCOMPLETE.getValue() can be expressed more directly as IntegralValue.ERROR.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_dc7bcd97",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "I assume \"record\" here is the activation record of the function in which the constructor is called (as opposed to the activation record of the constructor itself, which we create below). Could we rename the parameter to make this clearer?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_8e25fd37",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "I renamed the two variables to \u0027callSiteRecord\u0027 and \u0027localRecord\u0027.",
      "parentUuid": "a7e957d1_dc7bcd97",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_bc7e0189",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Any reason we can\u0027t just use \"constructedObject\" as the evaluation representing the implicit this? That would get us one step closer to not needing the invented AST node.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_ee375967",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_bc7e0189",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_1cf9b58e",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Shouldn\u0027t the activation record used to evaluate the base class initializer be \"activationRecord\" rather than \"record\"?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_ae22c12a",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_1cf9b58e",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_9c0ce54a",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Throughout this function, pass \"context.getPoint()\" instead of \"null\" for IASTNode parameters.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_ce329579",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_9c0ce54a",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_9c3305fa",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Two comments about this:\n\n  1) I think it would be easier to understand to just inline this,\n     rather than constructing a temporary EvalCompositeAccess:\n\n     constructedObject.getValue(context.getPoint()).set(\n             fieldPos, baseClassValues[fieldPos]);\n\n  2) We\u0027re going to have the same problem with multiple inheritance,\n     as in CompositeValue.create(ICPPClassType).",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_dcdf4df8",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "EvalFunctionCall.computeForFunctionCall():\n\n  - evaluates the arguments again\n  - creates yet another activation record (inside \n    evaluateFunctionBody())\n\nIs either of these necessary?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_7c8d593d",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Linear searching through a list of pairs is an indication that you should probably be using a map instead.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_bc4c4199",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 195,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "After you modify CPPFunctionSpecialization.getConstructorChainExecution() to instantiate the execution as suggested in a previous comment, instantiating it here will no longer be necessary.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_5c36dd0d",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 211,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Inline paramCount into this condition. That way, if args.length is not 1, we don\u0027t call constructor.getParameters().",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_6e1c29f6",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 211,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_5c36dd0d",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_0c0db844",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 259,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-12T06:50:52Z",
      "side": 1,
      "message": "This should probably be implemented. Use EvalTypeId as guidance.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_ee1039de",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 259,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_0c0db844",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_2c08b432",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 264,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-12T06:50:52Z",
      "side": 1,
      "message": "Likewise.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_0e12cde3",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 264,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7dfcf21_2c08b432",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_ec1dec6c",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalConstructor.java",
        "patchSetId": 3
      },
      "lineNbr": 307,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-12T06:50:52Z",
      "side": 1,
      "message": "Shouldn\u0027t the \"impliedObjectType\" parameter of the EvalFunctionSet constructor be \"newType\" rather than \"null\"?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_bce281bd",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalFunctionCall.java",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "This function will become unnecessary if you instantiate in CPPFunctionSpecialization.getFunctionBodyExecution().",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_fcdc0906",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalFunctionCall.java",
        "patchSetId": 3
      },
      "lineNbr": 304,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Why are we executing it a second time?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_1c9d3547",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalFunctionCall.java",
        "patchSetId": 3
      },
      "lineNbr": 306,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "execReturn",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_5ca7bd92",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalFunctionCall.java",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Why do this at all? Why do it for EvalBindings only? (I realize that either not doing it at all, or doing it for all evaluation types, breaks tests, but I don\u0027t understand why. A comment would be helpful.)",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_9ce5c5ca",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalFunctionCall.java",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "The \"getOverload(point) \u003d\u003d null\" condition is redundant. We already know it\u0027s null.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_217efd8a",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalFunctionCall.java",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_9ce5c5ca",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_7cf1d989",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalFunctionCall.java",
        "patchSetId": 3
      },
      "lineNbr": 354,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Add a comment saying why this is 1 (because the first argument is the function\u0027s evaluation).",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_417dc98b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalFunctionCall.java",
        "patchSetId": 3
      },
      "lineNbr": 354,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_7cf1d989",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_9c49453b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalMemberAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 429,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Can we use this.getTemplateDefinition() here?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_0183c110",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalMemberAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 429,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_9c49453b",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_bc460126",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalMemberAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 436,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "And here?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_e18c1544",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalMemberAccess.java",
        "patchSetId": 3
      },
      "lineNbr": 436,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_bc460126",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_bcf8c13e",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalPointer.java",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Add a comment saying that we can only have position !\u003d 0 if the EvalReference has a referredSubValue, not a referredBinding.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_dcf58d45",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalPointer.java",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Call the third parameter \"templateDefinition\".",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_21651d0f",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalPointer.java",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_dcf58d45",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_fcf2495a",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalPointer.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Likewise.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_016ae1e0",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalPointer.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_fcf2495a",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_bc0361c6",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalPointer.java",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Should this also null out referredBinding?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_9c06a5d7",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalPointer.java",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Wouldn\u0027t position \u003d\u003d numberOfValues() also make it out of range?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_4174e9bf",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalPointer.java",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Silvano has written this code, so I am not absolutely sure, but I think the reason is that in a constexpr context it is allowed to point to one past the last element as long as you don\u0027t dereference it. Example:\n\nconstexpr int f() {\n\tint arr[2]{};\n\tint* ptr \u003d arr;          // refers to arr[0] \u003d\u003e valid\n\tptr++;\t\t\t// refers to arr[1] \u003d\u003e valid\n\tptr++;\t\t\t// one past end \u003d\u003e still valid\n\tptr++;\t\t\t// illegal in a constexpr context\n\treturn 0;\n}\nconstexpr int x \u003d f();",
      "parentUuid": "a7e957d1_9c06a5d7",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_dd3f1b71",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalPointer.java",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-07-20T00:21:12Z",
      "side": 1,
      "message": "OK, thank you for explaining. Perhaps this is worth mentioning in a comment.",
      "parentUuid": "87e453f8_4174e9bf",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_3f2f43c6",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalPointer.java",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "I find it strange that the value of a pointer is considered to be its offset into the array it points into.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_bcd1a1c6",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalReference.java",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Add a comment saying that there\u0027s either a referredBinding or a rederredSubValue, but not both.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_c11b9977",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalReference.java",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_bcd1a1c6",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_5ccb3d1b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalReference.java",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Call the third parameter \"templateDefinition\".",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_a1fdad7b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalReference.java",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_5ccb3d1b",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_7cd0f9c2",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalReference.java",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Likewise.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_c1047924",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalReference.java",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_7cd0f9c2",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_9cd4e5b7",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalReference.java",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "This line is redundant, object fields are initialized to null automatically.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_a124cdb7",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalReference.java",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "This doesn\u0027t work because referredBinding is final. If you want I can change that, but I think it makes sense to make it final.",
      "parentUuid": "a7e957d1_9cd4e5b7",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_3d2e5746",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalReference.java",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-07-20T00:21:12Z",
      "side": 1,
      "message": "Thanks, it\u0027s fine as it is then.",
      "parentUuid": "87e453f8_a124cdb7",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_dcde6dd5",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalReference.java",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "As with EvalCompositeAccess.getValue(), I think this would be better named getTargetEvaluation().",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_4e94c5c5",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalReference.java",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_dcde6dd5",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_9cfb053b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalReference.java",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Why only for EvalReference?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_7ce719a2",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalReference.java",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "So instantiation loses the EvalReference wrapper, and gives you just the target value - is that intentional?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_fc0de9f2",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalTypeId.java",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Don\u0027t character types also value-initialize to zero?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_1c3a9583",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalTypeId.java",
        "patchSetId": 3
      },
      "lineNbr": 296,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Since we\u0027re not using \"args\", let\u0027s do this check before computing \"args\".",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_2e9cf1ee",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalTypeId.java",
        "patchSetId": 3
      },
      "lineNbr": 296,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_1c3a9583",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_5c6fbd73",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUnary.java",
        "patchSetId": 3
      },
      "lineNbr": 395,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Use EvalBinding",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_a1592d63",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUnary.java",
        "patchSetId": 3
      },
      "lineNbr": 395,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_5c6fbd73",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_bc75213f",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUnary.java",
        "patchSetId": 3
      },
      "lineNbr": 447,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "null -\u003e context.getPoint()",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_c160f903",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUnary.java",
        "patchSetId": 3
      },
      "lineNbr": 447,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_bc75213f",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_dc82eda1",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUnary.java",
        "patchSetId": 3
      },
      "lineNbr": 460,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Likewise.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_e163350b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUnary.java",
        "patchSetId": 3
      },
      "lineNbr": 460,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_dc82eda1",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_fc7fa91a",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Exr -\u003e Expr",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_61148573",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_fc7fa91a",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_3c5111b1",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "null -\u003e context.getPoint()",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_411949ab",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_3c5111b1",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_dc590dd6",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "null -\u003e context.getPoint()",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_8156f130",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_dc590dd6",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_fc56c9a2",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "This function has no callers.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_211a7da2",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_fc56c9a2",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7dfcf21_f0aa2808",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/EvalUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-11T07:29:21Z",
      "side": 1,
      "message": "Please explain, in a comment, what this function does, and what the two components of the pair signify. It\u0027s not at all obvious to a reader. (I still haven\u0027t figured it out, and I\u0027ve been looking at this code for a while.)",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_dc266d42",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecConstructorChain.java",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "It\u0027s probably a mistake to ever try to instantiate this (the constructor should be instantiated instead, and the constructor chain of the constructor specialization queried). Can we throw UnsupportedOperationException here?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_ae670c16",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecConstructorChain.java",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-09-04T06:47:19Z",
      "side": 1,
      "message": "Looking at this again, my suggestion doesn\u0027t make sense. When you query the constructor chain of the constructor specialization, the constructor specialization takes the original constructor\u0027s chain and instantiates it (at least, that\u0027s what it\u0027s supposed to do; that\u0027s currently not implemented, as commented elsewhere).\n\nSo the actual instantiation work does happen here, and this needs to be implemented. So, instead of throwing an UnsupportedOperationException, I just added a TODO comment.",
      "parentUuid": "a7e957d1_dc266d42",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_fc8889ab",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecDeclarator.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "null -\u003e context.getPoint() throughout this function",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_c12559e3",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecDeclarator.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_fc8889ab",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_3c0e71c5",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecDeclarator.java",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "null -\u003e context.getPoint()",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_e12895bb",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecDeclarator.java",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_3c0e71c5",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_bc19a107",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecDeclarator.java",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "null -\u003e context.getPoint()",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_011f4194",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecDeclarator.java",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_bc19a107",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_dcd82d9b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecDo.java",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Does this \"continue\" do anything (different from just reaching the end of the loop body)?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_0e972dcd",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecDo.java",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-08-27T18:10:36Z",
      "side": 1,
      "message": "You\u0027re right. This doesn\u0027t do anything. I\u0027ll remove it.",
      "parentUuid": "a7e957d1_dcd82d9b",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_3fdd8356",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecRangeBasedFor.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Throughout this file, null -\u003e context.getPoint()",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_41022943",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecRangeBasedFor.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_3fdd8356",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_df001f3c",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecRangeBasedFor.java",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "This can be static like isEqual().",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_61fd65a3",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecRangeBasedFor.java",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_df001f3c",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_fffddba4",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecRangeBasedFor.java",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "This too.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_812b51b8",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecRangeBasedFor.java",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_fffddba4",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_1f2a87b5",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecRangeBasedFor.java",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Use EvalUnary with the prefix-increment operator. All iterators are required to provide that, while only random-access iterators are required to define a binary plus operator.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_bff353d8",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecRangeBasedFor.java",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Use EvalBinding",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_616f25ef",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecRangeBasedFor.java",
        "patchSetId": 3
      },
      "lineNbr": 129,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_bff353d8",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_7f12ab94",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecRangeBasedFor.java",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Please move this function to SemanticUtil.java.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_a12e8dc6",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecRangeBasedFor.java",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_7f12ab94",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_3f082367",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecRangeBasedFor.java",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "This is not the correct way to instantiate the begin and end functions. The reason is that, if the range type is dependent, argument-dependent lookup may find different begin and end functions to call after instantiation.\n\nHere\u0027s an outline of how to do it correctly:\n\n  - Construct EvalFunctionCall evaluations representing the\n    invocations of the begin and end functions with the\n    range as the argument.\n\n  - Instantiate the EvalFunctionCalls. This will perform the\n    ADL, if appropriate, in EvalFunctionSet.resolveFunction().\n\n  - Query the instantiated function bindings from the\n    instantiated EvalFunctionCalls.\n\nFeel free to leave implementing this for later and just add a TODO comment.\n\n(An alternative way to implement range-based for loops is to \"lower\" them to the form described in the standard, built using the appropriate evaluations and executions. Then the above instantiations will fall out from that automatically.)",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_7f29cbbc",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecSwitch.java",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Switch statements cannot contain \"continue\".",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_a1920d5b",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecSwitch.java",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "I think it\u0027s possible, if the switch statement is inside a loop. For example:\n\nfor(int i \u003d 0; i \u003c 10; i++) {\n\tswitch(i) {\n\t\tcase 0:\n\t\tcase 1:\n\t\tcase 2:\n\t\tcase 3:\n\t\t\tstd::cout \u003c\u003c \"skipping \" \u003c\u003c i \u003c\u003c \u0027\\n\u0027;\n\t\t\tcontinue;\n\t}\n\tstd::cout \u003c\u003c i \u003c\u003c \u0027\\n\u0027;\n}",
      "parentUuid": "a7e957d1_7f29cbbc",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27af2791_5d2b0b34",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecSwitch.java",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-07-20T00:21:12Z",
      "side": 1,
      "message": "You\u0027re right, I wasn\u0027t thinking clearly when I wrote this comment.",
      "parentUuid": "87e453f8_a1920d5b",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_5f240fe6",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecSwitch.java",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "executionsDidChange",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_c189d933",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/ExecSwitch.java",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_5f240fe6",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_9f1db79d",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/SemanticUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 855,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "\"clause\" is null here - use \"init\" instead.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_21f35dda",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/SemanticUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 855,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_9f1db79d",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_bf1a73a0",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/dom/parser/cpp/semantics/TypeTraits.java",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "This third property is not being checked.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_1f552726",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/dom/TypeMarshalBuffer.java",
        "patchSetId": 3
      },
      "lineNbr": 199,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "You\u0027ll also need to increment the PDOM version in PDOM.java (increment the major version in each of MIN_SUPPORTED_VERSION, MAX_SUPPORTED_VERSION, and DEFAULT_VERSION).",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_01f821b5",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/dom/TypeMarshalBuffer.java",
        "patchSetId": 3
      },
      "lineNbr": 199,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_1f552726",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_3f5ae356",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/dom/cpp/PDOMCPPField.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Use PDOMCPPVariable.RECORD_SIZE instead of \"ANNOTATIONS + 1\".",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_e111758f",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/dom/cpp/PDOMCPPField.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_3f5ae356",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_5f5faf45",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/dom/cpp/PDOMCPPFieldInstance.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "Why not ((ICPPField) getSpecializedBinding()).getFieldPosition()?",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_c10e3973",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/dom/cpp/PDOMCPPFieldInstance.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_5f5faf45",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_7f646b15",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/dom/cpp/PDOMCPPFieldTemplate.java",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "PDOMCPPFieldTemplates should store their field position just like PDOMCPPFields.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_a1076d56",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/dom/cpp/PDOMCPPFieldTemplate.java",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_7f646b15",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_ff6f9bec",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/dom/cpp/PDOMCPPFieldTemplatePartialSpecialization.java",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "((ICPPField) getPrimaryTemplate()).getFieldPosition()",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_81043155",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/dom/cpp/PDOMCPPFieldTemplatePartialSpecialization.java",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_ff6f9bec",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_1f3c47ee",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/dom/cpp/PDOMCPPFunction.java",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "We may want to consider optimizing this, so that we don\u0027t take up 12 bytes of space in every function including non-constexpr ones. We can leave that for a follow-up.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7e957d1_7f3b8bf4",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/dom/cpp/PDOMCPPVariableInstance.java",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 973
      },
      "writtenOn": "2016-05-13T05:21:09Z",
      "side": 1,
      "message": "This import is not used.",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e453f8_61e2c50e",
        "filename": "core/org.eclipse.cdt.core/parser/org/eclipse/cdt/internal/core/pdom/dom/cpp/PDOMCPPVariableInstance.java",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 76438
      },
      "writtenOn": "2016-06-05T10:34:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7e957d1_7f3b8bf4",
      "revId": "cf0abb753b6fedb0d850b2ebbafc770a8032ab1c",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
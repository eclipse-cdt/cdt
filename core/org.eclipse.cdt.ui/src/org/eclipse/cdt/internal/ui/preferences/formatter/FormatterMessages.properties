###############################################################################
# Copyright (c) 2000, 2011 IBM Corporation and others.
#
# This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#     IBM Corporation - initial API and implementation
#     istvan@benedek-home.de - 103706 [formatter] indent empty lines
#     Aaron Luchko, aluchko@redhat.com - 105926 [Formatter] Exporting Unnamed profile fails silently
#     Sergey Prigogin (Google)
#     Anton Leherbauer (Wind River Systems)
###############################################################################

WhiteSpaceTabPage_assignments=Assignments
WhiteSpaceTabPage_assignments_before_assignment_operator=before assignment operator
WhiteSpaceTabPage_assignments_after_assignment_operator=after assignment operator

WhiteSpaceTabPage_operators=Operators
WhiteSpaceTabPage_operators_before_binary_operators=before binary operators
WhiteSpaceTabPage_operators_after_binary_operators=after binary operators
WhiteSpaceTabPage_operators_before_unary_operators=before unary operators
WhiteSpaceTabPage_operators_after_unary_operators=after unary operators
WhiteSpaceTabPage_operators_before_prefix_operators=before prefix operators
WhiteSpaceTabPage_operators_after_prefix_operators=after prefix operators
WhiteSpaceTabPage_operators_before_postfix_operators=before postfix operators
WhiteSpaceTabPage_operators_after_postfix_operators=after postfix operators

WhiteSpaceTabPage_lambda_expressions=Lambda expressions
WhiteSpaceTabPage_lambda_before_return=before return arrow
WhiteSpaceTabPage_lambda_after_return=after return arrow

WhiteSpaceTabPage_classes=Types
WhiteSpaceTabPage_classes_before_opening_brace_of_a_class=before opening brace of a class
WhiteSpaceTabPage_classes_before_colon_of_base_clause=before colon of base clause
WhiteSpaceTabPage_classes_after_colon_of_base_clause=after colon of base clause
WhiteSpaceTabPage_classes_before_comma_base_types=before comma in base clause
WhiteSpaceTabPage_classes_after_comma_base_types=after comma in base clause
WhiteSpaceTabPage_functions=Functions
WhiteSpaceTabPage_declarator_list=Declarator list
WhiteSpaceTabPage_declarator_list_before_comma=before comma in declarator list
WhiteSpaceTabPage_declarator_list_after_comma=after comma in declarator list
WhiteSpaceTabPage_namespace=Namespace
WhiteSpaceTabPage_namespace_before_brace=before brace in namespace declaration
WhiteSpaceTabPage_linkage=Linkage
WhiteSpaceTabPage_linkage_before_brace=before brace in linkage declaration
WhiteSpaceTabPage_expression_list=Expression list
WhiteSpaceTabPage_expression_list_before_comma=before comma in expression list
WhiteSpaceTabPage_expression_list_after_comma=after comma in expression list
WhiteSpaceTabPage_initializer_list=Initializer list
WhiteSpaceTabPage_exception_specifications=Exception specifications

WhiteSpaceTabPage_calls=Function invocations

WhiteSpaceTabPage_calls_before_comma_in_function_args=before comma in function arguments
WhiteSpaceTabPage_calls_after_comma_in_function_args=after comma in function arguments
WhiteSpaceTabPage_statements=Control statements

WhiteSpaceTabPage_blocks=Blocks

WhiteSpaceTabPage_switch='switch'
WhiteSpaceTabPage_switch_before_case_colon=before colon in case
WhiteSpaceTabPage_switch_before_default_colon=before colon in default

WhiteSpaceTabPage_do='while' & 'do while'

WhiteSpaceTabPage_try='catch'

WhiteSpaceTabPage_if='if else'

WhiteSpaceTabPage_for='for'
#WhiteSpaceTabPage_for_before_comma_init=before comma in initialization
#WhiteSpaceTabPage_for_after_comma_init=after comma in initialization
#WhiteSpaceTabPage_for_before_comma_inc=before comma in increments
#WhiteSpaceTabPage_for_after_comma_inc=after comma in increments

WhiteSpaceTabPage_labels=Labels
WhiteSpaceTabPage_structured_bindings=Structured bindings
WhiteSpaceTabPage_template_arguments=Template arguments
WhiteSpaceTabPage_template_parameters=Template parameters

WhiteSpaceTabPage_conditionals=Conditionals

WhiteSpaceTabPage_typecasts=Type casts

WhiteSpaceTabPage_parenexpr=Parenthesized expressions
WhiteSpaceTabPage_declarations=Declarations
WhiteSpaceTabPage_expressions=Expressions
WhiteSpaceTabPage_arrays=Arrays
WhiteSpaceTabPage_templates=Templates
WhiteSpaceTabPage_after_opening_brace=after opening brace
WhiteSpaceTabPage_after_closing_brace=after closing brace
WhiteSpaceTabPage_before_opening_brace=before opening brace
WhiteSpaceTabPage_before_closing_brace=before closing brace
WhiteSpaceTabPage_between_empty_braces=between empty braces
WhiteSpaceTabPage_before_pointer=before pointers
WhiteSpaceTabPage_after_pointer=after pointers

WhiteSpaceTabPage_after_opening_paren=after opening parenthesis
WhiteSpaceTabPage_after_closing_paren=after closing parenthesis
WhiteSpaceTabPage_before_opening_paren=before opening parenthesis
WhiteSpaceTabPage_before_closing_paren=before closing parenthesis
WhiteSpaceTabPage_between_empty_parens=between empty parenthesis

WhiteSpaceTabPage_after_opening_bracket=after opening bracket
WhiteSpaceTabPage_before_opening_bracket=before opening bracket
WhiteSpaceTabPage_before_closing_bracket=before closing bracket
WhiteSpaceTabPage_between_empty_brackets=between empty brackets

WhiteSpaceTabPage_before_comma_in_params=before comma in parameters
WhiteSpaceTabPage_after_comma_in_params=after comma in parameters

WhiteSpaceTabPage_before_comma=before comma
WhiteSpaceTabPage_after_comma=after comma

WhiteSpaceTabPage_after_semicolon=after semicolon
WhiteSpaceTabPage_before_semicolon=before semicolon

WhiteSpaceTabPage_before_colon=before colon
WhiteSpaceTabPage_after_colon=after colon

WhiteSpaceTabPage_before_question=before question mark
WhiteSpaceTabPage_after_question=after question mark

WhiteSpaceTabPage_after_opening_angle_bracket=after opening angle bracket
WhiteSpaceTabPage_after_closing_angle_bracket=after closing angle bracket
WhiteSpaceTabPage_before_opening_angle_bracket=before opening angle bracket
WhiteSpaceTabPage_before_closing_angle_bracket=before closing angle bracket
#WhiteSpaceTabPage_before_parenthesized_expressions=before parenthesized expressions

WhiteSpaceTabPage_sort_by_c_element=Sort options by C/C++ element
WhiteSpaceTabPage_sort_by_syntax_element=Sort options by Syntax element

WhiteSpaceOptions_base_clause=Base clause
WhiteSpaceOptions_before=Before
WhiteSpaceOptions_after=After

WhiteSpaceOptions_operator=Operator
WhiteSpaceOptions_assignment_operator=Assignment operator
WhiteSpaceOptions_binary_operator=Binary operator
WhiteSpaceOptions_unary_operator=Unary operator
WhiteSpaceOptions_prefix_operator=Prefix operator
WhiteSpaceOptions_postfix_operator=Postfix operator
WhiteSpaceOptions_lambda_arrow_operator=Lambda arrow operator

WhiteSpaceOptions_pointer=Pointer
WhiteSpaceOptions_before_pointer=Before pointer
WhiteSpaceOptions_after_pointer=After pointer

WhiteSpaceOptions_opening_paren=Opening parenthesis
WhiteSpaceOptions_catch='catch'
WhiteSpaceOptions_for='for'
WhiteSpaceOptions_if='if'
WhiteSpaceOptions_switch='switch'
WhiteSpaceOptions_while='while'
WhiteSpaceOptions_function_declaration=Function declaration
WhiteSpaceOptions_function=Function
WhiteSpaceOptions_exception_specification=Exception specification
WhiteSpaceOptions_function_call=Function call
WhiteSpaceOptions_paren_expr=Parenthesized expression

WhiteSpaceOptions_type_cast=Type cast
WhiteSpaceOptions_template_arguments=Template arguments
WhiteSpaceOptions_template_parameters=Template parameters

WhiteSpaceOptions_closing_paren=Closing parenthesis

WhiteSpaceOptions_opening_brace=Opening brace
WhiteSpaceOptions_closing_brace=Closing brace
WhiteSpaceOptions_opening_bracket=Opening bracket
WhiteSpaceOptions_closing_bracket=Closing bracket
WhiteSpaceOptions_class_decl=Type declaration
WhiteSpaceOptions_initializer_list=Initializer list
WhiteSpaceOptions_block=Block
WhiteSpaceOptions_namespace=Namespace
WhiteSpaceOptions_linkage=Linkage

WhiteSpaceOptions_arrays=Arrays
WhiteSpaceOptions_arguments=Arguments
#WhiteSpaceOptions_initialization=Initialization
#WhiteSpaceOptions_incrementation=Increment
WhiteSpaceOptions_parameters=Parameters

WhiteSpaceOptions_lists=Lists
WhiteSpaceOptions_expression_list=Expression list
WhiteSpaceOptions_declarator_list=Declarator list
#WhiteSpaceOptions_return='return'
#WhiteSpaceOptions_throw='throw'
WhiteSpaceOptions_colon=Colon
WhiteSpaceOptions_conditional=Conditional
WhiteSpaceOptions_label=Label
WhiteSpaceOptions_comma=Comma

WhiteSpaceOptions_semicolon=Semicolon
WhiteSpaceOptions_question_mark=Question mark
WhiteSpaceOptions_between_empty_parens=Between empty parenthesis
WhiteSpaceOptions_between_empty_braces=Between empty braces
WhiteSpaceOptions_between_empty_brackets=Between empty brackets
WhiteSpaceOptions_function_decl=Function declaration
WhiteSpaceOptions_case='case'
WhiteSpaceOptions_default='default'
WhiteSpaceOptions_statements=Statements

WhiteSpaceOptions_before_opening_paren=Before opening parenthesis
WhiteSpaceOptions_after_opening_paren=After opening parenthesis
WhiteSpaceOptions_before_closing_paren=Before closing parenthesis

WhiteSpaceOptions_after_closing_paren=After closing parenthesis
WhiteSpaceOptions_before_opening_brace=Before opening brace
WhiteSpaceOptions_after_opening_brace=After opening brace
WhiteSpaceOptions_after_closing_brace=After closing brace
WhiteSpaceOptions_before_closing_brace=Before closing brace
WhiteSpaceOptions_before_opening_bracket=Before opening bracket
WhiteSpaceOptions_after_opening_bracket=After opening bracket
WhiteSpaceOptions_before_closing_bracket=Before closing bracket

WhiteSpaceOptions_before_opening_angle_bracket=Before opening angle bracket
WhiteSpaceOptions_after_opening_angle_bracket=After opening angle bracket
WhiteSpaceOptions_before_closing_angle_bracket=Before closing angle bracket
#WhiteSpaceOptions_return_with_parenthesized_expression='return' with parenthesized expression
#WhiteSpaceOptions_throw_with_parenthesized_expression='throws' with parenthesized expression
WhiteSpaceOptions_after_closing_angle_bracket=After closing angle bracket

WhiteSpaceOptions_before_operator=Before operator
WhiteSpaceOptions_after_operator=After operator
WhiteSpaceOptions_before_comma=Before comma
WhiteSpaceOptions_after_comma=After comma
WhiteSpaceOptions_after_colon=After colon
WhiteSpaceOptions_before_colon=Before colon
WhiteSpaceOptions_before_semicolon=Before semicolon
WhiteSpaceOptions_after_semicolon=After semicolon
WhiteSpaceOptions_before_question_mark=Before question mark
WhiteSpaceOptions_after_question_mark=After question mark

WhiteSpaceOptions_structured_binding_declarations=Structured binding declarations
WhiteSpaceOptions_structured_binding_before_ref_qualifier=Before reference qualifier
WhiteSpaceOptions_structured_binding_before_name_list_opening_bracket=Before opening bracket
WhiteSpaceOptions_structured_binding_before_name_list_closing_bracket=Before closing bracket
WhiteSpaceOptions_structured_binding_before_first_name_in_list=Before first name
WhiteSpaceOptions_structured_binding_before_comma_in_name_list=Before comma
WhiteSpaceOptions_structured_binding_after_comma_in_name_list=After comma

#WhiteSpaceOptions_before_ellipsis=Before Ellipsis
#WhiteSpaceOptions_after_ellipsis=After Ellipsis

WhiteSpaceTabPage_insert_space=&Insert space:

LineWrappingTabPage_base_clause=Base-clause
#LineWrappingTabPage_compact_if_else=Compact 'if else'
LineWrappingTabPage_parameters=Parameters
LineWrappingTabPage_arguments=Arguments
LineWrappingTabPage_throws_clause=Exception specification
LineWrappingTabPage_lambda_expression=Lambda expression
LineWrappingTabPage_constructor_initializer_list=Constructor initializer list
#LineWrappingTabPage_object_allocation=Object allocation arguments
LineWrappingTabPage_enum_decls='enum' declaration
LineWrappingTabPage_enumerator_list=Enumerator list
LineWrappingTabPage_initializer_list=Initializer list
LineWrappingTabPage_binary_exprs=Binary expressions
LineWrappingTabPage_conditionals=Conditionals
LineWrappingTabPage_member_access=Member access
LineWrappingTabPage_stream_output=Stream output
LineWrappingTabPage_indentation_default=Default indentation
LineWrappingTabPage_indentation_on_column=Indent on column
LineWrappingTabPage_indentation_by_one=Indent by one
LineWrappingTabPage_class_decls=Class declarations
LineWrappingTabPage_function_decls=Function declarations
LineWrappingTabPage_function_calls=Function calls
LineWrappingTabPage_expressions=Expressions
#LineWrappingTabPage_statements=Statements
LineWrappingTabPage_do_not_join_lines=Never join already wrapped lin&es

#lower case table entries description;
LineWrappingTabPage_base_clause_lowercase=base-clause
#LineWrappingTabPage_compact_if_else_lowercase=compact 'if else'
LineWrappingTabPage_parameters_lowercase=parameters
LineWrappingTabPage_arguments_lowercase=arguments
LineWrappingTabPage_throws_clause_lowercase=exception specification
LineWrappingTabPage_lambda_expression_lowercase=lambda expression
LineWrappingTabPage_constructor_initializer_list_lowercase=constructor initializer list
#LineWrappingTabPage_object_allocation_lowercase=object allocation arguments
LineWrappingTabPage_enum_decls_lowercase='enum' declaration
LineWrappingTabPage_enumerator_list_lowercase=enumerator list
LineWrappingTabPage_initializer_list_lowercase=initializer list
LineWrappingTabPage_binary_exprs_lowercase=binary expressions
LineWrappingTabPage_conditionals_lowercase=conditionals
LineWrappingTabPage_member_access_lowercase=member access
LineWrappingTabPage_stream_output_lowercase=stream output
LineWrappingTabPage_indentation_default_lowercase=default indentation
LineWrappingTabPage_indentation_on_column_lowercase=indent on column
LineWrappingTabPage_indentation_by_one_lowercase=indent by one
LineWrappingTabPage_class_decls_lowercase=class declarations
LineWrappingTabPage_function_decls_lowercase=function declarations
LineWrappingTabPage_function_calls_lowercase=function calls
LineWrappingTabPage_expressions_lowercase=expressions
#LineWrappingTabPage_statements_lowercase=statements
LineWrappingTabPage_assignment_alignment_lowercase=assignments

LineWrappingTabPage_wrapping_policy_label_text=Lin&e wrapping policy:
LineWrappingTabPage_indentation_policy_label_text=Indent&ation policy:
LineWrappingTabPage_force_split_checkbox_text=&Force split, even if line is shorter than maximum width
LineWrappingTabPage_force_split_checkbox_multi_text=&Force split, even if line is shorter than maximum width
LineWrappingTabPage_line_width_for_preview_label_text=&Set line width for preview window:
LineWrappingTabPage_line_width_for_preview_label_unit_text=character(s)
LineWrappingTabPage_group=Settings for {0}
LineWrappingTabPage_multi_group=Settings for {0} ({1} items)
LineWrappingTabPage_multiple_selections=Settings for multiple selections ({0} items)
LineWrappingTabPage_occurences={0} ({1} of {2})
LineWrappingTabPage_splitting_do_not_split=Do not wrap
LineWrappingTabPage_splitting_wrap_when_necessary=Wrap only when necessary
LineWrappingTabPage_splitting_always_wrap_first_others_when_necessary=Always wrap first element, others when necessary
LineWrappingTabPage_splitting_wrap_always=Wrap all elements, every element on a new line
LineWrappingTabPage_splitting_wrap_always_indent_all_but_first=Wrap all elements, indent all but the first element
LineWrappingTabPage_splitting_wrap_always_except_first_only_if_necessary=Wrap all elements, except first element if not necessary
LineWrappingTabPage_width_indent=Line width and indentation levels
LineWrappingTabPage_width_indent_option_max_line_width=Ma&ximum line width:
LineWrappingTabPage_width_indent_option_default_indent_wrapped=Defa&ult indentation for wrapped lines:
LineWrappingTabPage_width_indent_option_default_indent_array=Default indentation for initializer lists:
LineWrappingTabPage_error_invalid_value=The key ''{0}'' contained an invalid value; resetting to defaults.
LineWrappingTabPage_assignment_alignment=Assignments


AlreadyExistsDialog_message_profile_already_exists=A profile with this name already exists.
AlreadyExistsDialog_message_profile_name_empty=Profile name is empty
AlreadyExistsDialog_dialog_title=Load Profile
AlreadyExistsDialog_dialog_label=A profile with the name ''{0}'' already exists in this workspace. What would you like to do?
AlreadyExistsDialog_rename_radio_button_desc=&Rename the imported profile:
AlreadyExistsDialog_overwrite_radio_button_desc=&Overwrite the existing profile.


#BlankLinesTabPage_preview_header=Blank Lines
#BlankLinesTabPage_compilation_unit_group_title=Blank lines in compilation unit
#BlankLinesTabPage_compilation_unit_option_before_package=Before p&ackage declaration:
#BlankLinesTabPage_compilation_unit_option_after_package=After packa&ge declaration:
#BlankLinesTabPage_compilation_unit_option_before_import=&Before import declaration:
#BlankLinesTabPage_compilation_unit_option_after_import=After import de&claration:
#BlankLinesTabPage_compilation_unit_option_between_type_declarations=Between class declarat&ions:

#BlankLinesTabPage_class_group_title=Blank lines within class declarations
#BlankLinesTabPage_class_option_before_first_decl=Before &first declaration:
#BlankLinesTabPage_class_option_before_decls_of_same_kind=Before declarations of the same &kind:
#BlankLinesTabPage_class_option_before_member_class_decls=Before member cla&ss declarations:
#BlankLinesTabPage_class_option_before_field_decls=B&efore field declarations:
#BlankLinesTabPage_class_option_before_method_decls=Before met&hod declarations:
#BlankLinesTabPage_class_option_at_beginning_of_method_body= At beginning of method bod&y:

#BlankLinesTabPage_blank_lines_group_title=Existing blank lines
#BlankLinesTabPage_blank_lines_option_empty_lines_to_preserve=N&umber of empty lines to preserve:

BracesTabPage_preview_header=Braces
BracesTabPage_position_same_line=Same line
BracesTabPage_position_next_line=Next line
BracesTabPage_position_next_line_indented=Next line indented
BracesTabPage_position_next_line_on_wrap=Next line on wrap

BracesTabPage_group_brace_positions_title=Brace positions
BracesTabPage_option_class_declaration=&Class declaration:
BracesTabPage_option_namespace_declaration=&Namespace declaration:
BracesTabPage_option_linkage_declaration=&Linkage declaration:
BracesTabPage_option_function_declaration=&Function declaration:
BracesTabPage_option_blocks=&Blocks:
BracesTabPage_option_blocks_in_case=Bloc&ks in case statement:
BracesTabPage_option_switch_case='&switch' statement:
BracesTabPage_option_initializer_list=Initiali&zer list:
BracesTabPage_option_keep_empty_initializer_list_on_one_line=Keep empty &initializer list on one line
CodingStyleConfigurationBlock_save_profile_dialog_title=Export Profile
CodingStyleConfigurationBlock_save_profile_error_title=Export Profile
CodingStyleConfigurationBlock_save_profile_error_message=Could not export the profiles.
CodingStyleConfigurationBlock_load_profile_dialog_title=Import Profile
CodingStyleConfigurationBlock_load_profile_error_title=Import Profile
CodingStyleConfigurationBlock_load_profile_error_message=Import failed. Not a valid profile.
CodingStyleConfigurationBlock_load_profile_error_too_new_title=Importing Profile
CodingStyleConfigurationBlock_load_profile_error_too_new_message=This profile has been created with \
a more recent CDT build than the one you are using. Due to changes in the code formatter, \
some older settings might be reset to their default values and newer settings are ignored. Please note \
that upgrading profiles from older to newer builds is fully supported.
CodingStyleConfigurationBlock_preview_title=A sample source file for the code formatter preview
CodingStyleConfigurationBlock_save_profile_overwrite_title=Export Profile
CodingStyleConfigurationBlock_save_profile_overwrite_message={0} " already exists.\nDo you want to replace it?"
CodingStyleConfigurationBlock_edit_button_desc=&Edit...
CodingStyleConfigurationBlock_remove_button_desc=&Remove
CodingStyleConfigurationBlock_new_button_desc=Ne&w...
CodingStyleConfigurationBlock_load_button_desc=I&mport...
CodingStyleConfigurationBlock_preview_label_text=Prev&iew:
CodingStyleConfigurationBlock_error_reading_xml_message=Problems reading profiles from XML
CodingStyleConfigurationBlock_error_serializing_xml_message=Problems serializing the profiles to XML
CodingStyleConfigurationBlock_delete_confirmation_title=Confirm Remove
CodingStyleConfigurationBlock_delete_confirmation_question=Are you sure you want to remove profile ''{0}''?

CustomCodeFormatterBlock_formatter_name=Code &Formatter:
CustomCodeFormatterBlock_default_formatter=[built-in]
CustomCodeFormatterBlock_formatter_note=Note:
CustomCodeFormatterBlock_contributed_formatter_warning=Contributed formatters may not respect all code style settings.


CommentsTabPage_preview_header=Comments
CommentsTabPage_group1_title=Comments
CommentsTabPage_preserve_white_space_before_line_comment=Preserve white space between code and line comments if possible
CommentsTabPage_line_up_line_comment_in_blocks_on_first_column=Treat indented line comments as block of comments on unindented code
CommentsTabPage_line_width=Minimum distance between code and line comments:
CommentsTabPage_block_comment=Format block comments
CommentsTabPage_line_comment=Format line comments
CommentsTabPage_header_comment=Format header comment

ControlStatementsTabPage_preview_header=If...else
ControlStatementsTabPage_general_group_title=General
ControlStatementsTabPage_general_group_insert_new_line_before_else_statements=Insert new line before '&else' in an 'if' statement
ControlStatementsTabPage_general_group_insert_new_line_before_catch_statements=Insert new line before '&catch' in a 'try' statement
ControlStatementsTabPage_general_group_insert_new_line_before_while_in_do_statements=Insert new line before 'w&hile' in a 'do' statement

ControlStatementsTabPage_if_else_group_title='if else'
ControlStatementsTabPage_if_else_group_keep_then_on_same_line=Keep 'then' statement &on same line
ControlStatementsTabPage_if_else_group_keep_simple_if_on_one_line=Keep &simple 'if' on one line
ControlStatementsTabPage_if_else_group_keep_else_on_same_line=Keep 'else' st&atement on same line
ControlStatementsTabPage_if_else_group_keep_else_if_on_one_line=&Keep 'else if' on one line
#ControlStatementsTabPage_if_else_group_keep_guardian_clause_on_one_line=Keep 'return' or 'throw' cla&use on one line

CreateProfileDialog_status_message_profile_with_this_name_already_exists=A profile with this name already exists.
CreateProfileDialog_status_message_profile_name_is_empty=Profile name is empty
CreateProfileDialog_dialog_title=New Code Formatter Profile
CreateProfileDialog_profile_name_label_text=&Profile name:
CreateProfileDialog_base_profile_label_text=I&nitialize settings with the following profile:
CreateProfileDialog_open_edit_dialog_checkbox_text=&Open the edit dialog now

IndentationTabPage_preview_header=Indentation

IndentationTabPage_general_group_title=General settings
IndentationTabPage_general_group_option_tab_policy=Tab polic&y:
IndentationTabPage_general_group_option_tab_policy_SPACE=Spaces only
IndentationTabPage_general_group_option_tab_policy_TAB=Tabs only
IndentationTabPage_general_group_option_tab_policy_MIXED=Mixed
IndentationTabPage_general_group_option_tab_size=Tab &size:
IndentationTabPage_general_group_option_indent_size=&Indentation size:

#IndentationTabPage_field_alignment_group_title=Alignment of fields in class declarations
#IndentationTabPage_field_alignment_group_align_fields_in_columns=&Align fields in columns

IndentationTabPage_indent_group_title=Indent

IndentationTabPage_class_group_option_indent_access_specifiers_within_class_body='public', 'protected', 'private' within class &body
IndentationTabPage_class_group_option_indent_declarations_compare_to_access_specifiers=De&clarations relative to 'public', 'protected', 'private'
IndentationTabPage_block_group_option_indent_statements_compare_to_body=Stat&ements within function body
IndentationTabPage_block_group_option_indent_statements_compare_to_block=Statements within bl&ocks
IndentationTabPage_namespace_group_option_indent_declarations_within_namespace=Declarations within '&namespace' definition
IndentationTabPage_linkage_group_option_indent_declarations_within_linkage=Declarations within '&linkage' definition
IndentationTabPage_indent_empty_lines=Empty lines
IndentationTabPage_indent_labels=Labels

IndentationTabPage_switch_group_option_indent_statements_within_switch_body=Statements wit&hin 'switch' body
IndentationTabPage_switch_group_option_indent_statements_within_case_body=Statements within 'c&ase' body
IndentationTabPage_switch_group_option_indent_break_statements='brea&k' statements

IndentationTabPage_use_tabs_only_for_leading_indentations=Use tabs only for leading indentations

ModifyDialog_tabpage_braces_title=B&races
ModifyDialog_ProfileName_Label=&Profile name:
ModifyDialog_NewCreated_Status=A new profile will be created.
ModifyDialog_tabpage_indentation_title=In&dentation
ModifyDialog_tabpage_whitespace_title=&White Space
#ModifyDialog_tabpage_blank_lines_title=Bla&nk Lines
ModifyDialog_tabpage_new_lines_title=New &Lines
ModifyDialog_tabpage_control_statements_title=Con&trol Statements
ModifyDialog_tabpage_line_wrapping_title=Line Wra&pping
ModifyDialog_tabpage_comments_title=Co&mments
ModifyDialog_tabpage_formatter_tag_title=Off/On Tags

ModifyDialog_dialog_title=Profile ''{0}''
ModifyDialog_apply_button=Apply
ModifyDialog_Export_Button=&Export...
ModifyDialog_Duplicate_Status=A profile with this name already exists.
ModifyDialog_BuiltIn_Status=This is a built-in profile, change the name to create a new profile.
ModifyDialog_Shared_Status=This is a shared profile, change the name to create a new profile.
ModifyDialog_EmptyName_Status=Profile name is empty.

ModifyDialogTabPage_preview_label_text=Pre&view:
ModifyDialogTabPage_error_msg_values_text_unassigned=Values and text must be assigned.
ModifyDialogTabPage_error_msg_values_items_text_unassigned=Values, items and text must be assigned.
ModifyDialogTabPage_NumberPreference_error_invalid_key=The key {0} does not yield a valid integer value.
ModifyDialogTabPage_NumberPreference_error_invalid_value=Invalid value: Please enter a number between {0} and {1}.

NewLinesTabPage_preview_header=New lines
NewLinesTabPage_newlines_group_title=Insert new line

NewLinesTabPage_newlines_group_option_before_colon_in_constructor_initializer_list=before colon in constructor initializer list
NewLinesTabPage_newlines_group_option_after_colon_in_constructor_initializer_list=after colon in constructor initializer list
NewLinesTabPage_newlines_emtpy_statement_on_new_line=before empty statement
NewLinesTabPage_newlines_before_identifier_in_function_declaration=before identifier in function declaration
NewLinesTabPage_newlines_after_label=after label
#NewLinesTabPage_newlines_group_option_empty_class_body=in empty &class body
#NewLinesTabPage_newlines_group_option_empty_method_body=in empt&y method body
#NewLinesTabPage_newlines_group_option_empty_block=in empty &block
#NewLinesTabPage_newlines_group_option_empty_end_of_file=at end of &file

#NewLinesTabPage_arrayInitializer_group_title=Initializer list
#NewLinesTabPage_array_group_option_after_opening_brace_of_array_initializer=Insert new line after openin&g brace of initializer list
#NewLinesTabPage_array_group_option_before_closing_brace_of_array_initializer=Insert new line before closing brace of initiali&zer list


ProfileManager_kandr_profile_name=K&R [built-in]
ProfileManager_allman_profile_name=BSD/Allman [built-in]
ProfileManager_gnu_profile_name=GNU [built-in]
ProfileManager_whitesmiths_profile_name=Whitesmiths [built-in]

ProfileManager_unmanaged_profile=Unmanaged profile
ProfileManager_unmanaged_profile_with_name=Unmanaged profile "{0}"

CPreview_formatter_exception=The formatter threw an unhandled exception while formatting the preview.

ProfileConfigurationBlock_load_profile_wrong_profile_message=Import failed. This is not a valid profile: Expected ''{0}'' but encountered ''{1}''.
FormatterTabPage_ShowInvisibleCharacters_label=Show &invisible characters

FormatterModifyDialog_offOn_preview_header=Off/On tags
FormatterModifyDialog_offOn_description=Off/On tags can be used in any comments to turn the formatter off and on in a source file.\n- At the beginning of each file, the formatter is enabled.\n- Each time the formatter sees an off tag, it disables formatting for that comment and the source after it.\n- Each time the formatter sees an on tag, it enables formatting for the source after that comment.\n
FormatterModifyDialog_offOn_pref_enable=Enable Off/On tags
FormatterModifyDialog_offOn_pref_off_tag=Off tag:
FormatterModifyDialog_offOn_pref_on_tag=On tag:
FormatterModifyDialog_offOn_error_startsWithWhitespace=This value must not start with a white space.
FormatterModifyDialog_offOn_error_endsWithWhitespace=This value must not end with a white space.
FormatterModifyDialog_offOn_error_empty=This value must not be empty.

###############################################################################
# Copyright (c) 2008, 2014 Institute for Software, HSR Hochschule fuer Technik
# Rapperswil, University of applied sciences and others
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     Institute for Software - initial API and implementation
#	  Sergey Prigogin (Google)
###############################################################################
ExtractFunctionRefactoring_ExtractFunction=Extract Function
ExtractFunctionRefactoring_NoStmtSelected=No statement selected
ExtractFunctionRefactoring_TooManyDeclarations=More than one externally referenced variable declared in selection.
ExtractFunctionRefactoring_no_declaration_of_surrounding_method=Unable to find declaration of the surrounding method.
ExtractFunctionRefactoring_name_in_use=Name already in use.
ExtractFunctionRefactoring_parameter_name_in_use=''{0}'' is already used as a name in the selected code
ExtractFunctionRefactoring_duplicate_parameter=A parameter ''{0}'' already exists
ExtractFunctionRefactoring_invalid_type=Unable to determine type of ''{0}''
ExtractFunctionRefactoring_CreateMethodDef=Create Method Definition
ExtractFunctionRefactoring_CreateFunctionDef=Create Function Definition
ExtractFunctionRefactoring_CreateMethodCall=Create Method Call
ExtractFunctionRefactoring_CreateFunctionCall=Create Function Call
ExtractFunctionRefactoring_Error_Continue=Extracting 'continue' statements without the surrounding loop is not possible. Please adjust your selection.
ExtractFunctionRefactoring_Error_Break=Extracting 'break' statements without the surrounding loop is not possible. Please adjust your selection.
ExtractFunctionRefactoring_Error_Case=Extracting 'case' statements without the surrounding switch is not possible. Please adjust your selection. 
ExtractFunctionRefactoring_Error_Default=Extracting 'default' statements without the surrounding switch is not possible. Please adjust your selection. 
ExtractFunctionRefactoring_IllegalGotoSelection=All goto statements and corresponding labels have to be selected to allow extraction.
ExtractFunctionRefactoring_IllegalReturnSelection=All return statements need to be extracted or none.
ExtractFunctionRefactoring_IllegalReturnSelectionCompound=CompoundStatement not returning on all paths.
ExtractFunctionRefactoring_IllegalReturnSelectionIf=IfStatement not returning on all paths.
ExtractFunctionRefactoring_IllegalReturnSelectionFor=Not allowed to extract a for statement with return statements.
ExtractFunctionRefactoring_IllegalReturnSelectionWhile=Not allowed to extract a while statement with return statements.
ExtractFunctionRefactoring_IllegalReturnSelectionDo=Not allowed to extract a do statement with return statements.
ExtractFunctionRefactoring_IllegalReturnSelectionDefault=Default case needed to extract switch statement with return statements inside.
ExtractFunctionRefactoring_IllegalReturnSelectionSwitch=Switch statement doesn't return on all paths.
ExtractFunctionInputPage_description=Enter new method name and specify the method's visibility
ExtractFunctionInputPage_access_modifier=&Access modifier:
ExtractFunctionInputPage_public=public
ExtractFunctionInputPage_protected=protected
ExtractFunctionInputPage_private=private
ExtractFunctionInputPage_signature_preview=Function signature preview:
ExtractFunctionInputPage_label_text=Function &name:
ExtractFunctionInputPage_parameters=&Parameters:
ExtractFunctionInputPage_validation_empty_function_name=Provide a method name
ExtractFunctionInputPage_validation_empty_parameter_name=Parameter names cannot be empty
ExtractFunctionInputPage_duplicates_none=&Replace additional occurrences of statements with a function call
ExtractFunctionInputPage_duplicates_single=&Replace 1 additional occurrence of statements with a function call
ExtractFunctionInputPage_duplicates_multi=&Replace {0} additional occurrences of statements with a function call
SimilarFinderVisitor_replaceDuplicateCode=Replace Duplicated Code

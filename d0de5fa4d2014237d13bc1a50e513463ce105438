{
  "comments": [
    {
      "key": {
        "uuid": "ef7e2028_e19c46c2",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/language/settings/providers/AbstractLanguageSettingsOutputScanner.java",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 23745
      },
      "writtenOn": "2020-10-31T10:19:19Z",
      "side": 1,
      "message": "This new logic is deeply hidden from the explicit testing. Do you think we can promote it to a dedicated type?",
      "revId": "d0de5fa4d2014237d13bc1a50e513463ce105438",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "695fea39_c3c8f98b",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/language/settings/providers/AbstractLanguageSettingsOutputScanner.java",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 598
      },
      "writtenOn": "2020-11-07T18:19:22Z",
      "side": 1,
      "message": "I don\u0027t really want to make this visible to other classes as it is a very specific optimization linked to how probable we use single numbered group in replacement expression, so it would have to be a static nested class if it\u0027s a dedicated type. Perhaps the use of Function makes it more hidden and confusing. We do need to store the information about whether or not we can use the group number and the number itself. Using Function was a neat way to encapsulate both the logic and that information. I\u0027ll push the alternate version with the class which does involve a bit more lines of code but perhaps it\u0027s clearer.",
      "parentUuid": "ef7e2028_e19c46c2",
      "revId": "d0de5fa4d2014237d13bc1a50e513463ce105438",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}
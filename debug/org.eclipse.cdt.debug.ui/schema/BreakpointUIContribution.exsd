<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.cdt.debug.ui" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.cdt.debug.ui" id="breakpointContribution" name="Breakpoint UI Contribution"/>
      </appInfo>
      <documentation>
         This extension point provides a mechanism for contributing controls for viewing and editing breakpoint attributes.
The UI controls are added to the &quot;Common&quot; page of the breakpoint properties dialog.  If a debug model ID is specified, the
contribution is shown only when a debugger with corresponding model ID is currently active.
      </documentation>
   </annotation>
   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="breakpointLabels" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="breakpointEditors" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>
   <element name="breakpointLabels">
      <annotation>
         <documentation>
            A breakpoint label is appended to the top section the breakpoint properties common page.
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="attribute"/>
         </sequence>
         <attribute name="markerType" type="string">
            <annotation>
               <documentation>
                  Breakpoint&apos;s marker type for which the given attribute labels are applied.
               </documentation>
               <appInfo>
                  <meta.attribute kind="identifier"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="debugModelId" type="string">
            <annotation>
               <documentation>
                  Debug model Id of the active debug context for which this extension is valid.  If not specified or if the model ID equals the CDT breakpoint&apos;s model (org.eclipse.cdt.debug.core), the option is always shown.
               </documentation>
               <appInfo>
                  <meta.attribute kind="identifier"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>
   <element name="breakpointEditors">
      <annotation>
         <documentation>
            A breakpoint editor is appended to the bottom section the breakpoint properties common page.
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="attribute"/>
         </sequence>
         <attribute name="markerType" type="string">
            <annotation>
               <documentation>
                  Breakpoint&apos;s marker type for which the given attribute labels are applied.
               </documentation>
               <appInfo>
                  <meta.attribute kind="identifier"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="debugModelId" type="string">
            <annotation>
               <documentation>
                  Debug model Id of the active debug context for which this extension is valid.  If not specified or if the model ID equals the CDT breakpoint&apos;s model (org.eclipse.cdt.debug.core), the option is always shown.
               </documentation>
               <appInfo>
                  <meta.attribute kind="identifier"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>
   <element name="attribute">
      <annotation>
         <documentation>
            Each attribute entry displays or modifies a breakpoint attribute with the given ID.
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="value"/>
         </sequence>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  id of the breakpoint attribute, for example &quot;catchpoint.type&quot;
               </documentation>
            </annotation>
         </attribute>
         <attribute name="label" type="string" use="required">
            <annotation>
               <documentation>
                  user visible label for the breakpoint attribute value
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="fieldEditor" type="string">
            <annotation>
               <documentation>
                  Field editor that will be shown to for given attribute.  This field editor must be on the classpath of the org.eclipse.cdt.debug.ui plugin.  For a custom field editor use the newer fieldEditorFactory attribute.  If this parameter is not specified, the org.eclipse.cdt.debug.ui.preferences.ReadOnlyFieldEditor field editor will be used by default.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.jface.preference.FieldEditor:"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="type" use="default" value="string">
            <annotation>
               <documentation>
                  Type of the attribute.  Value should be one of &quot;boolean&quot;, &quot;string&quot;, &quot;integer&quot;, &quot;float&quot;.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="string">
                  </enumeration>
                  <enumeration value="integer">
                  </enumeration>
                  <enumeration value="float">
                  </enumeration>
                  <enumeration value="boolean">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="fieldEditorFactory" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.cdt.debug.ui.breakpoints.IFieldEditorFactory"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>
   <element name="value">
      <annotation>
         <documentation>
            Properties of value for parent attribute.  If a value elemnt contains child attribute elements it means that these property only enabled when value of parent attribute equal to current element value.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="attribute" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="value" type="string" use="required">
            <annotation>
               <documentation>
                  Value of the attribute for which label is declared
               </documentation>
            </annotation>
         </attribute>
         <attribute name="label" type="string" use="required">
            <annotation>
               <documentation>
                  User visible label for the breakpoint attribute value
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>
   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         CDT 5.0
      </documentation>
   </annotation>
   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         &lt;pre&gt;
&lt;extension id=&quot;com.xyz.coolMarkerLabels&quot; point=&quot;org.eclipse.cdt.debug.ui.breakpointContribution&quot;&gt;
     &lt;breakpointLabels markerId=&quot;com.xyz.coolMarker&quot;&gt; 
     &lt;attribute name=&quot;owner&quot; label=&quot;Resource Owner&quot;&gt;
        &lt;value value=&quot;harris.bob&quot; label=&quot;Bob Harris&quot;/&gt;
        &lt;value value=&quot;harris.mary&quot; label=&quot;Mary Harris&quot;/&gt;
     &lt;/attribute&gt; 
     &lt;/breakpointLabels&gt;
 &lt;/extension&gt;
 
 &lt;extension point=&quot;org.eclipse.cdt.debug.ui.breakpointContribution&quot;&gt;
     &lt;breakpointLabels markerId=&quot;org.eclipse.cdt.debug.core.catchpoint&quot;&gt; 
     &lt;attribute name=&quot;org.eclipse.cdt.debug.core.catchpoint.type&quot; label=&quot;Catchpoint Type&quot; type=&quot;enum&quot;&gt;
        &lt;value value=&quot;gdb.catch&quot; label=&quot;Exception Caught&quot;&gt;
            &lt;attribute name=&quot;org.eclipse.cdt.debug.core.catchpoint.argument&quot; label=&quot;C/C++ Type&quot; 
                 type=&quot;string&quot; fieldEditor=&quot;org.eclipse.cdt.debug.ui.breakpoints.CTypeSelectorEditor&quot;&gt;
            &lt;/attribute&gt;
        &lt;/value&gt;
        &lt;value value=&quot;gdb.throw&quot; label=&quot;Exception Thrown&quot;/&gt;
        &lt;value value=&quot;gdb.signal&quot; label=&quot;Signal Caught&quot;&gt;
            &lt;attribute name=&quot;org.eclipse.cdt.debug.core.catchpoint.argument&quot; label=&quot;Signal Number&quot; 
                 type=&quot;integer&quot; fieldEditor=&quot;IntegerFieldEditor&quot;&gt;
            &lt;/attribute&gt;
        &lt;/value&gt;
     &lt;/attribute&gt; 
     &lt;/breakpointLabels&gt;
 &lt;/extension&gt;
 &lt;/pre&gt;
      </documentation>
   </annotation>
</schema>

{
  "comments": [
    {
      "key": {
        "uuid": "8d7cbdf7_3c672458",
        "filename": "build/org.eclipse.cdt.cmake.core/src/org/eclipse/cdt/cmake/core/internal/CMakeBuildConfiguration.java",
        "patchSetId": 2
      },
      "lineNbr": 441,
      "author": {
        "id": 27769
      },
      "writtenOn": "2020-06-11T17:54:42Z",
      "side": 1,
      "message": "I can try out various Linux native/host configurations to understand the problem best.\n\n@Alexander IIRC you are normally on Windows? Do either 3 or 4 of these cases work for you? It would be nice to resolve this TODO.\n\nEither way I hope that getFileForLocation will do the correct thing. If there are general issues, now is a good time to get them resolved in platform",
      "range": {
        "startLine": 441,
        "startChar": 11,
        "endLine": 441,
        "endChar": 21
      },
      "revId": "e3cbe2b998c69e501ea10c9d0903550c95dbabbc",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32f32065_a5c13c4c",
        "filename": "build/org.eclipse.cdt.cmake.core/src/org/eclipse/cdt/cmake/core/internal/CMakeBuildConfiguration.java",
        "patchSetId": 2
      },
      "lineNbr": 441,
      "author": {
        "id": 23745
      },
      "writtenOn": "2020-06-11T18:11:12Z",
      "side": 1,
      "message": "It is not clear for me why we expect to find a workspace IFile for a file name given by external tool in its own notation.\n\nI would recommend to use `findFilesForLocationURI` method instead and then analyze the result.\n\nLet\u0027s define the test case that we can run on different platform to have the same input for the result comparision",
      "parentUuid": "8d7cbdf7_3c672458",
      "range": {
        "startLine": 441,
        "startChar": 11,
        "endLine": 441,
        "endChar": 21
      },
      "revId": "e3cbe2b998c69e501ea10c9d0903550c95dbabbc",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92bee195_df902af1",
        "filename": "build/org.eclipse.cdt.cmake.core/src/org/eclipse/cdt/cmake/core/internal/CMakeBuildConfiguration.java",
        "patchSetId": 2
      },
      "lineNbr": 441,
      "author": {
        "id": 276327
      },
      "writtenOn": "2020-06-11T18:47:47Z",
      "side": 1,
      "message": "\u003e I can try out various Linux native/host configurations...\n\nMy experience on 2) linux with managed-build in docker and cmake4eclipse: That person who added the docker build stuff did a cool job! new Path(sourcefilename) or Path.fromOSString() works OOTB.\n\nSame for 3) windows native.\n\nConcerning 4) windows host, building in linux container scenario, I did not try that. But cmake4eclipse never received any issues. Or nobody uses that scenario. Or THE DOCKERIZER did a REALLY cool job.\n\n@Alexander Maybe my cmake project generator could be useful to you to set up testing on windows. It generates a cmake project (CMakeLists.txt + C-sourcefiles, but no eclipse project).",
      "parentUuid": "8d7cbdf7_3c672458",
      "range": {
        "startLine": 441,
        "startChar": 11,
        "endLine": 441,
        "endChar": 21
      },
      "revId": "e3cbe2b998c69e501ea10c9d0903550c95dbabbc",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
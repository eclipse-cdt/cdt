{
  "comments": [
    {
      "key": {
        "uuid": "817357cb_67b2ab11",
        "filename": "build/org.eclipse.cdt.cmake.core/src/org/eclipse/cdt/cmake/core/internal/CMakeBuildConfiguration.java",
        "patchSetId": 2
      },
      "lineNbr": 434,
      "author": {
        "id": 96955
      },
      "writtenOn": "2020-06-11T22:53:58Z",
      "side": 1,
      "message": "I don\u0027t understand why you want to go from a String to a IFile.\nEclipse internally works with IFile and IPath.\nThis method should not be nessesary",
      "revId": "e3cbe2b998c69e501ea10c9d0903550c95dbabbc",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d7cbdf7_3c672458",
        "filename": "build/org.eclipse.cdt.cmake.core/src/org/eclipse/cdt/cmake/core/internal/CMakeBuildConfiguration.java",
        "patchSetId": 2
      },
      "lineNbr": 441,
      "author": {
        "id": 27769
      },
      "writtenOn": "2020-06-11T17:54:42Z",
      "side": 1,
      "message": "I can try out various Linux native/host configurations to understand the problem best.\n\n@Alexander IIRC you are normally on Windows? Do either 3 or 4 of these cases work for you? It would be nice to resolve this TODO.\n\nEither way I hope that getFileForLocation will do the correct thing. If there are general issues, now is a good time to get them resolved in platform",
      "range": {
        "startLine": 441,
        "startChar": 11,
        "endLine": 441,
        "endChar": 21
      },
      "revId": "e3cbe2b998c69e501ea10c9d0903550c95dbabbc",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32f32065_a5c13c4c",
        "filename": "build/org.eclipse.cdt.cmake.core/src/org/eclipse/cdt/cmake/core/internal/CMakeBuildConfiguration.java",
        "patchSetId": 2
      },
      "lineNbr": 441,
      "author": {
        "id": 23745
      },
      "writtenOn": "2020-06-11T18:11:12Z",
      "side": 1,
      "message": "It is not clear for me why we expect to find a workspace IFile for a file name given by external tool in its own notation.\n\nI would recommend to use `findFilesForLocationURI` method instead and then analyze the result.\n\nLet\u0027s define the test case that we can run on different platform to have the same input for the result comparision",
      "parentUuid": "8d7cbdf7_3c672458",
      "range": {
        "startLine": 441,
        "startChar": 11,
        "endLine": 441,
        "endChar": 21
      },
      "revId": "e3cbe2b998c69e501ea10c9d0903550c95dbabbc",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92bee195_df902af1",
        "filename": "build/org.eclipse.cdt.cmake.core/src/org/eclipse/cdt/cmake/core/internal/CMakeBuildConfiguration.java",
        "patchSetId": 2
      },
      "lineNbr": 441,
      "author": {
        "id": 276327
      },
      "writtenOn": "2020-06-11T18:47:47Z",
      "side": 1,
      "message": "\u003e I can try out various Linux native/host configurations...\n\nMy experience on 2) linux with managed-build in docker and cmake4eclipse: That person who added the docker build stuff did a cool job! new Path(sourcefilename) or Path.fromOSString() works OOTB.\n\nSame for 3) windows native.\n\nConcerning 4) windows host, building in linux container scenario, I did not try that. But cmake4eclipse never received any issues. Or nobody uses that scenario. Or THE DOCKERIZER did a REALLY cool job.\n\n@Alexander Maybe my cmake project generator could be useful to you to set up testing on windows. It generates a cmake project (CMakeLists.txt + C-sourcefiles, but no eclipse project).",
      "parentUuid": "8d7cbdf7_3c672458",
      "range": {
        "startLine": 441,
        "startChar": 11,
        "endLine": 441,
        "endChar": 21
      },
      "revId": "e3cbe2b998c69e501ea10c9d0903550c95dbabbc",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a43da205_005a65e9",
        "filename": "build/org.eclipse.cdt.cmake.core/src/org/eclipse/cdt/cmake/core/internal/CMakeBuildConfiguration.java",
        "patchSetId": 2
      },
      "lineNbr": 441,
      "author": {
        "id": 276327
      },
      "writtenOn": "2020-06-11T18:59:31Z",
      "side": 1,
      "message": "\u003e It is not clear for me why we expect to find a workspace IFile for a file name given by external tool in its own notation.\n\nhttp://eclipse.1072660.n5.nabble.com/CMake-plugins-tp190259p193496.html",
      "parentUuid": "32f32065_a5c13c4c",
      "range": {
        "startLine": 441,
        "startChar": 11,
        "endLine": 441,
        "endChar": 21
      },
      "revId": "e3cbe2b998c69e501ea10c9d0903550c95dbabbc",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a9ac097_621417ac",
        "filename": "build/org.eclipse.cdt.cmake.core/src/org/eclipse/cdt/cmake/core/internal/CMakeBuildConfiguration.java",
        "patchSetId": 2
      },
      "lineNbr": 441,
      "author": {
        "id": 276327
      },
      "writtenOn": "2020-06-11T20:17:46Z",
      "side": 1,
      "message": "Sorry, to be more precise: Look at the line that gives the file name to find the IFile resource for:\n\"file\": \"H:/develop/ccdl/runtime-core/build/Debug/include/inc- \n\nMaybe conversion is a no-op. AFAIK, NTFS is fine with forward slashes. So the build will succeed.\nThe problem lies in\n4) windows host, building in linux container. Path names might be sth. like ´/h/develop/ccdl/.../a.c´. Would a Path.fromOSString() in Eclipse hosted on windows return a proper IFile resource? That is what I like to be tested.\n\nI would be fine to mark this as *potential problem* with a TODO in the source and a reference in the online docs that tells end-users bitten by the problem being *actual* to sponsor to help resolve the problem (giving man-power, hardware, windows licenses).\n[I am doing this in my spare time]",
      "parentUuid": "a43da205_005a65e9",
      "range": {
        "startLine": 441,
        "startChar": 11,
        "endLine": 441,
        "endChar": 21
      },
      "revId": "e3cbe2b998c69e501ea10c9d0903550c95dbabbc",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7be0fd2_eafd18cf",
        "filename": "build/org.eclipse.cdt.cmake.core/src/org/eclipse/cdt/cmake/core/internal/CMakeBuildConfiguration.java",
        "patchSetId": 2
      },
      "lineNbr": 441,
      "author": {
        "id": 27769
      },
      "writtenOn": "2020-06-11T21:24:27Z",
      "side": 1,
      "message": "@Martin - thanks for the docker work goes to Linux Tools, which includes Jeff and others.\n\nIt should be because of docker and eclipse remote that the mapping \"just works\". But as you say it needs someone on a Windows host (@Alexander?) to care about these use cases. That is a very reasonable thing to do and I am fine with it.\n\n\u003e [I am doing this in my spare time]\n\nWhich is very appreciated!",
      "parentUuid": "9a9ac097_621417ac",
      "range": {
        "startLine": 441,
        "startChar": 11,
        "endLine": 441,
        "endChar": 21
      },
      "revId": "e3cbe2b998c69e501ea10c9d0903550c95dbabbc",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a54f8658_e1676853",
        "filename": "build/org.eclipse.cdt.cmake.core/src/org/eclipse/cdt/cmake/core/internal/CMakeBuildConfiguration.java",
        "patchSetId": 2
      },
      "lineNbr": 441,
      "author": {
        "id": 96955
      },
      "writtenOn": "2020-06-11T22:53:58Z",
      "side": 1,
      "message": "My experience with / \\ windows and linux tools in windows is;\nOn the command line (linux based tools or native)\nIf you do not mix / and \\ in one iFile it mostly works.\nThe \"old\" windows commands like copy don\u0027t like the / and won\u0027t work.\nSo do not do C:\\folder1\\folder2/filename\nGnuMakefilebuilder does not use OSString to generate output. I tried to go that route and things became worse (because than I had / and \\)\n\nWhen converting Strings to IFile IPath\nSloeber convert strings to IFile and IPath and I can not recall a single problem with \\ or / being wrongly interpreted",
      "parentUuid": "c7be0fd2_eafd18cf",
      "range": {
        "startLine": 441,
        "startChar": 11,
        "endLine": 441,
        "endChar": 21
      },
      "revId": "e3cbe2b998c69e501ea10c9d0903550c95dbabbc",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}
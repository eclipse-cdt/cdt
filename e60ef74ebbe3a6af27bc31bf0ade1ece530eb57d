{
  "comments": [
    {
      "key": {
        "uuid": "1232dad4_b4ac0ebd",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/launching/GdbLaunch.java",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 171685
      },
      "writtenOn": "2021-10-26T04:32:16Z",
      "side": 1,
      "message": "Can you explain what behavior do you mean ere and how it has changed?",
      "revId": "e60ef74ebbe3a6af27bc31bf0ade1ece530eb57d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8260ffd1_71c6692e",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/launching/GdbLaunch.java",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 27769
      },
      "writtenOn": "2021-10-26T13:43:22Z",
      "side": 1,
      "message": "getAdapter used to return null here because the the adapter factory that mapped GdbLaunch to ITerminateHandler is not in an activated bundle. With the changes, since GdbLaunch -\u003e ITerminateHandler is not activated/loaded, the new adapter manager uses the Launch -\u003e ITerminateHandler adapter factory instead. The adapter returned in that case does not work (it actually causes a non-UI hang as that adapter just calls GdbLaunch.terminate asynchronously, which is this method, so you end up in a (asynchronous) loop).\n\nThis is exactly the test case testGetAdapterXYNotLoaded - look at the diff between PS2 and PS5 \n\n\nhttps://git.eclipse.org/r/c/equinox/rt.equinox.bundles/+/186540/2..5/bundles/org.eclipse.equinox.common.tests/src/org/eclipse/equinox/common/tests/adaptable/IAdapterManagerTest.java#456\n\nPS2 passed in the code before any of this manager changes, the test needed to be changed to get it to pass in PS5. See the comment history which led to the test being changed rather than the code.\n\nThe problem is also explained in Bug 576622 Comment 10:\n\n\u003e For example, if you have an adapter factory registered for ExtensionBasedTextEditor -\u003e IContentOutlinePage  and another factory for MySubclassOfExtensionBasedTextEditor -\u003e IContentOutlinePage then requesting adaption from MySubclassOfExtensionBasedTextEditor -\u003e IContentOutlinePage  should never use the factory of ExtensionBasedTextEditor -\u003e IContentOutlinePage regardless of activation states.",
      "parentUuid": "1232dad4_b4ac0ebd",
      "revId": "e60ef74ebbe3a6af27bc31bf0ade1ece530eb57d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f85f9a4e_6dfe0947",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/launching/GdbLaunch.java",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 171685
      },
      "writtenOn": "2021-10-26T13:50:54Z",
      "side": 1,
      "message": "But wasn\u0027t this fixed (returnin wrong factory) or is there still an issue?",
      "parentUuid": "8260ffd1_71c6692e",
      "revId": "e60ef74ebbe3a6af27bc31bf0ade1ece530eb57d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03b4bb20_9cc872df",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/launching/GdbLaunch.java",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 27769
      },
      "writtenOn": "2021-10-26T14:11:32Z",
      "side": 1,
      "message": "There were two issues (as highlighted by testGetAdapterXYNotLoaded and testGetAdapterXYNotLoadedForceLoad that I added) - the latter test has been resolved and the behaviour matches what was in previous release of Eclipse. The former shows a behaviour change. The decision was to make that behaviour change. I originally argued that the behaviour change shown in testGetAdapterXYNotLoaded was not in the original spec of Bug 576024, but this is what Mickael said:\n\n\u003e I think this doesn\u0027t qualify as a regression; but instead as an improvement as we now get an adapter (as requested) because there is one available.\n\u003e As mentioned by Andrey, I think it can be qualified as a regression only if this causes a bug; but here I hardly see how things can be worse because of this change (unlike previous issue about sorting that was more obviously causing bad behaviors by not conforming to the \"naive\" expectation)\n\nSo, what is your opinion on this, does the CDT change I made count as a bug? Should we reopen the decision again? Or was CDT relying on undocumented behaviour and CDT has to adapt to the change.",
      "parentUuid": "f85f9a4e_6dfe0947",
      "revId": "e60ef74ebbe3a6af27bc31bf0ade1ece530eb57d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b059851_8e49ed0e",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/launching/GdbLaunch.java",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 171685
      },
      "writtenOn": "2021-10-26T14:21:43Z",
      "side": 1,
      "message": "I\u0027m a bit lost between the lines and changes here :-) So just one question to be sure that I get this right:\n\nThere are two adapters, one for Adapting A and one for adapting B while B extends A?\n\nAnd if now the one for B returns null we actually ask A even though it is less specific for the given type and you get a non-null value correct?",
      "parentUuid": "03b4bb20_9cc872df",
      "revId": "e60ef74ebbe3a6af27bc31bf0ade1ece530eb57d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98ac16f9_e0975cde",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/launching/GdbLaunch.java",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 27769
      },
      "writtenOn": "2021-10-26T14:27:04Z",
      "side": 1,
      "message": "Close - but not quite.\n\nThe one for adapting B is in a not activated bundle, so the adapter factory is not queried at all. \n\nSo instead of:\n\n\u003e And if now the one for B returns null we actually ask A even though it is less specific for the given type and you get a non-null value correct?\n\nit is:\n\nAnd if now the one for B is not loaded we actually ask A even though it is less specific for the given type and you get a non-null value correct?",
      "parentUuid": "3b059851_8e49ed0e",
      "revId": "e60ef74ebbe3a6af27bc31bf0ade1ece530eb57d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "238bccc7_9fb9c02a",
        "filename": "dsf-gdb/org.eclipse.cdt.dsf.gdb/src/org/eclipse/cdt/dsf/gdb/launching/GdbLaunch.java",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 27769
      },
      "writtenOn": "2021-10-26T14:28:17Z",
      "side": 1,
      "message": "PS:\n\n\u003e And if now the one for B returns null we actually ask A even though it is less specific for the given type and you get a non-null value correct?\n\nis true too - but that is not the case I am talking about in this CDT change.",
      "parentUuid": "98ac16f9_e0975cde",
      "revId": "e60ef74ebbe3a6af27bc31bf0ade1ece530eb57d",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "f59dd27a_8cbd3b8f",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/makegen/gnu/GnuMakefileGenerator.java",
        "patchSetId": 1
      },
      "lineNbr": 1018,
      "author": {
        "id": 27769
      },
      "writtenOn": "2021-08-14T00:55:33Z",
      "side": 1,
      "message": "This may need some cleanup/escaping of names?",
      "range": {
        "startLine": 1018,
        "startChar": 47,
        "endLine": 1018,
        "endChar": 63
      },
      "revId": "f2d0d6c48d8724978e518da78cdd30be21fc244b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c214d52_5d8c2908",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/makegen/gnu/GnuMakefileGenerator.java",
        "patchSetId": 1
      },
      "lineNbr": 1018,
      "author": {
        "id": 178588
      },
      "writtenOn": "2021-08-15T09:19:10Z",
      "side": 1,
      "message": "Yes, it would need some cleanup.\nI\u0027m not quite sure how to properly handle the cleanup/escaping as it would introduce a risk of duplicating make targets and those would not work. \nMaybe the best solution would be to simply remove anything except [A-Za-z0-9_.-] from the string and then append the hash (sha1?) of the full moduleOutputPath? That should be pretty unique...\nThe other possibility is to simply have a counter, but then every subdir.mk needs to be generate if there is one that needs an update and I\u0027m currently not sure that\u0027s the case.\n\nLet me know what you think.",
      "parentUuid": "f59dd27a_8cbd3b8f",
      "range": {
        "startLine": 1018,
        "startChar": 47,
        "endLine": 1018,
        "endChar": 63
      },
      "revId": "f2d0d6c48d8724978e518da78cdd30be21fc244b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "900b8c91_c9bfb308",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/makegen/gnu/GnuMakefileGenerator.java",
        "patchSetId": 1
      },
      "lineNbr": 1018,
      "author": {
        "id": 178588
      },
      "writtenOn": "2021-08-15T13:39:27Z",
      "side": 1,
      "message": "I did a quick implementation using a \"cleaned\" string and a hash as described in my earlier reply. I\u0027m not convinced that this is the way to go with the target names though.",
      "parentUuid": "5c214d52_5d8c2908",
      "range": {
        "startLine": 1018,
        "startChar": 47,
        "endLine": 1018,
        "endChar": 63
      },
      "revId": "f2d0d6c48d8724978e518da78cdd30be21fc244b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03c5514f_4e0f34cb",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/makegen/gnu/GnuMakefileGenerator.java",
        "patchSetId": 1
      },
      "lineNbr": 1018,
      "author": {
        "id": 27769
      },
      "writtenOn": "2021-08-16T18:35:57Z",
      "side": 1,
      "message": "I think doing something like how URL encoding works would solve the problem, be bi-directional and unchanging and unique.\n\ne.g. these:\n\n   src\n   src/simple\n   src-simple\n   src/my path with - and spaces/dir\n\nbecome:\n\n   src\n   src-simple\n   src-2dsimple\n   src-my-20-path-20-with-20-2d-20and-20spaces-dir",
      "parentUuid": "900b8c91_c9bfb308",
      "range": {
        "startLine": 1018,
        "startChar": 47,
        "endLine": 1018,
        "endChar": 63
      },
      "revId": "f2d0d6c48d8724978e518da78cdd30be21fc244b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfcbf647_d3cf72a5",
        "filename": "build/org.eclipse.cdt.managedbuilder.core/src/org/eclipse/cdt/managedbuilder/makegen/gnu/GnuMakefileGenerator.java",
        "patchSetId": 1
      },
      "lineNbr": 1018,
      "author": {
        "id": 178588
      },
      "writtenOn": "2021-08-16T19:31:33Z",
      "side": 1,
      "message": "Simple enough, lets try it and see how it goes.\n\nWhat characters should we accept?\nRFC 3986 section 2.3 says: \n\u003e unreserved  \u003d ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\nbut I think that we should be more restrictive. Should we simply \"escape\" everything except alphanumeric?",
      "parentUuid": "03c5514f_4e0f34cb",
      "range": {
        "startLine": 1018,
        "startChar": 47,
        "endLine": 1018,
        "endChar": 63
      },
      "revId": "f2d0d6c48d8724978e518da78cdd30be21fc244b",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": true
    }
  ]
}
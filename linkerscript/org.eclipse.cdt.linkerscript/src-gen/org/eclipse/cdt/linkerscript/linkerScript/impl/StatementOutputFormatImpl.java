/**
 * generated by Xtext 2.10.0
 */
package org.eclipse.cdt.linkerscript.linkerScript.impl;

import org.eclipse.cdt.linkerscript.linkerScript.LinkerScriptPackage;
import org.eclipse.cdt.linkerscript.linkerScript.StatementOutputFormat;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Statement Output Format</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.eclipse.cdt.linkerscript.linkerScript.impl.StatementOutputFormatImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.eclipse.cdt.linkerscript.linkerScript.impl.StatementOutputFormatImpl#getBig <em>Big</em>}</li>
 *   <li>{@link org.eclipse.cdt.linkerscript.linkerScript.impl.StatementOutputFormatImpl#getLittle <em>Little</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StatementOutputFormatImpl extends StatementImpl implements StatementOutputFormat
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getBig() <em>Big</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBig()
   * @generated
   * @ordered
   */
  protected static final String BIG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBig() <em>Big</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBig()
   * @generated
   * @ordered
   */
  protected String big = BIG_EDEFAULT;

  /**
   * The default value of the '{@link #getLittle() <em>Little</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLittle()
   * @generated
   * @ordered
   */
  protected static final String LITTLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLittle() <em>Little</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLittle()
   * @generated
   * @ordered
   */
  protected String little = LITTLE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StatementOutputFormatImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LinkerScriptPackage.Literals.STATEMENT_OUTPUT_FORMAT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBig()
  {
    return big;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBig(String newBig)
  {
    String oldBig = big;
    big = newBig;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__BIG, oldBig, big));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLittle()
  {
    return little;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLittle(String newLittle)
  {
    String oldLittle = little;
    little = newLittle;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__LITTLE, oldLittle, little));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__NAME:
        return getName();
      case LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__BIG:
        return getBig();
      case LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__LITTLE:
        return getLittle();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__NAME:
        setName((String)newValue);
        return;
      case LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__BIG:
        setBig((String)newValue);
        return;
      case LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__LITTLE:
        setLittle((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__BIG:
        setBig(BIG_EDEFAULT);
        return;
      case LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__LITTLE:
        setLittle(LITTLE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__BIG:
        return BIG_EDEFAULT == null ? big != null : !BIG_EDEFAULT.equals(big);
      case LinkerScriptPackage.STATEMENT_OUTPUT_FORMAT__LITTLE:
        return LITTLE_EDEFAULT == null ? little != null : !LITTLE_EDEFAULT.equals(little);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", big: ");
    result.append(big);
    result.append(", little: ");
    result.append(little);
    result.append(')');
    return result.toString();
  }

} //StatementOutputFormatImpl

/*
 * generated by Xtext 2.10.0
 */
grammar InternalLinkerScript;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.eclipse.cdt.linkerscript.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.cdt.linkerscript.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.cdt.linkerscript.services.LinkerScriptGrammarAccess;

}

@parser::members {

 	private LinkerScriptGrammarAccess grammarAccess;

    public InternalLinkerScriptParser(TokenStream input, LinkerScriptGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "LinkerScript";
   	}

   	@Override
   	protected LinkerScriptGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleLinkerScript
entryRuleLinkerScript returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkerScriptRule()); }
	iv_ruleLinkerScript=ruleLinkerScript
	{ $current=$iv_ruleLinkerScript.current; }
	EOF;

// Rule LinkerScript
ruleLinkerScript returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLinkerScriptAccess().getLinkerScriptAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkerScriptAccess().getMemoriesMemoryCommandParserRuleCall_1_0());
				}
				lv_memories_1_0=ruleMemoryCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkerScriptRule());
					}
					set(
						$current,
						"memories",
						lv_memories_1_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.MemoryCommand");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLinkerScriptAccess().getSectionsSectionsCommandParserRuleCall_2_0());
				}
				lv_sections_2_0=ruleSectionsCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLinkerScriptRule());
					}
					set(
						$current,
						"sections",
						lv_sections_2_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.SectionsCommand");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSectionsCommand
entryRuleSectionsCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSectionsCommandRule()); }
	iv_ruleSectionsCommand=ruleSectionsCommand
	{ $current=$iv_ruleSectionsCommand.current; }
	EOF;

// Rule SectionsCommand
ruleSectionsCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SECTIONS'
		{
			newLeafNode(otherlv_0, grammarAccess.getSectionsCommandAccess().getSECTIONSKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSectionsCommandAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSectionsCommandAccess().getSectionsCommandAction_2(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSectionsCommandAccess().getSectionsOutputSectionParserRuleCall_3_0());
				}
				lv_sections_3_0=ruleOutputSection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSectionsCommandRule());
					}
					add(
						$current,
						"sections",
						lv_sections_3_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.OutputSection");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSectionsCommandAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleOutputSection
entryRuleOutputSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputSectionRule()); }
	iv_ruleOutputSection=ruleOutputSection
	{ $current=$iv_ruleOutputSection.current; }
	EOF;

// Rule OutputSection
ruleOutputSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputSectionAccess().getNameValidIDParserRuleCall_0_0());
				}
				lv_name_0_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputSectionRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputSectionAccess().getAddressLExpressionParserRuleCall_1_0());
				}
				lv_address_1_0=ruleLExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputSectionRule());
					}
					set(
						$current,
						"address",
						lv_address_1_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getOutputSectionAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputSectionAccess().getTypeOutputSectionTypeParserRuleCall_2_1_0());
					}
					lv_type_3_0=ruleOutputSectionType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputSectionRule());
						}
						set(
							$current,
							"type",
							lv_type_3_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.OutputSectionType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getOutputSectionAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getOutputSectionAccess().getColonKeyword_3());
		}
		(
			otherlv_6='AT'
			{
				newLeafNode(otherlv_6, grammarAccess.getOutputSectionAccess().getATKeyword_4_0());
			}
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getOutputSectionAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputSectionAccess().getAtLExpressionParserRuleCall_4_2_0());
					}
					lv_at_8_0=ruleLExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputSectionRule());
						}
						set(
							$current,
							"at",
							lv_at_8_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getOutputSectionAccess().getRightParenthesisKeyword_4_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputSectionAccess().getAlignOutputSectionAlignParserRuleCall_5_0());
				}
				lv_align_10_0=ruleOutputSectionAlign
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputSectionRule());
					}
					set(
						$current,
						"align",
						lv_align_10_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.OutputSectionAlign");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_11='SUBALIGN'
			{
				newLeafNode(otherlv_11, grammarAccess.getOutputSectionAccess().getSUBALIGNKeyword_6_0());
			}
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getOutputSectionAccess().getLeftParenthesisKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputSectionAccess().getSubAlignLExpressionParserRuleCall_6_2_0());
					}
					lv_subAlign_13_0=ruleLExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputSectionRule());
						}
						set(
							$current,
							"subAlign",
							lv_subAlign_13_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_14=')'
			{
				newLeafNode(otherlv_14, grammarAccess.getOutputSectionAccess().getRightParenthesisKeyword_6_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputSectionAccess().getConstraintOutputSectionConstraintParserRuleCall_7_0());
				}
				lv_constraint_15_0=ruleOutputSectionConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputSectionRule());
					}
					set(
						$current,
						"constraint",
						lv_constraint_15_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.OutputSectionConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_16='{'
		{
			newLeafNode(otherlv_16, grammarAccess.getOutputSectionAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputSectionAccess().getStatementsStatementParserRuleCall_9_0());
				}
				lv_statements_17_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputSectionRule());
					}
					add(
						$current,
						"statements",
						lv_statements_17_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getOutputSectionAccess().getRightCurlyBracketKeyword_10());
		}
		(
			otherlv_19='>'
			{
				newLeafNode(otherlv_19, grammarAccess.getOutputSectionAccess().getGreaterThanSignKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputSectionAccess().getMemoryValidIDParserRuleCall_11_1_0());
					}
					lv_memory_20_0=ruleValidID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputSectionRule());
						}
						set(
							$current,
							"memory",
							lv_memory_20_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.ValidID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_21='AT'
			{
				newLeafNode(otherlv_21, grammarAccess.getOutputSectionAccess().getATKeyword_12_0());
			}
			otherlv_22='>'
			{
				newLeafNode(otherlv_22, grammarAccess.getOutputSectionAccess().getGreaterThanSignKeyword_12_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputSectionAccess().getAtMemoryValidIDParserRuleCall_12_2_0());
					}
					lv_atMemory_23_0=ruleValidID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputSectionRule());
						}
						set(
							$current,
							"atMemory",
							lv_atMemory_23_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.ValidID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_24=':'
			{
				newLeafNode(otherlv_24, grammarAccess.getOutputSectionAccess().getColonKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputSectionAccess().getPhdrsValidIDParserRuleCall_13_1_0());
					}
					lv_phdrs_25_0=ruleValidID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputSectionRule());
						}
						add(
							$current,
							"phdrs",
							lv_phdrs_25_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.ValidID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_26='='
			{
				newLeafNode(otherlv_26, grammarAccess.getOutputSectionAccess().getEqualsSignKeyword_14_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputSectionAccess().getFillLExpressionParserRuleCall_14_1_0());
					}
					lv_fill_27_0=ruleLExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputSectionRule());
						}
						set(
							$current,
							"fill",
							lv_fill_27_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_28=','
			{
				newLeafNode(otherlv_28, grammarAccess.getOutputSectionAccess().getCommaKeyword_15());
			}
		)?
	)
;

// Entry rule entryRuleOutputSectionAlign
entryRuleOutputSectionAlign returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputSectionAlignRule()); }
	iv_ruleOutputSectionAlign=ruleOutputSectionAlign
	{ $current=$iv_ruleOutputSectionAlign.current; }
	EOF;

// Rule OutputSectionAlign
ruleOutputSectionAlign returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutputSectionAlignAccess().getOutputSectionAlignExpressionAction_0_0(),
						$current);
				}
			)
			otherlv_1='ALIGN'
			{
				newLeafNode(otherlv_1, grammarAccess.getOutputSectionAlignAccess().getALIGNKeyword_0_1());
			}
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getOutputSectionAlignAccess().getLeftParenthesisKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputSectionAlignAccess().getExpLExpressionParserRuleCall_0_3_0());
					}
					lv_exp_3_0=ruleLExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputSectionAlignRule());
						}
						set(
							$current,
							"exp",
							lv_exp_3_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getOutputSectionAlignAccess().getRightParenthesisKeyword_0_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutputSectionAlignAccess().getOutputSectionAlignWithInputAction_1_0(),
						$current);
				}
			)
			otherlv_6='ALIGN_WITH_INPUT'
			{
				newLeafNode(otherlv_6, grammarAccess.getOutputSectionAlignAccess().getALIGN_WITH_INPUTKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleOutputSectionConstraint
entryRuleOutputSectionConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputSectionConstraintRule()); }
	iv_ruleOutputSectionConstraint=ruleOutputSectionConstraint
	{ $current=$iv_ruleOutputSectionConstraint.current; }
	EOF;

// Rule OutputSectionConstraint
ruleOutputSectionConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutputSectionConstraintAccess().getOutputSectionConstraintOnlyIfROAction_0_0(),
						$current);
				}
			)
			otherlv_1='ONLY_IF_RO'
			{
				newLeafNode(otherlv_1, grammarAccess.getOutputSectionConstraintAccess().getONLY_IF_ROKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutputSectionConstraintAccess().getOutputSectionConstraintOnlyIfRWAction_1_0(),
						$current);
				}
			)
			otherlv_3='ONLY_IF_RW'
			{
				newLeafNode(otherlv_3, grammarAccess.getOutputSectionConstraintAccess().getONLY_IF_RWKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutputSectionConstraintAccess().getOutputSectionConstraintSpecialAction_2_0(),
						$current);
				}
			)
			otherlv_5='SPECIAL'
			{
				newLeafNode(otherlv_5, grammarAccess.getOutputSectionConstraintAccess().getSPECIALKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleOutputSectionType
entryRuleOutputSectionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputSectionTypeRule()); }
	iv_ruleOutputSectionType=ruleOutputSectionType
	{ $current=$iv_ruleOutputSectionType.current; }
	EOF;

// Rule OutputSectionType
ruleOutputSectionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutputSectionTypeAccess().getOutputSectionTypeNoLoadAction_0_0(),
						$current);
				}
			)
			otherlv_1='NOLOAD'
			{
				newLeafNode(otherlv_1, grammarAccess.getOutputSectionTypeAccess().getNOLOADKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutputSectionTypeAccess().getOutputSectionTypeDSectAction_1_0(),
						$current);
				}
			)
			otherlv_3='DSECT'
			{
				newLeafNode(otherlv_3, grammarAccess.getOutputSectionTypeAccess().getDSECTKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutputSectionTypeAccess().getOutputSectionTypeCopyAction_2_0(),
						$current);
				}
			)
			otherlv_5='COPY'
			{
				newLeafNode(otherlv_5, grammarAccess.getOutputSectionTypeAccess().getCOPYKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutputSectionTypeAccess().getOutputSectionTypeInfoAction_3_0(),
						$current);
				}
			)
			otherlv_7='INFO'
			{
				newLeafNode(otherlv_7, grammarAccess.getOutputSectionTypeAccess().getINFOKeyword_3_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getOutputSectionTypeAccess().getOutputSectionTypeOverlayAction_4_0(),
						$current);
				}
			)
			otherlv_9='OVERLAY'
			{
				newLeafNode(otherlv_9, grammarAccess.getOutputSectionTypeAccess().getOVERLAYKeyword_4_1());
			}
		)
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getStatementAccess().getStatementAssignmentAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getAssignmentAssignmentRuleParserRuleCall_0_1_0());
					}
					lv_assignment_1_0=ruleAssignmentRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"assignment",
							lv_assignment_1_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.AssignmentRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getStatementAccess().getCommaKeyword_0_2_0());
				}
				    |
				otherlv_3=';'
				{
					newLeafNode(otherlv_3, grammarAccess.getStatementAccess().getSemicolonKeyword_0_2_1());
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getStatementAccess().getStatementCreateObjectSymbolsAction_1_0(),
						$current);
				}
			)
			otherlv_5='CREATE_OBJECT_SYMBOLS'
			{
				newLeafNode(otherlv_5, grammarAccess.getStatementAccess().getCREATE_OBJECT_SYMBOLSKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getStatementAccess().getStatementConstructorsAction_2_0(),
						$current);
				}
			)
			otherlv_7='CONSTRUCTORS'
			{
				newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getCONSTRUCTORSKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getStatementAccess().getStatementConstructorsSortedAction_3_0(),
						$current);
				}
			)
			otherlv_9='SORT_BY_NAME'
			{
				newLeafNode(otherlv_9, grammarAccess.getStatementAccess().getSORT_BY_NAMEKeyword_3_1());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_3_2());
			}
			otherlv_11='CONSTRUCTORS'
			{
				newLeafNode(otherlv_11, grammarAccess.getStatementAccess().getCONSTRUCTORSKeyword_3_3());
			}
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getStatementAccess().getRightParenthesisKeyword_3_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getStatementAccess().getStatementDataAction_4_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getSizeStatementDataSizeParserRuleCall_4_1_0());
					}
					lv_size_14_0=ruleStatementDataSize
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"size",
							lv_size_14_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.StatementDataSize");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_15='('
			{
				newLeafNode(otherlv_15, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getDataLExpressionParserRuleCall_4_3_0());
					}
					lv_data_16_0=ruleLExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"data",
							lv_data_16_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17=')'
			{
				newLeafNode(otherlv_17, grammarAccess.getStatementAccess().getRightParenthesisKeyword_4_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getStatementAccess().getStatementFillAction_5_0(),
						$current);
				}
			)
			otherlv_19='FILL'
			{
				newLeafNode(otherlv_19, grammarAccess.getStatementAccess().getFILLKeyword_5_1());
			}
			otherlv_20='('
			{
				newLeafNode(otherlv_20, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getFillLExpressionParserRuleCall_5_3_0());
					}
					lv_fill_21_0=ruleLExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"fill",
							lv_fill_21_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_22=')'
			{
				newLeafNode(otherlv_22, grammarAccess.getStatementAccess().getRightParenthesisKeyword_5_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getStatementAccess().getStatementAssertAction_6_0(),
						$current);
				}
			)
			otherlv_24='ASSERT'
			{
				newLeafNode(otherlv_24, grammarAccess.getStatementAccess().getASSERTKeyword_6_1());
			}
			otherlv_25='('
			{
				newLeafNode(otherlv_25, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_6_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getExpLExpressionParserRuleCall_6_3_0());
					}
					lv_exp_26_0=ruleLExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"exp",
							lv_exp_26_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_27=','
			{
				newLeafNode(otherlv_27, grammarAccess.getStatementAccess().getCommaKeyword_6_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getMessageValidIDParserRuleCall_6_5_0());
					}
					lv_message_28_0=ruleValidID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"message",
							lv_message_28_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.ValidID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_29=')'
			{
				newLeafNode(otherlv_29, grammarAccess.getStatementAccess().getRightParenthesisKeyword_6_6());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getStatementAccess().getStatementIncludeAction_7_0(),
						$current);
				}
			)
			otherlv_31='INCLUDE'
			{
				newLeafNode(otherlv_31, grammarAccess.getStatementAccess().getINCLUDEKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getFilenameWildIDParserRuleCall_7_2_0());
					}
					lv_filename_32_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"filename",
							lv_filename_32_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getStatementAccess().getStatementInputSectionAction_8_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getSpecInputSectionParserRuleCall_8_1_0());
					}
					lv_spec_34_0=ruleInputSection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						set(
							$current,
							"spec",
							lv_spec_34_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.InputSection");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getStatementAccess().getStatementNopAction_9_0(),
						$current);
				}
			)
			otherlv_36=';'
			{
				newLeafNode(otherlv_36, grammarAccess.getStatementAccess().getSemicolonKeyword_9_1());
			}
		)
	)
;

// Entry rule entryRuleStatementDataSize
entryRuleStatementDataSize returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStatementDataSizeRule()); }
	iv_ruleStatementDataSize=ruleStatementDataSize
	{ $current=$iv_ruleStatementDataSize.current.getText(); }
	EOF;

// Rule StatementDataSize
ruleStatementDataSize returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='BYTE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStatementDataSizeAccess().getBYTEKeyword_0());
		}
		    |
		kw='SHORT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStatementDataSizeAccess().getSHORTKeyword_1());
		}
		    |
		kw='LONG'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStatementDataSizeAccess().getLONGKeyword_2());
		}
		    |
		kw='QUAD'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStatementDataSizeAccess().getQUADKeyword_3());
		}
		    |
		kw='SQUAD'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getStatementDataSizeAccess().getSQUADKeyword_4());
		}
	)
;

// Entry rule entryRuleAssignmentRule
entryRuleAssignmentRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRuleRule()); }
	iv_ruleAssignmentRule=ruleAssignmentRule
	{ $current=$iv_ruleAssignmentRule.current; }
	EOF;

// Rule AssignmentRule
ruleAssignmentRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssignmentRuleAccess().getAssignmentAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentRuleAccess().getNameWildIDParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentRuleAccess().getFeatureOpAssignParserRuleCall_0_2_0());
					}
					lv_feature_2_0=ruleOpAssign
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRuleRule());
						}
						set(
							$current,
							"feature",
							lv_feature_2_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.OpAssign");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentRuleAccess().getExpLExpressionParserRuleCall_0_3_0());
					}
					lv_exp_3_0=ruleLExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRuleRule());
						}
						set(
							$current,
							"exp",
							lv_exp_3_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssignmentRuleAccess().getAssignmentHiddenAction_1_0(),
						$current);
				}
			)
			otherlv_5='HIDDEN'
			{
				newLeafNode(otherlv_5, grammarAccess.getAssignmentRuleAccess().getHIDDENKeyword_1_1());
			}
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getAssignmentRuleAccess().getLeftParenthesisKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentRuleAccess().getNameWildIDParserRuleCall_1_3_0());
					}
					lv_name_7_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_7_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_feature_8_0='='
					{
						newLeafNode(lv_feature_8_0, grammarAccess.getAssignmentRuleAccess().getFeatureEqualsSignKeyword_1_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssignmentRuleRule());
						}
						setWithLastConsumed($current, "feature", lv_feature_8_0, "=");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentRuleAccess().getExpLExpressionParserRuleCall_1_5_0());
					}
					lv_exp_9_0=ruleLExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRuleRule());
						}
						set(
							$current,
							"exp",
							lv_exp_9_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getAssignmentRuleAccess().getRightParenthesisKeyword_1_6());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssignmentRuleAccess().getAssignmentProvideAction_2_0(),
						$current);
				}
			)
			otherlv_12='PROVIDE'
			{
				newLeafNode(otherlv_12, grammarAccess.getAssignmentRuleAccess().getPROVIDEKeyword_2_1());
			}
			otherlv_13='('
			{
				newLeafNode(otherlv_13, grammarAccess.getAssignmentRuleAccess().getLeftParenthesisKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentRuleAccess().getNameWildIDParserRuleCall_2_3_0());
					}
					lv_name_14_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_14_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_feature_15_0='='
					{
						newLeafNode(lv_feature_15_0, grammarAccess.getAssignmentRuleAccess().getFeatureEqualsSignKeyword_2_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssignmentRuleRule());
						}
						setWithLastConsumed($current, "feature", lv_feature_15_0, "=");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentRuleAccess().getExpLExpressionParserRuleCall_2_5_0());
					}
					lv_exp_16_0=ruleLExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRuleRule());
						}
						set(
							$current,
							"exp",
							lv_exp_16_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17=')'
			{
				newLeafNode(otherlv_17, grammarAccess.getAssignmentRuleAccess().getRightParenthesisKeyword_2_6());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssignmentRuleAccess().getAssignmentProvideHiddenAction_3_0(),
						$current);
				}
			)
			otherlv_19='PROVIDE_HIDDEN'
			{
				newLeafNode(otherlv_19, grammarAccess.getAssignmentRuleAccess().getPROVIDE_HIDDENKeyword_3_1());
			}
			otherlv_20='('
			{
				newLeafNode(otherlv_20, grammarAccess.getAssignmentRuleAccess().getLeftParenthesisKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentRuleAccess().getNameWildIDParserRuleCall_3_3_0());
					}
					lv_name_21_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_21_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_feature_22_0='='
					{
						newLeafNode(lv_feature_22_0, grammarAccess.getAssignmentRuleAccess().getFeatureEqualsSignKeyword_3_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssignmentRuleRule());
						}
						setWithLastConsumed($current, "feature", lv_feature_22_0, "=");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentRuleAccess().getExpLExpressionParserRuleCall_3_5_0());
					}
					lv_exp_23_0=ruleLExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRuleRule());
						}
						set(
							$current,
							"exp",
							lv_exp_23_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_24=')'
			{
				newLeafNode(otherlv_24, grammarAccess.getAssignmentRuleAccess().getRightParenthesisKeyword_3_6());
			}
		)
	)
;

// Entry rule entryRuleOpAssign
entryRuleOpAssign returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpAssignRule()); }
	iv_ruleOpAssign=ruleOpAssign
	{ $current=$iv_ruleOpAssign.current.getText(); }
	EOF;

// Rule OpAssign
ruleOpAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAssignAccess().getEqualsSignKeyword_0());
		}
		    |
		kw='+='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAssignAccess().getPlusSignEqualsSignKeyword_1());
		}
		    |
		kw='-='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAssignAccess().getHyphenMinusEqualsSignKeyword_2());
		}
		    |
		kw='*='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAssignAccess().getAsteriskEqualsSignKeyword_3());
		}
		    |
		kw='/='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAssignAccess().getSolidusEqualsSignKeyword_4());
		}
		    |
		(
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpAssignAccess().getLessThanSignKeyword_5_0());
			}
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpAssignAccess().getLessThanSignKeyword_5_1());
			}
			kw='='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpAssignAccess().getEqualsSignKeyword_5_2());
			}
		)
		    |
		(
			kw='>'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpAssignAccess().getGreaterThanSignKeyword_6_0());
			}
			kw='>='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpAssignAccess().getGreaterThanSignEqualsSignKeyword_6_1());
			}
		)
		    |
		kw='&='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAssignAccess().getAmpersandEqualsSignKeyword_7());
		}
		    |
		kw='|='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAssignAccess().getVerticalLineEqualsSignKeyword_8());
		}
	)
;

// Entry rule entryRuleInputSection
entryRuleInputSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputSectionRule()); }
	iv_ruleInputSection=ruleInputSection
	{ $current=$iv_ruleInputSection.current; }
	EOF;

// Rule InputSection
ruleInputSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInputSectionAccess().getInputSectionFileAction_0_0(),
						$current);
				}
			)
			(
				otherlv_1='INPUT_SECTION_FLAGS'
				{
					newLeafNode(otherlv_1, grammarAccess.getInputSectionAccess().getINPUT_SECTION_FLAGSKeyword_0_1_0());
				}
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getInputSectionAccess().getLeftParenthesisKeyword_0_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInputSectionAccess().getFlagsWildIDParserRuleCall_0_1_2_0());
						}
						lv_flags_3_0=ruleWildID
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInputSectionRule());
							}
							add(
								$current,
								"flags",
								lv_flags_3_0,
								"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4='&'
					{
						newLeafNode(otherlv_4, grammarAccess.getInputSectionAccess().getAmpersandKeyword_0_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getInputSectionAccess().getFlagsWildIDParserRuleCall_0_1_3_1_0());
							}
							lv_flags_5_0=ruleWildID
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getInputSectionRule());
								}
								add(
									$current,
									"flags",
									lv_flags_5_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getInputSectionAccess().getRightParenthesisKeyword_0_1_4());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getInputSectionAccess().getFileWildIDParserRuleCall_0_2_0());
					}
					lv_file_7_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputSectionRule());
						}
						set(
							$current,
							"file",
							lv_file_7_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInputSectionAccess().getInputSectionWildAction_1_0(),
						$current);
				}
			)
			(
				otherlv_9='INPUT_SECTION_FLAGS'
				{
					newLeafNode(otherlv_9, grammarAccess.getInputSectionAccess().getINPUT_SECTION_FLAGSKeyword_1_1_0());
				}
				otherlv_10='('
				{
					newLeafNode(otherlv_10, grammarAccess.getInputSectionAccess().getLeftParenthesisKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInputSectionAccess().getFlagsWildIDParserRuleCall_1_1_2_0());
						}
						lv_flags_11_0=ruleWildID
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInputSectionRule());
							}
							add(
								$current,
								"flags",
								lv_flags_11_0,
								"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_12='&'
					{
						newLeafNode(otherlv_12, grammarAccess.getInputSectionAccess().getAmpersandKeyword_1_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getInputSectionAccess().getFlagsWildIDParserRuleCall_1_1_3_1_0());
							}
							lv_flags_13_0=ruleWildID
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getInputSectionRule());
								}
								add(
									$current,
									"flags",
									lv_flags_13_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_14=')'
				{
					newLeafNode(otherlv_14, grammarAccess.getInputSectionAccess().getRightParenthesisKeyword_1_1_4());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getInputSectionAccess().getWildFileWildcardRuleParserRuleCall_1_2_0());
					}
					lv_wildFile_15_0=ruleWildcardRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputSectionRule());
						}
						set(
							$current,
							"wildFile",
							lv_wildFile_15_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildcardRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getInputSectionAccess().getLeftParenthesisKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInputSectionAccess().getSectionsWildcardRuleParserRuleCall_1_4_0());
					}
					lv_sections_17_0=ruleWildcardRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputSectionRule());
						}
						add(
							$current,
							"sections",
							lv_sections_17_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildcardRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_18=','
					{
						newLeafNode(otherlv_18, grammarAccess.getInputSectionAccess().getCommaKeyword_1_5_0());
					}
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getInputSectionAccess().getSectionsWildcardRuleParserRuleCall_1_5_1_0());
						}
						lv_sections_19_0=ruleWildcardRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInputSectionRule());
							}
							add(
								$current,
								"sections",
								lv_sections_19_0,
								"org.eclipse.cdt.linkerscript.LinkerScript.WildcardRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getInputSectionAccess().getRightParenthesisKeyword_1_6());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInputSectionAccess().getInputSectionFileAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_keep_22_0='KEEP'
					{
						newLeafNode(lv_keep_22_0, grammarAccess.getInputSectionAccess().getKeepKEEPKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputSectionRule());
						}
						setWithLastConsumed($current, "keep", true, "KEEP");
					}
				)
			)
			otherlv_23='('
			{
				newLeafNode(otherlv_23, grammarAccess.getInputSectionAccess().getLeftParenthesisKeyword_2_2());
			}
			(
				otherlv_24='INPUT_SECTION_FLAGS'
				{
					newLeafNode(otherlv_24, grammarAccess.getInputSectionAccess().getINPUT_SECTION_FLAGSKeyword_2_3_0());
				}
				otherlv_25='('
				{
					newLeafNode(otherlv_25, grammarAccess.getInputSectionAccess().getLeftParenthesisKeyword_2_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInputSectionAccess().getFlagsWildIDParserRuleCall_2_3_2_0());
						}
						lv_flags_26_0=ruleWildID
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInputSectionRule());
							}
							add(
								$current,
								"flags",
								lv_flags_26_0,
								"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_27='&'
					{
						newLeafNode(otherlv_27, grammarAccess.getInputSectionAccess().getAmpersandKeyword_2_3_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getInputSectionAccess().getFlagsWildIDParserRuleCall_2_3_3_1_0());
							}
							lv_flags_28_0=ruleWildID
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getInputSectionRule());
								}
								add(
									$current,
									"flags",
									lv_flags_28_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_29=')'
				{
					newLeafNode(otherlv_29, grammarAccess.getInputSectionAccess().getRightParenthesisKeyword_2_3_4());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getInputSectionAccess().getFileWildIDParserRuleCall_2_4_0());
					}
					lv_file_30_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputSectionRule());
						}
						set(
							$current,
							"file",
							lv_file_30_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_31=')'
			{
				newLeafNode(otherlv_31, grammarAccess.getInputSectionAccess().getRightParenthesisKeyword_2_5());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getInputSectionAccess().getInputSectionWildAction_3_0(),
						$current);
				}
			)
			(
				(
					lv_keep_33_0='KEEP'
					{
						newLeafNode(lv_keep_33_0, grammarAccess.getInputSectionAccess().getKeepKEEPKeyword_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputSectionRule());
						}
						setWithLastConsumed($current, "keep", true, "KEEP");
					}
				)
			)
			otherlv_34='('
			{
				newLeafNode(otherlv_34, grammarAccess.getInputSectionAccess().getLeftParenthesisKeyword_3_2());
			}
			(
				otherlv_35='INPUT_SECTION_FLAGS'
				{
					newLeafNode(otherlv_35, grammarAccess.getInputSectionAccess().getINPUT_SECTION_FLAGSKeyword_3_3_0());
				}
				otherlv_36='('
				{
					newLeafNode(otherlv_36, grammarAccess.getInputSectionAccess().getLeftParenthesisKeyword_3_3_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInputSectionAccess().getFlagsWildIDParserRuleCall_3_3_2_0());
						}
						lv_flags_37_0=ruleWildID
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInputSectionRule());
							}
							add(
								$current,
								"flags",
								lv_flags_37_0,
								"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_38='&'
					{
						newLeafNode(otherlv_38, grammarAccess.getInputSectionAccess().getAmpersandKeyword_3_3_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getInputSectionAccess().getFlagsWildIDParserRuleCall_3_3_3_1_0());
							}
							lv_flags_39_0=ruleWildID
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getInputSectionRule());
								}
								add(
									$current,
									"flags",
									lv_flags_39_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_40=')'
				{
					newLeafNode(otherlv_40, grammarAccess.getInputSectionAccess().getRightParenthesisKeyword_3_3_4());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getInputSectionAccess().getWildFileWildcardRuleParserRuleCall_3_4_0());
					}
					lv_wildFile_41_0=ruleWildcardRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputSectionRule());
						}
						set(
							$current,
							"wildFile",
							lv_wildFile_41_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildcardRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_42='('
			{
				newLeafNode(otherlv_42, grammarAccess.getInputSectionAccess().getLeftParenthesisKeyword_3_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInputSectionAccess().getSectionsWildcardRuleParserRuleCall_3_6_0());
					}
					lv_sections_43_0=ruleWildcardRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputSectionRule());
						}
						add(
							$current,
							"sections",
							lv_sections_43_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildcardRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_44=','
					{
						newLeafNode(otherlv_44, grammarAccess.getInputSectionAccess().getCommaKeyword_3_7_0());
					}
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getInputSectionAccess().getSectionsWildcardRuleParserRuleCall_3_7_1_0());
						}
						lv_sections_45_0=ruleWildcardRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInputSectionRule());
							}
							add(
								$current,
								"sections",
								lv_sections_45_0,
								"org.eclipse.cdt.linkerscript.LinkerScript.WildcardRule");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_46=')'
			{
				newLeafNode(otherlv_46, grammarAccess.getInputSectionAccess().getRightParenthesisKeyword_3_8());
			}
			otherlv_47=')'
			{
				newLeafNode(otherlv_47, grammarAccess.getInputSectionAccess().getRightParenthesisKeyword_3_9());
			}
		)
	)
;

// Entry rule entryRuleWildcardRule
entryRuleWildcardRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWildcardRuleRule()); }
	iv_ruleWildcardRule=ruleWildcardRule
	{ $current=$iv_ruleWildcardRule.current; }
	EOF;

// Rule WildcardRule
ruleWildcardRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getWildcardRuleAccess().getWildcardSortNoneAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardRuleAccess().getNameWildIDParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getWildcardRuleAccess().getWildcardSortNoneAction_1_0(),
						$current);
				}
			)
			otherlv_3='EXCLUDE_FILE'
			{
				newLeafNode(otherlv_3, grammarAccess.getWildcardRuleAccess().getEXCLUDE_FILEKeyword_1_1());
			}
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardRuleAccess().getExcludesWildIDParserRuleCall_1_3_0());
					}
					lv_excludes_5_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardRuleRule());
						}
						add(
							$current,
							"excludes",
							lv_excludes_5_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardRuleAccess().getNameWildIDParserRuleCall_1_5_0());
					}
					lv_name_7_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_7_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getWildcardRuleAccess().getWildcardSortNameAction_2_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getWildcardRuleAccess().getSORT_BY_NAMEParserRuleCall_2_1());
			}
			ruleSORT_BY_NAME
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardRuleAccess().getNameWildIDParserRuleCall_2_3_0());
					}
					lv_name_11_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_11_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_2_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getWildcardRuleAccess().getWildcardSortAlignAction_3_0(),
						$current);
				}
			)
			otherlv_14='SORT_BY_ALIGNMENT'
			{
				newLeafNode(otherlv_14, grammarAccess.getWildcardRuleAccess().getSORT_BY_ALIGNMENTKeyword_3_1());
			}
			otherlv_15='('
			{
				newLeafNode(otherlv_15, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardRuleAccess().getNameWildIDParserRuleCall_3_3_0());
					}
					lv_name_16_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_16_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17=')'
			{
				newLeafNode(otherlv_17, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_3_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getWildcardRuleAccess().getWildcardSortNoneAction_4_0(),
						$current);
				}
			)
			otherlv_19='SORT_NONE'
			{
				newLeafNode(otherlv_19, grammarAccess.getWildcardRuleAccess().getSORT_NONEKeyword_4_1());
			}
			otherlv_20='('
			{
				newLeafNode(otherlv_20, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardRuleAccess().getNameWildIDParserRuleCall_4_3_0());
					}
					lv_name_21_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_21_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_22=')'
			{
				newLeafNode(otherlv_22, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_4_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getWildcardRuleAccess().getWildcardSortNameAlignAction_5_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getWildcardRuleAccess().getSORT_BY_NAMEParserRuleCall_5_1());
			}
			ruleSORT_BY_NAME
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_25='('
			{
				newLeafNode(otherlv_25, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_5_2());
			}
			otherlv_26='SORT_BY_ALIGNMENT'
			{
				newLeafNode(otherlv_26, grammarAccess.getWildcardRuleAccess().getSORT_BY_ALIGNMENTKeyword_5_3());
			}
			otherlv_27='('
			{
				newLeafNode(otherlv_27, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_5_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardRuleAccess().getNameWildIDParserRuleCall_5_5_0());
					}
					lv_name_28_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_28_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_29=')'
			{
				newLeafNode(otherlv_29, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_5_6());
			}
			otherlv_30=')'
			{
				newLeafNode(otherlv_30, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_5_7());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getWildcardRuleAccess().getWildcardSortNameAction_6_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getWildcardRuleAccess().getSORT_BY_NAMEParserRuleCall_6_1());
			}
			ruleSORT_BY_NAME
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_33='('
			{
				newLeafNode(otherlv_33, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_6_2());
			}
			{
				newCompositeNode(grammarAccess.getWildcardRuleAccess().getSORT_BY_NAMEParserRuleCall_6_3());
			}
			ruleSORT_BY_NAME
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_35='('
			{
				newLeafNode(otherlv_35, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_6_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardRuleAccess().getNameWildIDParserRuleCall_6_5_0());
					}
					lv_name_36_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_36_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_37=')'
			{
				newLeafNode(otherlv_37, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_6_6());
			}
			otherlv_38=')'
			{
				newLeafNode(otherlv_38, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_6_7());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getWildcardRuleAccess().getWildcardSortAlignNameAction_7_0(),
						$current);
				}
			)
			otherlv_40='SORT_BY_ALIGNMENT'
			{
				newLeafNode(otherlv_40, grammarAccess.getWildcardRuleAccess().getSORT_BY_ALIGNMENTKeyword_7_1());
			}
			otherlv_41='('
			{
				newLeafNode(otherlv_41, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_7_2());
			}
			{
				newCompositeNode(grammarAccess.getWildcardRuleAccess().getSORT_BY_NAMEParserRuleCall_7_3());
			}
			ruleSORT_BY_NAME
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_43='('
			{
				newLeafNode(otherlv_43, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_7_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardRuleAccess().getNameWildIDParserRuleCall_7_5_0());
					}
					lv_name_44_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_44_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_45=')'
			{
				newLeafNode(otherlv_45, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_7_6());
			}
			otherlv_46=')'
			{
				newLeafNode(otherlv_46, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_7_7());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getWildcardRuleAccess().getWildcardSortAlignAction_8_0(),
						$current);
				}
			)
			otherlv_48='SORT_BY_ALIGNMENT'
			{
				newLeafNode(otherlv_48, grammarAccess.getWildcardRuleAccess().getSORT_BY_ALIGNMENTKeyword_8_1());
			}
			otherlv_49='('
			{
				newLeafNode(otherlv_49, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_8_2());
			}
			otherlv_50='SORT_BY_ALIGNMENT'
			{
				newLeafNode(otherlv_50, grammarAccess.getWildcardRuleAccess().getSORT_BY_ALIGNMENTKeyword_8_3());
			}
			otherlv_51='('
			{
				newLeafNode(otherlv_51, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_8_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardRuleAccess().getNameWildIDParserRuleCall_8_5_0());
					}
					lv_name_52_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_52_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_53=')'
			{
				newLeafNode(otherlv_53, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_8_6());
			}
			otherlv_54=')'
			{
				newLeafNode(otherlv_54, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_8_7());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getWildcardRuleAccess().getWildcardSortNameAction_9_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getWildcardRuleAccess().getSORT_BY_NAMEParserRuleCall_9_1());
			}
			ruleSORT_BY_NAME
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_57='('
			{
				newLeafNode(otherlv_57, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_9_2());
			}
			otherlv_58='EXCLUDE_FILE'
			{
				newLeafNode(otherlv_58, grammarAccess.getWildcardRuleAccess().getEXCLUDE_FILEKeyword_9_3());
			}
			otherlv_59='('
			{
				newLeafNode(otherlv_59, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_9_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardRuleAccess().getExcludesWildIDParserRuleCall_9_5_0());
					}
					lv_excludes_60_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardRuleRule());
						}
						add(
							$current,
							"excludes",
							lv_excludes_60_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_61=')'
			{
				newLeafNode(otherlv_61, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_9_6());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardRuleAccess().getNameWildIDParserRuleCall_9_7_0());
					}
					lv_name_62_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_62_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_63=')'
			{
				newLeafNode(otherlv_63, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_9_8());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getWildcardRuleAccess().getWildcardSortInitPriorityAction_10_0(),
						$current);
				}
			)
			otherlv_65='SORT_BY_INIT_PRIORITY'
			{
				newLeafNode(otherlv_65, grammarAccess.getWildcardRuleAccess().getSORT_BY_INIT_PRIORITYKeyword_10_1());
			}
			otherlv_66='('
			{
				newLeafNode(otherlv_66, grammarAccess.getWildcardRuleAccess().getLeftParenthesisKeyword_10_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWildcardRuleAccess().getNameWildIDParserRuleCall_10_3_0());
					}
					lv_name_67_0=ruleWildID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWildcardRuleRule());
						}
						set(
							$current,
							"name",
							lv_name_67_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.WildID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_68=')'
			{
				newLeafNode(otherlv_68, grammarAccess.getWildcardRuleAccess().getRightParenthesisKeyword_10_4());
			}
		)
	)
;

// Entry rule entryRuleSORT_BY_NAME
entryRuleSORT_BY_NAME returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSORT_BY_NAMERule()); }
	iv_ruleSORT_BY_NAME=ruleSORT_BY_NAME
	{ $current=$iv_ruleSORT_BY_NAME.current.getText(); }
	EOF;

// Rule SORT_BY_NAME
ruleSORT_BY_NAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='SORT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSORT_BY_NAMEAccess().getSORTKeyword_0());
		}
		    |
		kw='SORT_BY_NAME'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSORT_BY_NAMEAccess().getSORT_BY_NAMEKeyword_1());
		}
	)
;

// Entry rule entryRuleMemoryCommand
entryRuleMemoryCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemoryCommandRule()); }
	iv_ruleMemoryCommand=ruleMemoryCommand
	{ $current=$iv_ruleMemoryCommand.current; }
	EOF;

// Rule MemoryCommand
ruleMemoryCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MEMORY'
		{
			newLeafNode(otherlv_0, grammarAccess.getMemoryCommandAccess().getMEMORYKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMemoryCommandAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMemoryCommandAccess().getMemoryCommandAction_2(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMemoryCommandAccess().getMemoriesMemoryParserRuleCall_3_0());
				}
				lv_memories_3_0=ruleMemory
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMemoryCommandRule());
					}
					add(
						$current,
						"memories",
						lv_memories_3_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.Memory");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getMemoryCommandAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMemory
entryRuleMemory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemoryRule()); }
	iv_ruleMemory=ruleMemory
	{ $current=$iv_ruleMemory.current; }
	EOF;

// Rule Memory
ruleMemory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMemoryAccess().getNameMemoryNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleMemoryName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMemoryRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.MemoryName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMemoryAccess().getAttrMemoryAttributeParserRuleCall_1_0());
				}
				lv_attr_1_0=ruleMemoryAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMemoryRule());
					}
					set(
						$current,
						"attr",
						lv_attr_1_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.MemoryAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getMemoryAccess().getColonKeyword_2());
		}
		(
			otherlv_3='ORIGIN'
			{
				newLeafNode(otherlv_3, grammarAccess.getMemoryAccess().getORIGINKeyword_3_0());
			}
			    |
			otherlv_4='org'
			{
				newLeafNode(otherlv_4, grammarAccess.getMemoryAccess().getOrgKeyword_3_1());
			}
			    |
			otherlv_5='o'
			{
				newLeafNode(otherlv_5, grammarAccess.getMemoryAccess().getOKeyword_3_2());
			}
		)
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getMemoryAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMemoryAccess().getOriginLExpressionParserRuleCall_5_0());
				}
				lv_origin_7_0=ruleLExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMemoryRule());
					}
					set(
						$current,
						"origin",
						lv_origin_7_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=','
		{
			newLeafNode(otherlv_8, grammarAccess.getMemoryAccess().getCommaKeyword_6());
		}
		(
			otherlv_9='LENGTH'
			{
				newLeafNode(otherlv_9, grammarAccess.getMemoryAccess().getLENGTHKeyword_7_0());
			}
			    |
			otherlv_10='len'
			{
				newLeafNode(otherlv_10, grammarAccess.getMemoryAccess().getLenKeyword_7_1());
			}
			    |
			otherlv_11='l'
			{
				newLeafNode(otherlv_11, grammarAccess.getMemoryAccess().getLKeyword_7_2());
			}
		)
		otherlv_12='='
		{
			newLeafNode(otherlv_12, grammarAccess.getMemoryAccess().getEqualsSignKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMemoryAccess().getLengthLExpressionParserRuleCall_9_0());
				}
				lv_length_13_0=ruleLExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMemoryRule());
					}
					set(
						$current,
						"length",
						lv_length_13_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMemoryName
entryRuleMemoryName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMemoryNameRule()); }
	iv_ruleMemoryName=ruleMemoryName
	{ $current=$iv_ruleMemoryName.current.getText(); }
	EOF;

// Rule MemoryName
ruleMemoryName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getMemoryNameAccess().getValidIDParserRuleCall());
	}
	this_ValidID_0=ruleValidID
	{
		$current.merge(this_ValidID_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleMemoryAttribute
entryRuleMemoryAttribute returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMemoryAttributeRule()); }
	iv_ruleMemoryAttribute=ruleMemoryAttribute
	{ $current=$iv_ruleMemoryAttribute.current.getText(); }
	EOF;

// Rule MemoryAttribute
ruleMemoryAttribute returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMemoryAttributeAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				kw='!'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getMemoryAttributeAccess().getExclamationMarkKeyword_1_0());
				}
			)?
			{
				newCompositeNode(grammarAccess.getMemoryAttributeAccess().getWildIDParserRuleCall_1_1());
			}
			this_WildID_2=ruleWildID
			{
				$current.merge(this_WildID_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)+
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMemoryAttributeAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleLExpression
entryRuleLExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLExpressionRule()); }
	iv_ruleLExpression=ruleLExpression
	{ $current=$iv_ruleLExpression.current; }
	EOF;

// Rule LExpression
ruleLExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getLExpressionAccess().getLAssignmentParserRuleCall());
	}
	this_LAssignment_0=ruleLAssignment
	{
		$current = $this_LAssignment_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleLAssignment
entryRuleLAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLAssignmentRule()); }
	iv_ruleLAssignment=ruleLAssignment
	{ $current=$iv_ruleLAssignment.current; }
	EOF;

// Rule LAssignment
ruleLAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLAssignmentAccess().getLOrExpressionParserRuleCall_0());
		}
		this_LOrExpression_0=ruleLOrExpression
		{
			$current = $this_LOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpMultiAssign
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getLAssignmentAccess().getLBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getLAssignmentAccess().getFeatureOpMultiAssignParserRuleCall_1_0_0_1_0());
							}
							lv_feature_2_0=ruleOpMultiAssign
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLAssignmentRule());
								}
								set(
									$current,
									"feature",
									lv_feature_2_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.OpMultiAssign");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLAssignmentAccess().getRightOperandLAssignmentParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleLAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLAssignmentRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpMultiAssignRule()); }
	iv_ruleOpMultiAssign=ruleOpMultiAssign
	{ $current=$iv_ruleOpMultiAssign.current.getText(); }
	EOF;

// Rule OpMultiAssign
ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
		}
		    |
		kw='-='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
		}
		    |
		kw='*='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
		}
		    |
		kw='/='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
		}
		    |
		(
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_4_0());
			}
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_4_1());
			}
			kw='='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_4_2());
			}
		)
		    |
		(
			kw='>'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_5_0());
			}
			kw='>='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_5_1());
			}
		)
		    |
		kw='&='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAmpersandEqualsSignKeyword_6());
		}
		    |
		kw='|='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getVerticalLineEqualsSignKeyword_7());
		}
	)
;

// Entry rule entryRuleLOrExpression
entryRuleLOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLOrExpressionRule()); }
	iv_ruleLOrExpression=ruleLOrExpression
	{ $current=$iv_ruleLOrExpression.current; }
	EOF;

// Rule LOrExpression
ruleLOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLOrExpressionAccess().getLAndExpressionParserRuleCall_0());
		}
		this_LAndExpression_0=ruleLAndExpression
		{
			$current = $this_LAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpOr
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getLOrExpressionAccess().getLBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getLOrExpressionAccess().getFeatureOpOrParserRuleCall_1_0_0_1_0());
							}
							lv_feature_2_0=ruleOpOr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLOrExpressionRule());
								}
								set(
									$current,
									"feature",
									lv_feature_2_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.OpOr");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLOrExpressionAccess().getRightOperandLAndExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleLAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLOrExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LAndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpOr
entryRuleOpOr returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpOrRule()); }
	iv_ruleOpOr=ruleOpOr
	{ $current=$iv_ruleOpOr.current.getText(); }
	EOF;

// Rule OpOr
ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='||'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
	}
;

// Entry rule entryRuleLAndExpression
entryRuleLAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLAndExpressionRule()); }
	iv_ruleLAndExpression=ruleLAndExpression
	{ $current=$iv_ruleLAndExpression.current; }
	EOF;

// Rule LAndExpression
ruleLAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLAndExpressionAccess().getLBitwiseOrExpressionParserRuleCall_0());
		}
		this_LBitwiseOrExpression_0=ruleLBitwiseOrExpression
		{
			$current = $this_LBitwiseOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpAnd
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getLAndExpressionAccess().getLBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getLAndExpressionAccess().getFeatureOpAndParserRuleCall_1_0_0_1_0());
							}
							lv_feature_2_0=ruleOpAnd
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLAndExpressionRule());
								}
								set(
									$current,
									"feature",
									lv_feature_2_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.OpAnd");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLAndExpressionAccess().getRightOperandLBitwiseOrExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleLBitwiseOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLAndExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LBitwiseOrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpAnd
entryRuleOpAnd returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpAndRule()); }
	iv_ruleOpAnd=ruleOpAnd
	{ $current=$iv_ruleOpAnd.current.getText(); }
	EOF;

// Rule OpAnd
ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='&&'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
	}
;

// Entry rule entryRuleLBitwiseOrExpression
entryRuleLBitwiseOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLBitwiseOrExpressionRule()); }
	iv_ruleLBitwiseOrExpression=ruleLBitwiseOrExpression
	{ $current=$iv_ruleLBitwiseOrExpression.current; }
	EOF;

// Rule LBitwiseOrExpression
ruleLBitwiseOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLBitwiseOrExpressionAccess().getLBitwiseAndExpressionParserRuleCall_0());
		}
		this_LBitwiseAndExpression_0=ruleLBitwiseAndExpression
		{
			$current = $this_LBitwiseAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpBitwiseOr
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getLBitwiseOrExpressionAccess().getLBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getLBitwiseOrExpressionAccess().getFeatureOpBitwiseOrParserRuleCall_1_0_0_1_0());
							}
							lv_feature_2_0=ruleOpBitwiseOr
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLBitwiseOrExpressionRule());
								}
								set(
									$current,
									"feature",
									lv_feature_2_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.OpBitwiseOr");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLBitwiseOrExpressionAccess().getRightOperandLBitwiseAndExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleLBitwiseAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLBitwiseOrExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LBitwiseAndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpBitwiseOr
entryRuleOpBitwiseOr returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpBitwiseOrRule()); }
	iv_ruleOpBitwiseOr=ruleOpBitwiseOr
	{ $current=$iv_ruleOpBitwiseOr.current.getText(); }
	EOF;

// Rule OpBitwiseOr
ruleOpBitwiseOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='|'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOpBitwiseOrAccess().getVerticalLineKeyword());
	}
;

// Entry rule entryRuleLBitwiseAndExpression
entryRuleLBitwiseAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLBitwiseAndExpressionRule()); }
	iv_ruleLBitwiseAndExpression=ruleLBitwiseAndExpression
	{ $current=$iv_ruleLBitwiseAndExpression.current; }
	EOF;

// Rule LBitwiseAndExpression
ruleLBitwiseAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLBitwiseAndExpressionAccess().getLEqualityExpressionParserRuleCall_0());
		}
		this_LEqualityExpression_0=ruleLEqualityExpression
		{
			$current = $this_LEqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpBitwiseAnd
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getLBitwiseAndExpressionAccess().getLBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getLBitwiseAndExpressionAccess().getFeatureOpBitwiseAndParserRuleCall_1_0_0_1_0());
							}
							lv_feature_2_0=ruleOpBitwiseAnd
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLBitwiseAndExpressionRule());
								}
								set(
									$current,
									"feature",
									lv_feature_2_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.OpBitwiseAnd");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLBitwiseAndExpressionAccess().getRightOperandLEqualityExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleLEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLBitwiseAndExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LEqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpBitwiseAnd
entryRuleOpBitwiseAnd returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpBitwiseAndRule()); }
	iv_ruleOpBitwiseAnd=ruleOpBitwiseAnd
	{ $current=$iv_ruleOpBitwiseAnd.current.getText(); }
	EOF;

// Rule OpBitwiseAnd
ruleOpBitwiseAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='&'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOpBitwiseAndAccess().getAmpersandKeyword());
	}
;

// Entry rule entryRuleLEqualityExpression
entryRuleLEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLEqualityExpressionRule()); }
	iv_ruleLEqualityExpression=ruleLEqualityExpression
	{ $current=$iv_ruleLEqualityExpression.current; }
	EOF;

// Rule LEqualityExpression
ruleLEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLEqualityExpressionAccess().getLRelationalExpressionParserRuleCall_0());
		}
		this_LRelationalExpression_0=ruleLRelationalExpression
		{
			$current = $this_LRelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpEquality
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getLEqualityExpressionAccess().getLBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getLEqualityExpressionAccess().getFeatureOpEqualityParserRuleCall_1_0_0_1_0());
							}
							lv_feature_2_0=ruleOpEquality
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLEqualityExpressionRule());
								}
								set(
									$current,
									"feature",
									lv_feature_2_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.OpEquality");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLEqualityExpressionAccess().getRightOperandLRelationalExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleLRelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLEqualityExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LRelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpEquality
entryRuleOpEquality returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpEqualityRule()); }
	iv_ruleOpEquality=ruleOpEquality
	{ $current=$iv_ruleOpEquality.current.getText(); }
	EOF;

// Rule OpEquality
ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
		}
	)
;

// Entry rule entryRuleLRelationalExpression
entryRuleLRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLRelationalExpressionRule()); }
	iv_ruleLRelationalExpression=ruleLRelationalExpression
	{ $current=$iv_ruleLRelationalExpression.current; }
	EOF;

// Rule LRelationalExpression
ruleLRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLRelationalExpressionAccess().getLOtherOperatorExpressionParserRuleCall_0());
		}
		this_LOtherOperatorExpression_0=ruleLOtherOperatorExpression
		{
			$current = $this_LOtherOperatorExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpCompare
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getLRelationalExpressionAccess().getLBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getLRelationalExpressionAccess().getFeatureOpCompareParserRuleCall_1_0_0_1_0());
							}
							lv_feature_2_0=ruleOpCompare
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLRelationalExpressionRule());
								}
								set(
									$current,
									"feature",
									lv_feature_2_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.OpCompare");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLRelationalExpressionAccess().getRightOperandLOtherOperatorExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleLOtherOperatorExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLRelationalExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LOtherOperatorExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpCompare
entryRuleOpCompare returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpCompareRule()); }
	iv_ruleOpCompare=ruleOpCompare
	{ $current=$iv_ruleOpCompare.current.getText(); }
	EOF;

// Rule OpCompare
ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
		}
		    |
		(
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
			}
			kw='='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
			}
		)
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleLOtherOperatorExpression
entryRuleLOtherOperatorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLOtherOperatorExpressionRule()); }
	iv_ruleLOtherOperatorExpression=ruleLOtherOperatorExpression
	{ $current=$iv_ruleLOtherOperatorExpression.current; }
	EOF;

// Rule LOtherOperatorExpression
ruleLOtherOperatorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLOtherOperatorExpressionAccess().getLAdditiveExpressionParserRuleCall_0());
		}
		this_LAdditiveExpression_0=ruleLAdditiveExpression
		{
			$current = $this_LAdditiveExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpOther
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getLOtherOperatorExpressionAccess().getLBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getLOtherOperatorExpressionAccess().getFeatureOpOtherParserRuleCall_1_0_0_1_0());
							}
							lv_feature_2_0=ruleOpOther
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLOtherOperatorExpressionRule());
								}
								set(
									$current,
									"feature",
									lv_feature_2_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.OpOther");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLOtherOperatorExpressionAccess().getRightOperandLAdditiveExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleLAdditiveExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLOtherOperatorExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LAdditiveExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpOther
entryRuleOpOther returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpOtherRule()); }
	iv_ruleOpOther=ruleOpOther
	{ $current=$iv_ruleOpOther.current.getText(); }
	EOF;

// Rule OpOther
ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='>'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_0());
			}
			(
				('>')=>
				kw='>'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_0_1());
				}
			)
		)
		    |
		(
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_1_0());
			}
			(
				('<')=>
				kw='<'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_1_1());
				}
			)
		)
	)
;

// Entry rule entryRuleLAdditiveExpression
entryRuleLAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLAdditiveExpressionRule()); }
	iv_ruleLAdditiveExpression=ruleLAdditiveExpression
	{ $current=$iv_ruleLAdditiveExpression.current; }
	EOF;

// Rule LAdditiveExpression
ruleLAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLAdditiveExpressionAccess().getLMultiplicativeExpressionParserRuleCall_0());
		}
		this_LMultiplicativeExpression_0=ruleLMultiplicativeExpression
		{
			$current = $this_LMultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpAdd
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getLAdditiveExpressionAccess().getLBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getLAdditiveExpressionAccess().getFeatureOpAddParserRuleCall_1_0_0_1_0());
							}
							lv_feature_2_0=ruleOpAdd
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLAdditiveExpressionRule());
								}
								set(
									$current,
									"feature",
									lv_feature_2_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.OpAdd");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLAdditiveExpressionAccess().getRightOperandLMultiplicativeExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleLMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLAdditiveExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LMultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpAdd
entryRuleOpAdd returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpAddRule()); }
	iv_ruleOpAdd=ruleOpAdd
	{ $current=$iv_ruleOpAdd.current.getText(); }
	EOF;

// Rule OpAdd
ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
		}
	)
;

// Entry rule entryRuleLMultiplicativeExpression
entryRuleLMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLMultiplicativeExpressionRule()); }
	iv_ruleLMultiplicativeExpression=ruleLMultiplicativeExpression
	{ $current=$iv_ruleLMultiplicativeExpression.current; }
	EOF;

// Rule LMultiplicativeExpression
ruleLMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLMultiplicativeExpressionAccess().getLUnaryOperationParserRuleCall_0());
		}
		this_LUnaryOperation_0=ruleLUnaryOperation
		{
			$current = $this_LUnaryOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpMulti
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getLMultiplicativeExpressionAccess().getLBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getLMultiplicativeExpressionAccess().getFeatureOpMultiParserRuleCall_1_0_0_1_0());
							}
							lv_feature_2_0=ruleOpMulti
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLMultiplicativeExpressionRule());
								}
								set(
									$current,
									"feature",
									lv_feature_2_0,
									"org.eclipse.cdt.linkerscript.LinkerScript.OpMulti");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLMultiplicativeExpressionAccess().getRightOperandLUnaryOperationParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleLUnaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLMultiplicativeExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LUnaryOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpMulti
entryRuleOpMulti returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpMultiRule()); }
	iv_ruleOpMulti=ruleOpMulti
	{ $current=$iv_ruleOpMulti.current.getText(); }
	EOF;

// Rule OpMulti
ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_1());
		}
		    |
		kw='%'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_2());
		}
	)
;

// Entry rule entryRuleLUnaryOperation
entryRuleLUnaryOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLUnaryOperationRule()); }
	iv_ruleLUnaryOperation=ruleLUnaryOperation
	{ $current=$iv_ruleLUnaryOperation.current; }
	EOF;

// Rule LUnaryOperation
ruleLUnaryOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLUnaryOperationAccess().getLUnaryOperationAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLUnaryOperationAccess().getFeatureOpUnaryParserRuleCall_0_1_0());
					}
					lv_feature_1_0=ruleOpUnary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLUnaryOperationRule());
						}
						set(
							$current,
							"feature",
							lv_feature_1_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.OpUnary");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLUnaryOperationAccess().getOperandLUnaryOperationParserRuleCall_0_2_0());
					}
					lv_operand_2_0=ruleLUnaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLUnaryOperationRule());
						}
						set(
							$current,
							"operand",
							lv_operand_2_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LUnaryOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getLUnaryOperationAccess().getLPostfixOperationParserRuleCall_1());
		}
		this_LPostfixOperation_3=ruleLPostfixOperation
		{
			$current = $this_LPostfixOperation_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOpUnary
entryRuleOpUnary returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpUnaryRule()); }
	iv_ruleOpUnary=ruleOpUnary
	{ $current=$iv_ruleOpUnary.current.getText(); }
	EOF;

// Rule OpUnary
ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
		}
		    |
		kw='~'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getTildeKeyword_3());
		}
	)
;

// Entry rule entryRuleLPostfixOperation
entryRuleLPostfixOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLPostfixOperationRule()); }
	iv_ruleLPostfixOperation=ruleLPostfixOperation
	{ $current=$iv_ruleLPostfixOperation.current; }
	EOF;

// Rule LPostfixOperation
ruleLPostfixOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLPostfixOperationAccess().getLPrimaryExpressionParserRuleCall_0());
		}
		this_LPrimaryExpression_0=ruleLPrimaryExpression
		{
			$current = $this_LPrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			((
				(
				)
				(
					(
						ruleOpPostfix
					)
				)
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getLPostfixOperationAccess().getLPostfixOperationOperandAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getLPostfixOperationAccess().getFeatureOpPostfixParserRuleCall_1_0_1_0());
						}
						lv_feature_2_0=ruleOpPostfix
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLPostfixOperationRule());
							}
							set(
								$current,
								"feature",
								lv_feature_2_0,
								"org.eclipse.cdt.linkerscript.LinkerScript.OpPostfix");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleOpPostfix
entryRuleOpPostfix returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpPostfixRule()); }
	iv_ruleOpPostfix=ruleOpPostfix
	{ $current=$iv_ruleOpPostfix.current.getText(); }
	EOF;

// Rule OpPostfix
ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='++'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
		}
		    |
		kw='--'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
		}
	)
;

// Entry rule entryRuleLPrimaryExpression
entryRuleLPrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLPrimaryExpressionRule()); }
	iv_ruleLPrimaryExpression=ruleLPrimaryExpression
	{ $current=$iv_ruleLPrimaryExpression.current; }
	EOF;

// Rule LPrimaryExpression
ruleLPrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLPrimaryExpressionAccess().getLengthCallParserRuleCall_0());
		}
		this_LengthCall_0=ruleLengthCall
		{
			$current = $this_LengthCall_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLPrimaryExpressionAccess().getAlignCallParserRuleCall_1());
		}
		this_AlignCall_1=ruleAlignCall
		{
			$current = $this_AlignCall_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLPrimaryExpressionAccess().getLNumberLiteralParserRuleCall_2());
		}
		this_LNumberLiteral_2=ruleLNumberLiteral
		{
			$current = $this_LNumberLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLPrimaryExpressionAccess().getLParenthesizedExpressionParserRuleCall_3());
		}
		this_LParenthesizedExpression_3=ruleLParenthesizedExpression
		{
			$current = $this_LParenthesizedExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLPrimaryExpressionAccess().getLVariableParserRuleCall_4());
		}
		this_LVariable_4=ruleLVariable
		{
			$current = $this_LVariable_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLVariable
entryRuleLVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLVariableRule()); }
	iv_ruleLVariable=ruleLVariable
	{ $current=$iv_ruleLVariable.current; }
	EOF;

// Rule LVariable
ruleLVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLVariableAccess().getLVariableAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLVariableAccess().getFeatureValidIDParserRuleCall_1_0());
				}
				lv_feature_1_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLVariableRule());
					}
					set(
						$current,
						"feature",
						lv_feature_1_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLParenthesizedExpression
entryRuleLParenthesizedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLParenthesizedExpressionRule()); }
	iv_ruleLParenthesizedExpression=ruleLParenthesizedExpression
	{ $current=$iv_ruleLParenthesizedExpression.current; }
	EOF;

// Rule LParenthesizedExpression
ruleLParenthesizedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getLParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getLParenthesizedExpressionAccess().getLExpressionParserRuleCall_1());
		}
		this_LExpression_1=ruleLExpression
		{
			$current = $this_LExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getLParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleLengthCall
entryRuleLengthCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLengthCallRule()); }
	iv_ruleLengthCall=ruleLengthCall
	{ $current=$iv_ruleLengthCall.current; }
	EOF;

// Rule LengthCall
ruleLengthCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLengthCallAccess().getLengthCallAction_0(),
					$current);
			}
		)
		otherlv_1='LENGTH'
		{
			newLeafNode(otherlv_1, grammarAccess.getLengthCallAccess().getLENGTHKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getLengthCallAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLengthCallAccess().getMemoryValidIDParserRuleCall_3_0());
				}
				lv_memory_3_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLengthCallRule());
					}
					set(
						$current,
						"memory",
						lv_memory_3_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getLengthCallAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleAlignCall
entryRuleAlignCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlignCallRule()); }
	iv_ruleAlignCall=ruleAlignCall
	{ $current=$iv_ruleAlignCall.current; }
	EOF;

// Rule AlignCall
ruleAlignCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAlignCallAccess().getAlignCallAction_0(),
					$current);
			}
		)
		otherlv_1='ALIGN'
		{
			newLeafNode(otherlv_1, grammarAccess.getAlignCallAccess().getALIGNKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getAlignCallAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlignCallAccess().getExpOrAlignLExpressionParserRuleCall_3_0());
				}
				lv_expOrAlign_3_0=ruleLExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlignCallRule());
					}
					set(
						$current,
						"expOrAlign",
						lv_expOrAlign_3_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getAlignCallAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAlignCallAccess().getAlignLExpressionParserRuleCall_4_1_0());
					}
					lv_align_5_0=ruleLExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlignCallRule());
						}
						set(
							$current,
							"align",
							lv_align_5_0,
							"org.eclipse.cdt.linkerscript.LinkerScript.LExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getAlignCallAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleLNumberLiteral
entryRuleLNumberLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLNumberLiteralRule()); }
	iv_ruleLNumberLiteral=ruleLNumberLiteral
	{ $current=$iv_ruleLNumberLiteral.current; }
	EOF;

// Rule LNumberLiteral
ruleLNumberLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLNumberLiteralAccess().getLNumberLiteralAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
				}
				lv_value_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLNumberLiteralRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.cdt.linkerscript.LinkerScript.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getValidIDRule()); }
	iv_ruleValidID=ruleValidID
	{ $current=$iv_ruleValidID.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall_0());
		}
		    |
		kw='MEMORY'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidIDAccess().getMEMORYKeyword_1());
		}
		    |
		kw='o'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidIDAccess().getOKeyword_2());
		}
		    |
		kw='org'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidIDAccess().getOrgKeyword_3());
		}
		    |
		kw='l'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidIDAccess().getLKeyword_4());
		}
		    |
		kw='len'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidIDAccess().getLenKeyword_5());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleWildID
entryRuleWildID returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getWildIDRule()); }
	iv_ruleWildID=ruleWildID
	{ $current=$iv_ruleWildID.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule WildID
ruleWildID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getWildIDAccess().getAsteriskKeyword_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getWildIDAccess().getValidIDParserRuleCall_1());
		}
		this_ValidID_1=ruleValidID
		{
			$current.merge(this_ValidID_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleValidFunc
entryRuleValidFunc returns [String current=null]:
	{ newCompositeNode(grammarAccess.getValidFuncRule()); }
	iv_ruleValidFunc=ruleValidFunc
	{ $current=$iv_ruleValidFunc.current.getText(); }
	EOF;

// Rule ValidFunc
ruleValidFunc returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='LENGTH'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidFuncAccess().getLENGTHKeyword_0());
		}
		    |
		kw='ALIGN'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getValidFuncAccess().getALIGNKeyword_1());
		}
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_DEC_0=RULE_DEC
		{
			$current.merge(this_DEC_0);
		}
		{
			newLeafNode(this_DEC_0, grammarAccess.getNumberAccess().getDECTerminalRuleCall_0());
		}
		    |
		this_HEX_1=RULE_HEX
		{
			$current.merge(this_HEX_1);
		}
		{
			newLeafNode(this_HEX_1, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_1());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

RULE_DEC : ('0'..'9')+ ('d'|'D'|'o'|'O'|'b'|'B'|'m'|'M'|'k'|'K')?;

RULE_HEX : (('$'|'0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F')+ ('m'|'M'|'k'|'K')?|('0'..'9'|'a'..'f'|'A'..'F')+ ('d'|'D'|'o'|'O'|'b'|'B'|'x'|'X'|'h'|'H'));

RULE_ID : (('a'..'z'|'A'..'Z'|'.'|'/'|'\\'|'$'|'_'|'~'|'?'|'^'|'!') ('a'..'z'|'A'..'Z'|'.'|'/'|'\\'|'$'|'_'|'~'|'*'|'?'|'^'|'!'|'0'..'9'|'-'|'+'|':'|'['|']')*|'*'|'"' ( options {greedy=false;} : . )*'"');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

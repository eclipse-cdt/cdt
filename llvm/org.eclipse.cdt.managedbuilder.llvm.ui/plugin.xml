<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension
         id="org.eclipse.cdt.managedbuilder.llvm.ui.buildDefinitions"
         name="%ToolName.linker.llvm.c"
         point="org.eclipse.cdt.managedbuilder.core.buildDefinitions">
      <managedBuildRevision
            fileVersion="4.0.0">
      </managedBuildRevision>
      <tool
            advancedInputCategory="true"
            command="llvm-ld"
            commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG}${OUTPUT_PREFIX} ${OUTPUT} ${INPUTS}"
            errorParsers="org.eclipse.cdt.core.GLDErrorParser"
            id="cdt.managedbuild.tool.llvm.c.linker"
            isAbstract="true"
            name="%ToolName.linker.llvm.c"
            natureFilter="both"
            outputFlag="-o">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildArtefactType">
               <value
                     id="org.eclipse.cdt.managedbuilder.llvm.ui.buildArtefactType.lli">
               </value>
            </property>
         </supportedProperties>
         <envVarBuildPath
               pathType="buildpathLibrary"
               variableList="LIBRARY_PATH">
         </envVarBuildPath>
         <optionCategory
               id="llvm.c.link.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.llvm.c.linker">
         </optionCategory>
         <option
               category="llvm.c.link.category.general"
               command="-stats"
               defaultValue="false"
               id="llvm.c.link.option.stats"
               name="%Option.Posix.Linker.Stats"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.general"
               command="-v"
               defaultValue="false"
               id="llvm.c.link.option.verbose"
               name="%Option.Posix.Linker.Verbose"
               tip="%option.tip"
               valueType="boolean">
         </option>
         <optionCategory
               id="llvm.c.link.category.libs"
               name="%OptionCategory.Libs"
               owner="cdt.managedbuild.tool.llvm.c.linker">
         </optionCategory>
         <option
               browseType="none"
               category="llvm.c.link.category.libs"
               command="-l"
               id="llvm.c.link.option.libs"
               name="%Option.Posix.Libs"
               valueType="libs">
         </option>
         <option
               browseType="directory"
               category="llvm.c.link.category.libs"
               command="-L"
               id="llvm.c.link.option.paths"
               name="%Option.Posix.Libsearch"
               valueType="libPaths">
         </option>
         <optionCategory
               id="llvm.c.link.category.optimizations"
               name="%OptionCategory.Optimizations"
               owner="cdt.managedbuild.tool.llvm.c.linker">
         </optionCategory>
         <option
               category="llvm.c.link.category.optimizations"
               command="-strip-all"
               defaultValue="false"
               id="llvm.c.link.option.strip.debug"
               name="%Option.Posix.Linker.Strip"
               tip="%option.tip.0"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.optimizations"
               command="-strip-debug"
               defaultValue="false"
               id="llvm.c.link.option.strip"
               name="%Option.Posix.Linker.Strip.Debug"
               tip="%option.tip.1"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.optimizations"
               command="-verify-each"
               defaultValue="false"
               id="llvm.c.link.option.verification"
               name="%Option.Posix.Linker.Verification"
               tip="%option.tip.2"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.optimizations"
               command="-disable-internalize"
               defaultValue="false"
               id="llvm.c.link.option.disable_internalize"
               name="%Option.Posix.Linker.DisableInternalize"
               tip="%option.tip.3"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.optimizations"
               command="-disable-opt"
               defaultValue="false"
               id="llvm.c.link.option.disable_optimization"
               name="%Option.Posix.Linker.DisableOptimization"
               tip="%option.tip.4"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.optimizations"
               command="-disable-inlining"
               defaultValue="false"
               id="llvm.c.link.option.disable_inhiling"
               name="%Option.Posix.Linker.DisableInhiling"
               tip="%option.tip.5"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.other"
               id="llvm.c.link.option.ldflags"
               name="%Option.Posix.Linker.Flags"
               valueType="string">
         </option>
         <option
               category="llvm.c.link.category.llvmOptions"
               command="-native"
               defaultValue="false"
               id="llvm.c.link.option.native"
               isAbstract="false"
               name="%Option.Posix.Linker.native"
               resourceFilter="all"
               tip="%option.tip.6"
               valueType="boolean">
         </option>
         <option
               category="llvm.c.link.category.llvmOptions"
               command="-native-cbe"
               defaultValue="false"
               id="llvm.c.link.option.nativeCBackEnd"
               isAbstract="false"
               name="%Option.Posix.Linker.nativeCBackend"
               resourceFilter="all"
               tip="%option.tip.7"
               valueType="boolean">
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="false">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.exe">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               browseType="file"
               category="llvm.c.link.category.other"
               id="llvm.c.link.option.userobjs"
               name="%Option.Posix.UserBcs"
               valueType="userObjs">
         </option>
         <optionCategory
               id="llvm.c.link.category.llvmOptions"
               name="%Option.Posix.Linker.LlvmOptions"
               owner="cdt.managedbuild.tool.llvm.c.linker">
         </optionCategory>
         <option
               category="llvm.c.link.category.llvmOptions"
               command="-link-as-library"
               defaultValue="false"
               id="llvm.c.link.option.linkaslibrary"
               isAbstract="false"
               name="%Option.Posix.Linker.link_as_library"
               tip="%option.tip.8"
               valueType="boolean">
            <enablement
                  attribute="defaultValue"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="true">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
               </checkBuildProperty>
            </enablement>
         </option>
         <optionCategory
               id="llvm.c.link.category.other"
               name="%OptionCategory.Misc"
               owner="cdt.managedbuild.tool.llvm.c.linker">
         </optionCategory>
         <inputType
               buildVariable="BCS"
               dependencyCalculator="org.eclipse.cdt.managedbuilder.llvm.makegen.LlvmDependencyCalculator2"
               id="cdt.managedbuild.tool.llvm.c.linker.input"
               multipleOfType="true"
               primaryInput="true"
               sourceContentType="org.eclipse.cdt.managedbuilder.llvm.ui.llvmBytecode"
               sources="bc">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
         <outputType
               buildVariable="LLVM_BC_EXECUTABLES"
               id="cdt.managedbuild.tool.llvm.c.linker.output.exe.bc"
               namePattern="%.exe.bc"
               outputs="exe.bc"
               primaryOutput="true">
            <enablement
                  type="ALL">
               <checkOption
                     optionId="llvm.c.link.option.linkaslibrary"
                     value="false">
               </checkOption>
            </enablement>
         </outputType>
         <outputType
               buildVariable="LLVM_EXECUTABLES"
               id="cdt.managedbuild.tool.llvm.c.linker.output.exe"
               outputs="exe">
            <enablement
                  type="ALL">
               <checkOption
                     optionId="llvm.c.link.option.native"
                     value="false">
               </checkOption>
            </enablement>
         </outputType>
         <outputType
               buildVariable="LIBRARIES"
               id="cdt.managedbuild.tool.llvm.c.linker.output.so"
               outputPrefix="lib"
               outputs="so">
            <enablement
                  type="ALL">
               <checkOption
                     optionId="llvm.c.link.option.linkaslibrary"
                     value="true">
               </checkOption>
            </enablement>
         </outputType>
      </tool>
      <tool
            command="llvm-ar"
            id="cdt.managedbuild.tool.llvm.archiver"
            isAbstract="true"
            name="%ToolName.archiver.llvm"
            natureFilter="both">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildArtefactType">
               <value
                     id="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
               </value>
            </property>
         </supportedProperties>
         <optionCategory
               id="llvm.lib.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.llvm.archiver">
         </optionCategory>
         <option
               category="llvm.lib.category.general"
               defaultValue="r"
               id="llvm.both.lib.option.flags"
               name="%Option.Llvm.Archiver.Flags"
               valueType="string">
         </option>
         <optionCategory
               id="llvm.lib.category.options"
               name="%OptionCategory.Options"
               owner="cdt.managedbuild.tool.llvm.archiver">
         </optionCategory>
         <option
               category="llvm.lib.category.options"
               command="d"
               id="llvm.lib.option.delete"
               isAbstract="false"
               name="%Option.Posix.Archiver.delete"
               resourceFilter="all"
               tip="%option.tip.9"
               valueType="boolean">
         </option>
         <option
               category="llvm.lib.category.options"
               command="t"
               id="llvm.lib.option.print.contents"
               isAbstract="false"
               name="%Option.Posix.Archiver.print.contents"
               resourceFilter="all"
               valueType="boolean">
         </option>
         <inputType
               buildVariable="BCS"
               dependencyCalculator="org.eclipse.cdt.managedbuilder.llvm.makegen.LlvmDependencyCalculator2"
               id="cdt.managedbuild.tool.llvm.archiver.input"
               multipleOfType="true"
               sourceContentType="org.eclipse.cdt.managedbuilder.llvm.ui.llvmBytecode"
               sources="bc">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
         <outputType
               buildVariable="ARCHIVES"
               id="cdt.managedbuild.tool.llvm.archiver.output"
               nameProvider="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuLinkOutputNameProvider"
               outputPrefix="lib"
               outputs="a">
         </outputType>
      </tool>
      <tool
            command="llvm-as"
            errorParsers="org.eclipse.cdt.core.GASErrorParser"
            id="cdt.managedbuild.tool.llvm.assembler"
            isAbstract="true"
            name="%ToolName.assembler.llvm"
            natureFilter="both"
            outputFlag="-o">
         <optionCategory
               id="llvm.asm.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.llvm.assembler">
         </optionCategory>
         <option
               category="llvm.asm.category.general"
               id="llvm.both.asm.option.flags"
               name="%Option.Llvm.Assembler.Flags"
               valueType="string">
         </option>
         <option
               category="llvm.asm.category.general"
               command="-W"
               defaultValue="false"
               id="llvm.both.asm.option.warnings.nowarn"
               name="%Option.Llvm.Assembler.warn.suppress"
               valueType="boolean">
         </option>
         <option
               category="llvm.asm.category.general"
               command="-v"
               defaultValue="false"
               id="llvm.both.asm.option.version"
               name="%Option.Llvm.Assembler.version"
               valueType="boolean">
         </option>
         <inputType
               id="cdt.managedbuild.tool.llvm.assembler.input"
               sourceContentType="org.eclipse.cdt.managedbuilder.llvm.ui.llvmAssemblySource"
               sources="ll">
         </inputType>
         <outputType
               buildVariable="BCS"
               id="cdt.managedbuild.tool.llvm.assembler.output"
               outputs="bc">
         </outputType>
      </tool>
      <tool
            command="llc"
            id="cdt.managedbuild.tool.llvm.llc"
            isAbstract="true"
            name="%ToolName.llc.llvm"
            natureFilter="both"
            outputFlag="-o">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildType">
               <value
                     id="org.eclipse.cdt.build.core.buildType.debug">
               </value>
               <value
                     id="org.eclipse.cdt.build.core.buildType.release">
               </value>
            </property>
         </supportedProperties>
         <optionCategory
               id="llvm.llc.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.llvm.llc">
         </optionCategory>
         <option
               category="llvm.llc.category.general"
               id="llvm.both.llc.option.flags"
               name="%Option.Llvm.Llc.Flags"
               valueType="string">
         </option>
         <optionCategory
               id="llvm.llc.category.options"
               name="%OptionCategory.Options"
               owner="cdt.managedbuild.tool.llvm.llc">
         </optionCategory>
         <option
               category="llvm.llc.category.options"
               command="c"
               id="llvm.both.llc.option.emitc"
               name="%Option.Llvm.Llc.EmitC"
               valueType="boolean">
         </option>
         <option
               category="llvm.llc.category.options"
               command="--stats"
               id="llvm.both.llc.option.printStats"
               name="%Option.Llvm.printStats"
               tip="%option.tip.10"
               valueType="boolean">
         </option>
         <option
               category="llvm.llc.category.options"
               command="-march=${value}"
               id="llvm.both.llc.option.arch"
               name="%Option.Llvm.Llc.Arch"
               valueType="string">
         </option>
         <optionCategory
               id="llvm.llc.category.options.optimization"
               name="%OptionCategory.Optimize"
               owner="cdt.managedbuild.tool.llvm.llc">
         </optionCategory>
         <option
               category="llvm.llc.category.options.optimization"
               id="llvm.llc.option.optimization.level"
               name="%Option.Posix.OptLevel"
               valueType="enumerated">
            <enumeratedOptionValue
                  command="-O0"
                  id="llvm.llc.option.optimization.level.none"
                  name="%Option.Posix.Optimize.None">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O1"
                  id="llvm.llc.option.optimization.level.optimize"
                  name="%Option.Posix.Optimize.Optimize">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O2"
                  id="llvm.llc.option.optimization.level.more"
                  isDefault="true"
                  name="%Option.Posix.Optimize.More">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O3"
                  id="llvm.llc.option.optimization.level.most"
                  name="%Option.Posix.Optimize.Most">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O4"
                  id="llvm.llc.option.optimization.level.runtime"
                  name="%Option.Posix.Optimize.Runtime">
            </enumeratedOptionValue>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="llvm.c_cpp.compiler.optimization.level.most">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.release">
               </checkBuildProperty>
            </enablement>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="llvm.c_cpp.compiler.optimization.level.none">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.debug">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               category="llvm.llc.category.options.optimization"
               command="--disable-excess-fp-precision"
               id="llvm.llc.option.optimization.disableExcessPrecisionOptimization"
               isAbstract="false"
               name="%Option.Llvm.llc.optimization.disableExcessPrecisionOptimization"
               tip="%option.tip.11"
               valueType="boolean">
         </option>
         <option
               category="llvm.llc.category.options.optimization"
               command="--disable-fp-elim"
               id="llvm.llc.option.optimization.disableFramePointerElimOptimization"
               isAbstract="false"
               name="%Option.Llvm.llc.optimization.disableFramePointerEliminationOptimization"
               valueType="boolean">
         </option>
         <inputType
               buildVariable="BCS"
               dependencyCalculator="org.eclipse.cdt.managedbuilder.llvm.makegen.LlvmDependencyCalculator2"
               id="cdt.managedbuild.tool.llvm.llc.input"
               multipleOfType="true"
               primaryInput="true"
               sourceContentType="org.eclipse.cdt.managedbuilder.llvm.ui.llvmBytecode"
               sources="bc">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
         <outputType
               buildVariable="org.eclipse.cdt.managedbuilder.llvm.ui.llvmAssemblyCode"
               id="cdt.managedbuild.tool.llvm.llc.output.s"
               outputs="s">
         </outputType>
      </tool>
      <tool
            command="lli"
            id="cdt.managedbuild.tool.llvm.lli"
            isAbstract="true"
            name="%ToolName.lli.llvm"
            natureFilter="both">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildType">
               <value
                     id="org.eclipse.cdt.build.core.buildType.debug">
               </value>
               <value
                     id="org.eclipse.cdt.build.core.buildType.release">
               </value>
            </property>
         </supportedProperties>
         <optionCategory
               id="llvm.lli.category.general"
               name="%OptionCategory.General"
               owner="cdt.managedbuild.tool.llvm.lli">
         </optionCategory>
         <option
               category="llvm.lli.category.general"
               id="llvm.both.lli.option.flags"
               name="%Option.Llvm.Lli.Flags"
               valueType="string">
         </option>
         <optionCategory
               id="llvm.lli.category.options"
               name="%OptionCategory.Options"
               owner="cdt.managedbuild.tool.llvm.lli">
         </optionCategory>
         <option
               category="llvm.lli.category.options"
               command="-stats"
               id="llvm.both.lli.option.printStats"
               name="%Option.Llvm.printStats"
               tip="%option.tip.12"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.options"
               id="llvm.both.lli.option.interpreter"
               name="%Option.Llvm.Lli.ForceInterpreter"
               valueType="enumerated">
            <enumeratedOptionValue
                  command="-force-interpreter=true"
                  id="llvm.both.lli.option.interpreter.true"
                  name="%enumeratedOptionValue.name">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-force-interpreter=false"
                  id="llvm.both.lli.option.interpreter.false"
                  isDefault="true"
                  name="%enumeratedOptionValue.name.0">
            </enumeratedOptionValue>
         </option>
         <optionCategory
               id="llvm.lli.category.FloatingPointOptions"
               name="%OptionCategory.FloatingPointOptions"
               owner="cdt.managedbuild.tool.llvm.lli">
         </optionCategory>
         <option
               category="llvm.lli.category.FloatingPointOptions"
               command="-soft-float"
               id="llvm.lli.category.FloatingPointOptions.soft-float"
               name="%Option.Llvm.Lli.soft-float"
               resourceFilter="all"
               tip="%option.tip.13"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.FloatingPointOptions"
               command="-enable-unsafe-fp-math"
               id="llvm.lli.category.FloatingPointOptions.enable-unsafe-fp-math"
               name="%Option.Llvm.Lli.enable-unsafe-fp-math"
               resourceFilter="all"
               tip="%option.tip.14"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.FloatingPointOptions"
               command="-disable-excess-fp-precision"
               id="llvm.lli.category.FloatingPointOptions.disable-excess-fp-precision"
               name="%Option.Llvm.Lli.disable-excess-fp-precision"
               resourceFilter="all"
               tip="%option.tip.15"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.FloatingPointOptions"
               command="-enable-finite-only-fp-math"
               id="llvm.lli.category.FloatingPointOptions.enable-finite-only-fp-math"
               name="%Option.Llvm.Lli.enable-finite-only-fp-math"
               resourceFilter="all"
               tip="%option.tip.16"
               valueType="boolean">
         </option>
         <optionCategory
               id="llvm.lli.category.CodeGenerationOptions"
               name="%OptionCategory.CodeGenerationOptions"
               owner="cdt.managedbuild.tool.llvm.lli">
         </optionCategory>
         <option
               category="llvm.lli.category.CodeGenerationOptions"
               command="-disable-post-RA-scheduler"
               id="llvm.lli.category.CodeGenerationOptions.enable-correct-eh-support"
               name="%Option.Llvm.Lli.enable-correct-eh-support"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.CodeGenerationOptions"
               command="-jit-enable-eh"
               id="llvm.lli.category.CodeGenerationOptions.jit-enable-eh"
               name="%Option.Llvm.Lli.jit-enable-eh"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.CodeGenerationOptions"
               command="-disable-post-RA-scheduler"
               id="llvm.lli.category.CodeGenerationOptions.disable-post-RA-scheduler"
               name="%Option.Llvm.Lli.disable-post-RA-scheduler"
               valueType="boolean">
         </option>
         <option
               category="llvm.lli.category.CodeGenerationOptions"
               command="-disable-spill-fusing"
               id="llvm.lli.category.CodeGenerationOptions.disable-spill-fusing"
               name="%Option.Llvm.Lli.disable-spill-fusing"
               valueType="boolean">
         </option>
         <inputType
               buildVariable="BCS"
               dependencyCalculator="org.eclipse.cdt.managedbuilder.llvm.makegen.LlvmDependencyCalculator2"
               id="cdt.managedbuild.tool.llvm.lli.input"
               multipleOfType="true"
               primaryInput="true"
               sourceContentType="org.eclipse.cdt.managedbuilder.llvm.ui.llvmBytecode"
               sources="bc">
            <additionalInput
                  kind="additionalinputdependency"
                  paths="$(USER_OBJS)">
            </additionalInput>
            <additionalInput
                  kind="additionalinput"
                  paths="$(LIBS)">
            </additionalInput>
         </inputType>
      </tool>
      <tool
            errorParsers="org.eclipse.cdt.core.GCCErrorParser"
            id="cdt.managedbuild.tool.llvm.c_cpp.compiler"
            isAbstract="true"
            name="%ToolName.compiler.llvm.abstract"
            outputFlag="-o">
         <supportedProperties>
            <property
                  id="org.eclipse.cdt.build.core.buildType">
               <value
                     id="org.eclipse.cdt.build.core.buildType.debug">
               </value>
               <value
                     id="org.eclipse.cdt.build.core.buildType.release">
               </value>
            </property>
         </supportedProperties>
         <envVarBuildPath
               pathType="buildpathInclude"
               variableList="CPATH">
         </envVarBuildPath>
         <optionCategory
               id="cdt.managedbuild.tool.llvm.c_cpp.category.dialect"
               name="%OptionCategory.Dialect"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <optionCategory
               id="llvm.c_cpp.compiler.category.preprocessor"
               name="%OptionCategory.Preproc"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <option
               category="llvm.c_cpp.compiler.category.preprocessor"
               command="-E"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.preprocessor.preprocess"
               name="%Option.Posix.PreprocOnly"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.preprocessor"
               command="-D"
               id="llvm.c_cpp.compiler.option.preprocessor.def"
               name="%Option.Posix.DefSym"
               valueType="definedSymbols">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.preprocessor"
               command="-U"
               id="llvm.c_cpp.compiler.option.preprocessor.undef"
               name="%Option.Posix.UndefSym"
               valueType="undefDefinedSymbols">
         </option>
         <optionCategory
               id="llvm.c_cpp.compiler.category.dirs"
               name="%OptionCategory.Includes"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <option
               browseType="directory"
               category="llvm.c_cpp.compiler.category.dirs"
               command="-I"
               id="llvm.c_cpp.compiler.option.include.paths"
               name="%Option.Posix.InclPaths"
               valueType="includePath">
         </option>
         <optionCategory
               id="llvm.c_cpp.compiler.category.optimization"
               name="%OptionCategory.Optimize"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <option
               category="llvm.c_cpp.compiler.category.optimization"
               id="llvm.c_cpp.compiler.option.optimization.level"
               name="%Option.Posix.OptLevel"
               valueType="enumerated">
            <enumeratedOptionValue
                  command="-O0"
                  id="llvm.c_cpp.compiler.optimization.level.none"
                  name="%Option.Posix.Optimize.None">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O1"
                  id="llvm.c_cpp.compiler.optimization.level.optimize"
                  name="%Option.Posix.Optimize.Optimize">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O2"
                  id="llvm.c_cpp.compiler.optimization.level.more"
                  isDefault="true"
                  name="%Option.Posix.Optimize.More">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O3"
                  id="llvm.c_cpp.compiler.optimization.level.most"
                  name="%Option.Posix.Optimize.Most">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-O4"
                  id="llvm.c_cpp.compiler.optimization.level.runtime"
                  name="%Option.Posix.Optimize.Runtime">
            </enumeratedOptionValue>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="llvm.c_cpp.compiler.optimization.level.most">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.release">
               </checkBuildProperty>
            </enablement>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="llvm.c_cpp.compiler.optimization.level.none">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.debug">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               category="llvm.c_cpp.compiler.category.optimization"
               id="llvm.c_cpp.compiler.option.optimization.flags"
               name="%Option.Posix.Optimize.Flags"
               value="-emit-llvm"
               valueType="string">
         </option>
         <optionCategory
               id="llvm.c_cpp.compiler.category.debug"
               name="%OptionCategory.Debug"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <option
               category="llvm.c_cpp.compiler.category.debug"
               id="llvm.c_cpp.compiler.option.debugging.level"
               name="%Option.Posix.DebugLevel"
               valueType="enumerated">
            <enumeratedOptionValue
                  id="llvm.c_cpp.compiler.debugging.level.none"
                  isDefault="false"
                  name="%Option.Posix.Debug.None">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-g1"
                  id="llvm.c_cpp.compiler.debugging.level.minimal"
                  name="%Option.Posix.Debug.Min">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-g"
                  id="llvm.c_cpp.compiler.debugging.level.default"
                  isDefault="true"
                  name="%Option.Posix.Debug.Def">
            </enumeratedOptionValue>
            <enumeratedOptionValue
                  command="-g3"
                  id="llvm.c_cpp.compiler.debugging.level.max"
                  isDefault="false"
                  name="%Option.Posix.Debug.Max">
            </enumeratedOptionValue>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="llvm.c_cpp.compiler.debugging.level.none">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.release">
               </checkBuildProperty>
            </enablement>
            <enablement
                  attribute="value"
                  extensionAdjustment="false"
                  type="CONTAINER_ATTRIBUTE"
                  value="llvm.c_cpp.compiler.debugging.level.max">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildType"
                     value="org.eclipse.cdt.build.core.buildType.debug">
               </checkBuildProperty>
            </enablement>
         </option>
         <option
               category="llvm.c_cpp.compiler.category.debug"
               id="llvm.c_cpp.compiler.option.debugging.other"
               name="%Option.Posix.Debug.Other"
               valueType="string">
         </option>
         <optionCategory
               id="llvm.c_cpp.compiler.category.warnings"
               name="%OptionCategory.Warn"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-fsyntax-only"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.syntax"
               name="%Option.Posix.Warn.Syntax"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-pedantic"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.pedantic"
               name="%Option.Posix.Warn.Pedandic"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-pedantic-errors"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.pedantic.error"
               name="%Option.Posix.Warn.PedErrors"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-w"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.nowarn"
               name="%Option.Posix.Warn.nowarn"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-Wall"
               defaultValue="true"
               id="llvm.c_cpp.compiler.option.warnings.allwarn"
               name="%Option.Posix.Warn.allwarn"
               valueType="boolean">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.warnings"
               command="-Werror"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.warnings.toerrors"
               name="%Option.Posix.Warn.toerrs"
               valueType="boolean">
         </option>
         <optionCategory
               id="llvm.c_cpp.compiler.category.other"
               name="%OptionCategory.Misc"
               owner="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         </optionCategory>
         <option
               category="llvm.c_cpp.compiler.category.other"
               defaultValue="-c -fmessage-length=0"
               id="llvm.c_cpp.compiler.option.misc.other"
               name="%Option.OtherFlags"
               valueType="string">
         </option>
         <option
               category="llvm.c_cpp.compiler.category.other"
               command="-v"
               defaultValue="false"
               id="llvm.c_cpp.compiler.option.other.verbose"
               name="%Option.Posix.Verbose"
               valueType="boolean">
         </option>
         <outputType
               buildVariable="BCS"
               id="cdt.managedbuild.tool.llvm.c_cpp.compiler.output"
               outputs="bc">
         </outputType>
      </tool>
      <tool
            id="cdt.managedbuild.tool.llvm.c.abstract.compiler"
            isAbstract="true"
            name="%ToolName.compiler.llvm.c.abstract"
            natureFilter="both"
            superClass="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         <envVarBuildPath
               buildPathResolver="org.eclipse.cdt.managedbuilder.gnu.cygwin.CygwinPathResolver"
               pathType="buildpathInclude"
               variableList="CPATH,C_INCLUDE_PATH">
         </envVarBuildPath>
         <option
               category="cdt.managedbuild.tool.llvm.c_cpp.category.dialect"
               id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std"
               superClass="gnu.c.compiler.option.dialect.std">
         </option>
         <option
               category="cdt.managedbuild.tool.llvm.c_cpp.category.dialect"
               id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.flags"
               superClass="gnu.c.compiler.option.dialect.flags">
         </option>
         <inputType
               dependencyCalculator="org.eclipse.cdt.managedbuilder.llvm.makegen.LlvmDependencyCalculator2"
               dependencyContentType="org.eclipse.cdt.core.cHeader"
               dependencyExtensions="h"
               id="cdt.managedbuild.tool.llvm.c.compiler.input"
               languageId="org.eclipse.cdt.core.gcc"
               sourceContentType="org.eclipse.cdt.core.cSource"
               sources="c">
         </inputType>
      </tool>
      <tool
            id="cdt.managedbuild.tool.llvm.cpp.abstract.compiler"
            isAbstract="true"
            name="%ToolName.compiler.llvm.cpp.abstract"
            natureFilter="ccnature"
            superClass="cdt.managedbuild.tool.llvm.c_cpp.compiler">
         <envVarBuildPath
               buildPathResolver="org.eclipse.cdt.managedbuilder.gnu.cygwin.CygwinPathResolver"
               pathType="buildpathInclude"
               variableList="CPATH,CPLUS_INCLUDE_PATH">
         </envVarBuildPath>
         <option
               category="cdt.managedbuild.tool.llvm.c_cpp.category.dialect"
               id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std"
               superClass="gnu.cpp.compiler.option.dialect.std">
         </option>
         <option
               category="cdt.managedbuild.tool.llvm.c_cpp.category.dialect"
               id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.flags"
               superClass="gnu.cpp.compiler.option.dialect.flags">
         </option>
         <inputType
               dependencyCalculator="org.eclipse.cdt.managedbuilder.llvm.makegen.LlvmDependencyCalculator2"
               dependencyContentType="org.eclipse.cdt.core.cxxHeader"
               dependencyExtensions="h,H,hpp"
               id="cdt.managedbuild.tool.llvm.cpp.compiler.input"
               languageId="org.eclipse.cdt.core.g++"
               sourceContentType="org.eclipse.cdt.core.cxxSource"
               sources="c,C,cc,cxx,cpp">
         </inputType>
      </tool>
      <tool
            command="clang"
            id="cdt.managedbuild.tool.llvm.c.compiler"
            isAbstract="true"
            name="%ToolName.compiler.llvm.c"
            natureFilter="both"
            superClass="cdt.managedbuild.tool.llvm.c.abstract.compiler">
      </tool>
      <tool
            command="clang++"
            id="cdt.managedbuild.tool.llvm.cpp.compiler"
            name="%ToolName.compiler.llvm.cpp"
            isAbstract="true"
            natureFilter="ccnature"
            superClass="cdt.managedbuild.tool.llvm.cpp.abstract.compiler">
      </tool>
      <tool
            command="llvm-gcc"
            id="cdt.managedbuild.tool.llvm.gcc.compiler"
            isAbstract="true"
            name="%ToolName.compiler.llvm.gcc"
            natureFilter="both"
            superClass="cdt.managedbuild.tool.llvm.c.abstract.compiler">
      </tool>
      <tool
            command="llvm-g++"
            id="cdt.managedbuild.tool.llvm.g++.compiler"
            isAbstract="true"
            name="%ToolName.compiler.llvm.g++"
            natureFilter="ccnature"
            superClass="cdt.managedbuild.tool.llvm.cpp.abstract.compiler">
      </tool>
      <tool
            command="clang"
            id="cdt.managedbuild.tool.llvm.clang.c.linker"
            isAbstract="true"
            name="%ToolName.linker.llvm.c"
            natureFilter="cnature"
            superClass="cdt.managedbuild.tool.llvm.c.linker">
      </tool>
      <tool
            command="clang++"
            id="cdt.managedbuild.tool.llvm.clang.cpp.linker"
            isAbstract="true"
            name="%ToolName.linker.llvm.cpp"
            natureFilter="ccnature"
            superClass="cdt.managedbuild.tool.llvm.c.linker">
      </tool>
      <tool
            command="llvm-gcc"
            id="cdt.managedbuild.tool.llvm.gcc.linker"
            isAbstract="true"
            name="%ToolName.linker.llvm.gcc"
            natureFilter="cnature"
            superClass="cdt.managedbuild.tool.llvm.c.linker">
      </tool>
      <tool
            command="llvm-g++"
            id="cdt.managedbuild.tool.llvm.g++.linker"
            isAbstract="true"
            name="%ToolName.linker.llvm.g++"
            natureFilter="ccnature"
            superClass="cdt.managedbuild.tool.llvm.c.linker">
      </tool>
      <toolChain
            archList="all"
            configurationEnvironmentSupplier="org.eclipse.cdt.managedbuilder.llvm.ui.LlvmEnvironmentVariableSupplier"
            id="cdt.managedbuild.toolchain.llvm.base"
            isAbstract="true"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.llvm.ui.LlvmIsToolChainSupported"
            name="%ToolChainName.llvm"
            osList="all"
            targetTool="cdt.managedbuild.tool.llvm.archiver">
         <builder
               id="cdt.managedbuild.target.llvm.builder.base"
               isAbstract="true"
               superClass="org.eclipse.cdt.build.core.internal.builder">
         </builder>
         <tool
               id="cdt.managedbuild.tool.llvm.assembler.base"
               isAbstract="true"
               name="%ToolName.assembler.llvm"
               superClass="cdt.managedbuild.tool.llvm.assembler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.archiver.base"
               isAbstract="true"
               name="%ToolName.archiver.llvm"
               superClass="cdt.managedbuild.tool.llvm.archiver">
            <enablement
                  type="ALL">
               <checkBuildProperty
                     property="org.eclipse.cdt.build.core.buildArtefactType"
                     value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
               </checkBuildProperty>
            </enablement>
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.clang.base"
            isAbstract="true"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector"
            name="%ToolChainName.llvm.clang"
            osList="all"
            secondaryOutputs="cdt.managedbuild.tool.llvm.c.linker.output.exe.bc"
            superClass="cdt.managedbuild.toolchain.llvm.base"
            targetTool="cdt.managedbuild.tool.llvm.cpp.linker.base;cdt.managedbuild.tool.llvm.c.linker.base">
         <tool
               id="cdt.managedbuild.tool.llvm.c.compiler.base"
               isAbstract="true"
               name="%ToolName.compiler.llvm.c"
               superClass="cdt.managedbuild.tool.llvm.c.compiler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.cpp.compiler.base"
               isAbstract="true"
               name="%ToolName.compiler.llvm.cpp"
               superClass="cdt.managedbuild.tool.llvm.cpp.compiler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.c.linker.base"
               isAbstract="true"
               name="%ToolName.linker.llvm.c"
               natureFilter="cnature"
               superClass="cdt.managedbuild.tool.llvm.clang.c.linker">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.cpp.linker.base"
               isAbstract="true"
               name="%ToolName.linker.llvm.cpp"
               natureFilter="ccnature"
               superClass="cdt.managedbuild.tool.llvm.clang.cpp.linker">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
            <option
                  id="llvm.c.link.base.option.ldflags"
                  isAbstract="true"
                  name="%Option.Posix.Linker.Flags"
                  resourceFilter="all"
                  superClass="llvm.c.link.option.ldflags"
                  valueType="string">
            </option>
         </tool>
      </toolChain>         
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.clang.linux.base"
            isAbstract="false"
            name="%ToolChainName.llvm.linux"
            osList="linux,hpux,aix,qnx"
            superClass="cdt.managedbuild.toolchain.llvm.clang.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.ELF"
               id="cdt.managedbuild.target.llvm.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="linux,hpux,aix,qnx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.clang.macosx.base"
            isAbstract="false"
            name="%ToolChainName.llvm.macosx"
            osList="macosx"
            superClass="cdt.managedbuild.toolchain.llvm.clang.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.MachO64"
               id="cdt.managedbuild.target.llvm.macosx.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="macosx">
         </targetPlatform>
      </toolChain>              
      <toolChain
            archList="all"
            configurationEnvironmentSupplier="org.eclipse.cdt.managedbuilder.gnu.cygwin.GnuCygwinConfigurationEnvironmentSupplier"
            id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base"
            isAbstract="false"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.gnu.cygwin.IsGnuCygwinToolChainSupported"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetectorCygwin"
            name="%ToolChainName.llvm.clang.win32.cygwin"
            osList="win32"
            superClass="cdt.managedbuild.toolchain.llvm.clang.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.Cygwin_PE"
               id="cdt.managedbuild.target.llvm.win32.cygwin.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            configurationEnvironmentSupplier="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwEnvironmentVariableSupplier"
            id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base"
            isAbstract="false"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwIsToolChainSupported"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetectorMinGW"
            name="%ToolChainName.llvm.clang.win32.mingw"
            osList="win32"
            superClass="cdt.managedbuild.toolchain.llvm.clang.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.PE"
               id="cdt.managedbuild.target.llvm.win32.mingw.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.gnu.base"
            isAbstract="true"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetector"
            name="%ToolChainName.llvm.gnu"
            osList="all"
            secondaryOutputs="cdt.managedbuild.tool.llvm.c.linker.output.exe.bc"
            superClass="cdt.managedbuild.toolchain.llvm.base"
            targetTool="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base;cdt.managedbuild.tool.llvm.gnu.c.linker.base">
         <tool
               id="cdt.managedbuild.tool.llvm.gnu.c.compiler.base"
               isAbstract="true"
               name="%ToolName.compiler.llvm.gcc"
               superClass="cdt.managedbuild.tool.llvm.gcc.compiler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base"
               isAbstract="true"
               name="%ToolName.compiler.llvm.g++"
               superClass="cdt.managedbuild.tool.llvm.g++.compiler">
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.gnu.c.linker.base"
               isAbstract="true"
               name="%ToolName.linker.llvm.gcc"
               natureFilter="cnature"
               superClass="cdt.managedbuild.tool.llvm.gcc.linker">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
         </tool>
         <tool
               id="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base"
               isAbstract="true"
               name="%ToolName.linker.llvm.g++"
               natureFilter="ccnature"
               superClass="cdt.managedbuild.tool.llvm.g++.linker">
            <enablement
                  type="ALL">
               <not>
                  <checkBuildProperty
                        property="org.eclipse.cdt.build.core.buildArtefactType"
                        value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
                  </checkBuildProperty>
               </not>
            </enablement>
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.gnu.linux.base"
            isAbstract="false"
            name="%ToolChainName.llvm.gnu.linux"
            osList="linux,hpux,aix,qnx"
            superClass="cdt.managedbuild.toolchain.llvm.gnu.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.ELF"
               id="cdt.managedbuild.target.llvm.gnu.linux.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="linux,hpux,aix,qnx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.gnu.macosx.base"
            isAbstract="false"
            name="%ToolChainName.llvm.gnu.macosx"
            osList="macosx"
            superClass="cdt.managedbuild.toolchain.llvm.gnu.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.MachO64"
               id="cdt.managedbuild.target.llvm.gnu.macosx.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="macosx">
         </targetPlatform>
      </toolChain>      
      <toolChain
            archList="all"
            configurationEnvironmentSupplier="org.eclipse.cdt.managedbuilder.gnu.cygwin.GnuCygwinConfigurationEnvironmentSupplier"
            id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base"
            isAbstract="false"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.gnu.cygwin.IsGnuCygwinToolChainSupported"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetectorCygwin"
            name="%ToolChainName.llvm.gnu.win32.cygwin"
            osList="win32"
            superClass="cdt.managedbuild.toolchain.llvm.gnu.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.Cygwin_PE"
               id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            configurationEnvironmentSupplier="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwEnvironmentVariableSupplier"
            id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base"
            isAbstract="false"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwIsToolChainSupported"
            languageSettingsProviders="org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser;org.eclipse.cdt.managedbuilder.core.GCCBuiltinSpecsDetectorMinGW"
            name="%ToolChainName.llvm.gnu.win32.mingw"
            osList="win32"
            superClass="cdt.managedbuild.toolchain.llvm.gnu.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.PE"
               id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.with.static.compiler.base"
            isAbstract="true"
            name="%ToolChainName.llvm.with.static.compiler"
            osList="all"
            superClass="cdt.managedbuild.toolchain.llvm.base"
            targetTool="cdt.managedbuild.tool.llvm.llc.base">
         <tool
               id="cdt.managedbuild.tool.llvm.llc.base"
               isAbstract="true"
               name="%ToolName.llc.llvm"
               natureFilter="both"
               superClass="cdt.managedbuild.tool.llvm.llc">
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base"
            isAbstract="false"
            name="%ToolChainName.llvm.static.compiler.linux"
            osList="linux,hpux,aix,qnx"
            superClass="cdt.managedbuild.toolchain.llvm.with.static.compiler.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.ELF"
               id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="linux,hpux,aix,qnx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base"
            isAbstract="false"
            name="%ToolChainName.llvm.static.compiler.macosx"
            osList="macosx"
            superClass="cdt.managedbuild.toolchain.llvm.with.static.compiler.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.MachO64"
               id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="macosx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            configurationEnvironmentSupplier="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwEnvironmentVariableSupplier"
            id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base"
            isAbstract="false"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwIsToolChainSupported"
            name="%ToolChainName.llvm.static.compiler.win32"
            osList="win32"
            superClass="cdt.managedbuild.toolchain.llvm.with.static.compiler.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.PE"
               id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.jit.base"
            isAbstract="true"
            name="%ToolChainName.llvm.jit"
            osList="all"
            superClass="cdt.managedbuild.toolchain.llvm.base"
            targetTool="cdt.managedbuild.tool.llvm.lli.base">
         <tool
               id="cdt.managedbuild.tool.llvm.lli.base"
               isAbstract="true"
               name="%ToolName.lli.llvm"
               natureFilter="both"
               superClass="cdt.managedbuild.tool.llvm.lli">
         </tool>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.jit.linux.base"
            isAbstract="false"
            name="%ToolChainName.llvm.jit.linux"
            osList="linux,hpux,aix,qnx"
            superClass="cdt.managedbuild.toolchain.llvm.jit.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.ELF"
               id="cdt.managedbuild.target.llvm.jit.linux.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="linux,hpux,aix,qnx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            id="cdt.managedbuild.toolchain.llvm.jit.macosx.base"
            isAbstract="false"
            name="%ToolChainName.llvm.jit.macosx"
            osList="macosx"
            superClass="cdt.managedbuild.toolchain.llvm.jit.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.MachO64"
               id="cdt.managedbuild.target.llvm.jit.macosx.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="macosx">
         </targetPlatform>
      </toolChain>
      <toolChain
            archList="all"
            configurationEnvironmentSupplier="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwEnvironmentVariableSupplier"
            id="cdt.managedbuild.toolchain.llvm.jit.win32.base"
            isAbstract="false"
            isToolChainSupported="org.eclipse.cdt.managedbuilder.gnu.mingw.MingwIsToolChainSupported"
            name="%ToolChainName.llvm.jit.win32"
            osList="win32"
            superClass="cdt.managedbuild.toolchain.llvm.jit.base">
         <targetPlatform
               archList="all"
               binaryParser="org.eclipse.cdt.core.PE"
               id="cdt.managedbuild.target.llvm.jit.win32.platform.base"
               isAbstract="true"
               name="%PlatformName.Dbg"
               osList="win32">
         </targetPlatform>
      </toolChain>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.clang.linux.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;org.eclipse.cdt.managedbuilder.core.MBSLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.clang.linux.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.linux.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.clang.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.linux.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.clang.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.clang.linux.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.linux.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.clang.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.linux.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.linux.platform.so.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.linux.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.linux.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.clang.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.linux.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.linux.platform.so.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.linux.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.clang.linux.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.linux.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.clang.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.linux.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.linux.platform.lib.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.linux.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.linux.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.clang.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.linux.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.linux.platform.lib.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.linux.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.linux.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.clang.macosx.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;org.eclipse.cdt.managedbuilder.core.MBSLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.clang.macosx.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.macosx.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.clang.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.macosx.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.macosx.platform.exe.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.macosx.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.macosx.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.clang.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.macosx.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
               <targetPlatform
                     archList="al"
                     id="cdt.managedbuild.target.llvm.clang.macosx.platform.exe.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.macosx.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.clang.macosx.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.macosx.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.clang.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.macosx.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
               <targetPlatform
                     id="cdt.managedbuild.target.llvm.clang.macosx.platform.so.debug"
                     superClass="cdt.managedbuild.target.llvm.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.macosx.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.macosx.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.clang.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.macosx.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.macosx.platform.so.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.macosx.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.clang.macosx.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.macosx.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.clang.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.macosx.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.macosx.platform.lib.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.macosx.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.macosx.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.clang.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.macosx.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.macosx.platform.lib.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.macosx.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.macosx.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.clang.win32.cygwin.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;org.eclipse.cdt.managedbuilder.core.MBSLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
            <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.clang.win32.cygwin.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.cygwin.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.clang.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.platform.exe.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.cygwin..exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.clang.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.platform.exe.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.clang.win32.cygwin.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.cygwin.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.clang.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.platform.so.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.cygwin.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.clang.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.platform.so.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.clang.win32.cygwin.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.cygwin.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.clang.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.platform.lib.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.cygwin.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.clang.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.platform.lib.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.cygwin.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.cygwin.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
            <configuration
                  cleanCommand="rm -rf"
                  id="cdt.managedbuild.config.llvm.clang.win32.mingw.base"
                  languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;org.eclipse.cdt.managedbuilder.core.MBSLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.clang.win32.mingw.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.mingw.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.clang.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.exe.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.mingw..exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.clang.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.exe.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.clang.win32.mingw.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.mingw.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.clang.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.so.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.mingw.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.clang.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.so.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.clang.win32.mingw.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.mingw.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.clang.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.lib.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.clang.win32.mingw.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.clang.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.platform.lib.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.clang.win32.mingw.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.clang.win32.mingw.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.gnu.linux.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;org.eclipse.cdt.managedbuilder.core.MBSLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.gnu.linux.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.linux.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.gnu.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.linux.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.linux.platform.exe.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.gnu.linux.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.linux.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.linux.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.gnu.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.linux.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.linux.platform.exe.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.gnu.linux.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.linux.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.gnu.linux.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.linux.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.gnu.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.linux.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.linux.platform.so.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.gnu.linux.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.linux.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.linker.so.debug"
                     isAbstract="true"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.linux.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.gnu.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.linux.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.linux.platform.so.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.gnu.linux.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.linux.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.gnu.linux.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.linux.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.gnu.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.linux.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.linux.platform.lib.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.gnu.linux.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.linux.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.linker.lib.debug"
                     isAbstract="true"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.linux.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.gnu.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.linux.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.linux.platform.lib.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.gnu.linux.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.linux.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.linux.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.gnu.macosx.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.gnu.macosx.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.macosx.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.macosx.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.macosx.platform.exe.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.gnu.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.macosx.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.macosx.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.macosx.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
               <targetPlatform
                     id="cdt.managedbuild.target.llvm.gnu.macosx.platform.exe.release"
                     superClass="cdt.managedbuild.target.llvm.gnu.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.macosx.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.gnu.macosx.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.macosx.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.macosx.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.macosx.platform.so.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.gnu.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.macosx.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.linker.so.debug"
                     isAbstract="true"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.macosx.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.macosx.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.macosx.platform.so.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.gnu.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.macosx.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.gnu.macosx.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.macosx.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.macosx.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.macosx.platform.lib.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.gnu.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.macosx.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.linker.lib.debug"
                     isAbstract="true"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.macosx.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.gnu.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.macosx.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.macosx.platform.lib.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.gnu.macosx.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.macosx.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.macosx.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            artifactExtension="exe"
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;org.eclipse.cdt.managedbuilder.core.MBSLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.exe.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.exe.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.so.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.so.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.lib.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.cygwin.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.gnu.win32.cygwin.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.lib.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.cygwin.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.cygwin.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.cygwin.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            artifactExtension="exe"
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.gnu.win32.mingw.base"
            languageSettingsProviders="org.eclipse.cdt.ui.UserLanguageSettingsProvider;org.eclipse.cdt.core.ReferencedProjectsLanguageSettingsProvider;org.eclipse.cdt.managedbuilder.core.MBSLanguageSettingsProvider;${Toolchain};-org.eclipse.cdt.managedbuilder.core.GCCBuildCommandParser">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.config.llvm.gnu.win32.mingw.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.mingw.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.gnu.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.exe.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.compiler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.linker.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.mingw.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.gnu.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.exe.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.compiler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.linker.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.config.llvm.gnu.win32.mingw.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.mingw.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.gnu.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.so.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.compiler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.linker.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.mingw.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.gnu.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.so.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.compiler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.linker.so.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.config.llvm.gnu.win32.mingw.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.mingw.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.gnu.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.lib.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.compiler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.linker.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.gnu.win32.mingw.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.gnu.win32.mingw.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.lib.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.gnu.win32.mingw.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.gnu.win32.mingw.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.compiler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.compiler.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.c.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.c.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.cpp.linker.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.gnu.cpp.linker.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.gnu.win32.mingw.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.static.compiler.linux.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.static.compiler.linux.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.linux.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.static.compiler.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.exe.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.llc.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.linux.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.static.compiler.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.exe.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.llc.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.static.compiler.linux.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.linux.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.static.compiler.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.so.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.llc.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.linux.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.static.compiler.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.so.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.llc.so.release"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.static.compiler.linux.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.linux.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.static.compiler.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.lib.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.llc.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.linux.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.static.compiler.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.platform.lib.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.linux.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.llc.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.llc.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.linux.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
            <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.static.compiler.macosx.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.macosx.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.exe.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.llc.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.macosx.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.exe.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.llc.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.static.compiler.macosx.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.macosx.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.so.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.llc.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.macosx.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.so.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.llc.so.release"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.static.compiler.macosx.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.macosx.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.lib.debug"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.llc.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.macosx.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.static.compiler.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.platform.lib.release"
                     osList="macosx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.macosx.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.llc.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.llc.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.macosx.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.static.compiler.win32.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.static.compiler.win32.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.win32.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.static.compiler.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.so.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.llc.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.win32.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.static.compiler.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.so.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.llc.so.release"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.static.compiler.win32.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.win32.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.static.compiler.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.exe.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.llc.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.win32.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.static.compiler.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.exe.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.llc.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.static.compiler.win32.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.win32.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.static.compiler.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.lib.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.llc.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.llc">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.static.compiler.win32.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.static.compiler.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.platform.lib.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.static.compiler.win32.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.llc.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.llc.base">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.static.compiler.win32.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.jit.linux.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.jit.linux.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.linux.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.jit.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.linux.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.linux.platform.exe.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.linux.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.lli.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.linux.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.jit.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.linux.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.linux.platform.exe.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.linux.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.lli.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.jit.linux.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.linux.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.jit.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.linux.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.linux.platform.so.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.linux.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.lli.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.linux.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.jit.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.ji.linux.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.linux.platform.so.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.linux.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.lli.so.release"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.jit.linux.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.linux.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.jit.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.linux.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.linux.platform.lib.debug"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.linux.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.lli.lib.debugebug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.linux.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.jit.linux.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.linux.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.linux.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.linux.platform.lib.release"
                     osList="linux,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.linux.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.lli.lib.releaseease"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.linux.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
            <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.jit.macosx.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="so">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.jit.macosx.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.macosx.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.jit.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.macosx.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.macosx.platform.exe.debug"
                     osList="macosx,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.macosx.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.lli.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.macosx.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.jit.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.macosx.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.macosx.platform.exe.release"
                     osList="macosx,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.macosx.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.lli.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.jit.macosx.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.macosx.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.jit.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.macosx.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.macosx.platform.so.debug"
                     osList="macosx,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.macosx.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.lli.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.macosx.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.jit.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.ji.macosx.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.macosx.platform.so.release"
                     osList="macosx,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.macosx.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.lli.so.release"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.jit.macosx.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.macosx.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.jit.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.macosx.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.macosx.platform.lib.debug"
                     osList="macosx,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.macosx.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.lli.lib.debugebug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.macosx.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.jit.macosx.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.macosx.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.macosx.platform.lib.release"
                     osList="macosx,hpux,aix,qnx"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.macosx.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.lli.lib.releaseease"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.macosx.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <configuration
            cleanCommand="rm -rf"
            id="cdt.managedbuild.config.llvm.jit.win32.base">
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="dll">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
            </checkBuildProperty>
         </enablement>
         <enablement
               attribute="artifactExtension"
               extensionAdjustment="false"
               type="CONTAINER_ATTRIBUTE"
               value="a">
            <checkBuildProperty
                  property="org.eclipse.cdt.build.core.buildArtefactType"
                  value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
            </checkBuildProperty>
         </enablement>
      </configuration>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="cdt.managedbuild.target.llvm.jit.win32.exe"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.win32.exe.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.jit.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.win32.exe.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.win32.platform.exe.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.win32.builder.exe.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.lli.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.assembler.exe.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.win32.exe.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.jit.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.win32.exe.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.win32.platform.exe.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.win32.builder.exe.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.lli.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.assembler.exe.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib"
            id="cdt.managedbuild.target.llvm.jit.win32.so"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.win32.so.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.jit.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.win32.so.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.win32.platform.so.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.win32.builder.so.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.lli.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.assembler.so.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.win32.so.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.jit.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.ji.win32.so.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.win32.platform.so.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.win32.builder.so.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.lli.so.release"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.assembler.so.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.staticLib"
            id="cdt.managedbuild.target.llvm.jit.win32.lib"
            isAbstract="false"
            isTest="false">
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.win32.lib.debug"
               name="%ConfigName.Dbg"
               parent="cdt.managedbuild.config.llvm.jit.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.win32.lib.debug"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.win32.platform.lib.debug"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.win32.builder.lib.debug"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.lli.lib.debugebug"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.assembler.lib.debug"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
         <configuration
               buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release"
               cleanCommand="rm -rf"
               id="cdt.managedbuild.config.llvm.jit.win32.lib.release"
               name="%ConfigName.Rel"
               parent="cdt.managedbuild.config.llvm.jit.win32.base">
            <toolChain
                  id="cdt.managedbuild.toolchain.llvm.jit.win32.lib.release"
                  superClass="cdt.managedbuild.toolchain.llvm.jit.win32.base">
               <targetPlatform
                     archList="all"
                     id="cdt.managedbuild.target.llvm.jit.win32.platform.lib.release"
                     osList="win32"
                     superClass="cdt.managedbuild.target.llvm.platform.base">
               </targetPlatform>
               <builder
                     id="cdt.managedbuild.target.llvm.jit.win32.builder.lib.release"
                     superClass="cdt.managedbuild.target.llvm.builder.base">
               </builder>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.lli.lib.releaseease"
                     superClass="cdt.managedbuild.tool.llvm.lli">
               </tool>
               <tool
                     id="cdt.managedbuild.tool.llvm.jit.win32.assembler.lib.release"
                     superClass="cdt.managedbuild.tool.llvm.assembler.base">
               </tool>
            </toolChain>
         </configuration>
      </projectType>
   </extension>
   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            category="org.eclipse.cdt.ui.preferences.CPluginPreferencePage"
            class="org.eclipse.cdt.managedbuilder.llvm.ui.preferences.LlvmPreferencePage"
            id="org.eclipse.cdt.managedbuilder.llvm.ui.preferences.LlvmPreferencePage"
            name="%page.name">
      </page>
   </extension>
   <extension
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="org.eclipse.cdt.managedbuilder.llvm.ui.preferences.PreferenceInitializer">
      </initializer>
   </extension>
   <extension
         id="llvm"
         name="%ContentType.LlvmBytecodeFileName"
         point="org.eclipse.cdt.managedbuilder.core.buildProperties">
      <propertyValue
            id="org.eclipse.cdt.managedbuilder.llvm.ui.buildArtefactType.bcexe"
            name="%BuildProperty.type.name.bcexe"
            property="org.eclipse.cdt.build.core.buildArtefactType">
      </propertyValue>
   </extension>
   <extension
         point="org.eclipse.core.contenttype.contentTypes">
      <content-type
            base-type="org.eclipse.cdt.core.binaryFile"
            file-extensions="bc"
            id="org.eclipse.cdt.managedbuilder.llvm.ui.llvmBytecode"
            name="%ContentType.LlvmBytecodeFileName"
            priority="normal">
      </content-type>
      <content-type
            base-type="org.eclipse.core.runtime.text"
            file-extensions="ll"
            id="org.eclipse.cdt.managedbuilder.llvm.ui.llvmAssemblySource"
            name="%ContentType.LlvmSourceFileName"
            priority="high">
      </content-type>
      <content-type
            id="org.eclipse.cdt.managedbuilder.llvm.ui.llvmExecutable"
            name="%ContentType.LlvmExecutableFileName"
            priority="normal">
      </content-type>
      <content-type
            base-type="org.eclipse.core.runtime.text"
            file-extensions="s"
            id="org.eclipse.cdt.managedbuilder.llvm.ui.llvmAssemblyCode"
            name="%ContentType.LlvmAssemblerCode"
            priority="normal">
      </content-type>
      <file-association
            content-type="org.eclipse.cdt.managedbuilder.llvm.ui.llvmBytecode"
            file-extensions="bc">
      </file-association>
      <file-association
            content-type="org.eclipse.cdt.managedbuilder.llvm.ui.llvmAssemblySource"
            file-extensions="ll">
      </file-association>
      <file-association
            content-type="org.eclipse.cdt.managedbuilder.llvm.ui.llvmExecutable"
            file-extensions="exe.bc">
      </file-association>
      <file-association
            content-type="org.eclipse.cdt.managedbuilder.llvm.ui.llvmAssemblyCode"
            file-extensions="s">
      </file-association>
   </extension>
   <extension
         point="org.eclipse.cdt.core.language">
      <language
            class="org.eclipse.cdt.core.model.AssemblyLanguage"
            id="llvmAssembly"
            name="%Language.LlvmAssembly">
         <contentType
               id="org.eclipse.cdt.managedbuilder.llvm.ui.llvmAssemblySource">
         </contentType>
      </language>
   </extension>
   <extension
         point="org.eclipse.cdt.core.templateAssociations">
      <template
            id="org.eclipse.cdt.build.core.templates.EmptyProject">
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.clang.linux.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.jit.linux.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.jit.win32.base">
         </toolChain>
      </template>
      <template
            id="org.eclipse.cdt.build.core.templates.HelloWorldCAnsiProject">
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.clang.linux.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.jit.linux.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.jit.win32.base">
         </toolChain>
      </template>
      <template
            id="org.eclipse.cdt.build.core.templates.HelloWorldCCProject">
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.clang.linux.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.clang.macosx.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.clang.win32.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.clang.win32.cygwin.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.clang.win32.mingw.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.gnu.linux.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.gnu.macosx.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.gnu.win32.cygwin.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.gnu.win32.mingw.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.static.compiler.linux.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.static.compiler.macosx.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.static.compiler.win32.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.jit.linux.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.jit.macosx.base">
         </toolChain>
         <toolChain
               id="cdt.managedbuild.toolchain.llvm.jit.win32.base">
         </toolChain>
      </template>
   </extension>
   <extension
         point="org.eclipse.help.toc">
      <toc
            file="help/toc.xml"
            primary="true">
      </toc>
   </extension>
   <extension
         id="llvmNature"
         name="%extension.name.2"
         point="org.eclipse.core.resources.natures">
      <runtime>
         <run
               class="org.eclipse.cdt.managedbuilder.llvm.ui.LlvmProjectNature">
         </run>
      </runtime>
   </extension>
</plugin>

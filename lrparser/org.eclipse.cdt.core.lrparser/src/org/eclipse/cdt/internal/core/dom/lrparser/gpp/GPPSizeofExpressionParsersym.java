/*******************************************************************************
* Copyright (c) 2006, 2010 IBM Corporation and others.
*
* This program and the accompanying materials
* are made available under the terms of the Eclipse Public License 2.0
* which accompanies this distribution, and is available at
* https://www.eclipse.org/legal/epl-2.0/
*
* SPDX-License-Identifier: EPL-2.0
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.gpp;

public interface GPPSizeofExpressionParsersym {
	public final static int TK__Complex = 14, TK__Imaginary = 15, TK_restrict = 30, TK_asm = 5, TK_auto = 32,
			TK_bool = 16, TK_break = 85, TK_case = 86, TK_catch = 122, TK_char = 17, TK_class = 62, TK_const = 28,
			TK_const_cast = 48, TK_continue = 87, TK_default = 88, TK_delete = 74, TK_do = 89, TK_double = 18,
			TK_dynamic_cast = 49, TK_else = 130, TK_enum = 63, TK_explicit = 33, TK_export = 95, TK_extern = 34,
			TK_false = 50, TK_float = 19, TK_for = 90, TK_friend = 35, TK_goto = 91, TK_if = 92, TK_inline = 36,
			TK_int = 20, TK_long = 21, TK_mutable = 37, TK_namespace = 67, TK_new = 75, TK_operator = 9,
			TK_private = 123, TK_protected = 124, TK_public = 125, TK_register = 38, TK_reinterpret_cast = 51,
			TK_return = 93, TK_short = 22, TK_signed = 23, TK_sizeof = 52, TK_static = 39, TK_static_cast = 53,
			TK_struct = 64, TK_switch = 94, TK_template = 54, TK_this = 55, TK_throw = 68, TK_try = 79, TK_true = 56,
			TK_typedef = 40, TK_typeid = 57, TK_typename = 13, TK_union = 65, TK_unsigned = 24, TK_using = 70,
			TK_virtual = 31, TK_void = 25, TK_volatile = 29, TK_wchar_t = 26, TK_while = 82, TK_integer = 58,
			TK_floating = 59, TK_charconst = 60, TK_stringlit = 41, TK_identifier = 1, TK_Completion = 2,
			TK_EndOfCompletion = 12, TK_Invalid = 131, TK_LeftBracket = 71, TK_LeftParen = 3, TK_Dot = 128,
			TK_DotStar = 105, TK_Arrow = 126, TK_ArrowStar = 99, TK_PlusPlus = 44, TK_MinusMinus = 45, TK_And = 11,
			TK_Star = 10, TK_Plus = 42, TK_Minus = 43, TK_Tilde = 8, TK_Bang = 46, TK_Slash = 106, TK_Percent = 107,
			TK_RightShift = 83, TK_LeftShift = 84, TK_LT = 66, TK_GT = 77, TK_LE = 96, TK_GE = 97, TK_EQ = 100,
			TK_NE = 101, TK_Caret = 102, TK_Or = 103, TK_AndAnd = 104, TK_OrOr = 108, TK_Question = 109, TK_Colon = 78,
			TK_ColonColon = 4, TK_DotDotDot = 98, TK_Assign = 80, TK_StarAssign = 110, TK_SlashAssign = 111,
			TK_PercentAssign = 112, TK_PlusAssign = 113, TK_MinusAssign = 114, TK_RightShiftAssign = 115,
			TK_LeftShiftAssign = 116, TK_AndAssign = 117, TK_CaretAssign = 118, TK_OrAssign = 119, TK_Comma = 73,
			TK_RightBracket = 127, TK_RightParen = 76, TK_RightBrace = 81, TK_SemiColon = 47, TK_LeftBrace = 72,
			TK_typeof = 27, TK___alignof__ = 61, TK___attribute__ = 6, TK___declspec = 7, TK_MAX = 120, TK_MIN = 121,
			TK_ERROR_TOKEN = 69, TK_EOF_TOKEN = 129;

	public final static String orderedTerminalSymbols[] = { "", "identifier", "Completion", "LeftParen", "ColonColon",
			"asm", "__attribute__", "__declspec", "Tilde", "operator", "Star", "And", "EndOfCompletion", "typename",
			"_Complex", "_Imaginary", "bool", "char", "double", "float", "int", "long", "short", "signed", "unsigned",
			"void", "wchar_t", "typeof", "const", "volatile", "restrict", "virtual", "auto", "explicit", "extern",
			"friend", "inline", "mutable", "register", "static", "typedef", "stringlit", "Plus", "Minus", "PlusPlus",
			"MinusMinus", "Bang", "SemiColon", "const_cast", "dynamic_cast", "false", "reinterpret_cast", "sizeof",
			"static_cast", "template", "this", "true", "typeid", "integer", "floating", "charconst", "__alignof__",
			"class", "enum", "struct", "union", "LT", "namespace", "throw", "ERROR_TOKEN", "using", "LeftBracket",
			"LeftBrace", "Comma", "delete", "new", "RightParen", "GT", "Colon", "try", "Assign", "RightBrace", "while",
			"RightShift", "LeftShift", "break", "case", "continue", "default", "do", "for", "goto", "if", "return",
			"switch", "export", "LE", "GE", "DotDotDot", "ArrowStar", "EQ", "NE", "Caret", "Or", "AndAnd", "DotStar",
			"Slash", "Percent", "OrOr", "Question", "StarAssign", "SlashAssign", "PercentAssign", "PlusAssign",
			"MinusAssign", "RightShiftAssign", "LeftShiftAssign", "AndAssign", "CaretAssign", "OrAssign", "MAX", "MIN",
			"catch", "private", "protected", "public", "Arrow", "RightBracket", "Dot", "EOF_TOKEN", "else", "Invalid" };

	public final static boolean isValidForParser = true;
}

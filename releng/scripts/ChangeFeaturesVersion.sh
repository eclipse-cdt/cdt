#!/bin/sh

# The script recursively updates all feature plugin versions starting
# at $root_dir from feature version $old_ver to $new_ver

old_ver=9\\.0\\.0 # Need to escape the . to avoid it matching any character
new_ver=9.1.0

root_dir=.

fix_main_versions()
{
    find releng/org.eclipse.cdt.sdk/META-INF -type f -name MANIFEST.MF \
        -exec sed -i s,Version:\ ${old_ver},Version:\ ${new_ver}, '{}' \;
    find releng/org.eclipse.cdt/META-INF -type f -name MANIFEST.MF \
        -exec sed -i s,Version:\ ${old_ver},Version:\ ${new_ver}, '{}' \;
}

fix_feature_xml()
{
    find $root_dir -type f -name feature.xml \
        -exec sed -i s,version=\"${old_ver},version=\"${new_ver}, '{}' \;
}

fix_pom_xml()
{
    find $root_dir -type f -name pom.xml \
        -exec sed -i s,version\>${old_ver},version\>${new_ver}, '{}' \;
}

fix_standalone_debugger()
{
    find 'debug/org.eclipse.cdt.debug.application.product' -type f -name 'debug.product' \
        -exec sed -i s,version=\"$old_ver,version=\"$new_ver, '{}' \;
    find 'debug/org.eclipse.cdt.debug.application' -type f -name 'plugin.properties' \
        -exec sed -i s,Release\ $old_ver,Release\ $new_ver, '{}' \;
}

old_ver_remaining_log=/tmp/remaingOldStrings.log
grep_for_remaining_old_version_string()
{
    egrep -r -e ${old_ver} ${root_dir} | grep -v "/target/" | grep -v "Binary file" | grep -vF .log | grep -v "Generated by javadoc" > ${old_ver_remaining_log}
    echo "Please CHECK the file\n   ${old_ver_remaining_log}\nfor any remaining instances"\
         "of ${old_ver} below directory:\n   $root_dir\nto make sure they were not forgotten."
    echo "Please also CHECK that all changes made are correct before committing"
}

fix_main_versions
fix_feature_xml
fix_pom_xml
fix_standalone_debugger
grep_for_remaining_old_version_string
